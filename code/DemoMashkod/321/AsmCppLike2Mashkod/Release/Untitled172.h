охота прямо в скрипте написать код который модефицирует AST сразу после того, как оно будет загружено.
охота модифицировать AST указаным в скрипте спопобом.
{
  auto ast=dev.compile(cpp);
  return;
  t_cpp_code cpp={
    struct vec2i{int x;int y;};
    return vec2i();
  }
  core={
    auto ast=cpp.toAST();
    ast.for_each_struct(){
      t_struct s;
      s.name;
    }
  }
}

ладно... как можно сделать в первом приблежении, можно просто взять и использовать системные костыли.

TAutoPtr<i_stat> pStructStat;
string name=get_name(pStructStat);
string codegen=name+" "+name+"(){"+name+" "+"tmp;return tmp;}";
pStructStat=load_stat(pStructStat.toText()+"\n"+codegen);

Вот так мы показали свои намеряния системе.

я могу у себя там прямо в коде воткнуть костыль который проверить это на уровне текста и выполнил тоже что-то похожее по смыслу.

есть скрипт.
скрипт состояит из секций кода.
некоторые секции кода - это выполняемый код.

есть текст.
мы построили из него AST.
теперь у нас есть AST.
у AST есть тип - t_script;
объекты типа t_script состоят из секций?
проблемма.

должны быть секции.
должны быть 


ладно - это всё здорово, но можно пока обойтись и без этого.



























