{
  {STRUCT("vec2i"){
    FIELD("int","x");
    FIELD("int","y");
  }}
  
  {STRUCT("qap_vertex"){
    FIELD("int","color");
    FIELD("vec2i","pos");
  }}
  
  {STRUCT("vector_qap_vertex"){
    FIELD("int","p");
    FIELD("int","n");
    FIELD("int","cap");
  }}
  
  {STRUCT("vector_int"){
    FIELD("int","p");
    FIELD("int","n");
    FIELD("int","cap");
  }}
  
  {STRUCT("vector_vec2i"){
    FIELD("int","p");
    FIELD("int","n");
  }}
  
  {STRUCT("t_out_dev"){
    FIELD("vector_qap_vertex","VA");
    FIELD("vector_int","IA");
    FIELD("int","color");
  }}
  
  {STRUCT("t_input"){
    FIELD("vec2i","mpos");
    FIELD("int","zDelta");
    FIELD("vector_int","kb_down");
    FIELD("vector_int","kb_changed");
  }}
  
  {STRUCT("t_dev"){
    FIELD("int","p");
  }}
  
  {STRUCT("t_mem"){
    FIELD("int","ptr");
    FIELD("int","size");
  }}
  
  {STRUCT("t_app"){
    FIELD("int","id");
    FIELD("vec2i","obj_pos");
    FIELD("vector_vec2i","arr");
    FIELD("t_out_dev","grid");
  }}
  
  {STRUCT("t_str"){
    FIELD("int","ptr");
    FIELD("int","n");
  }}
  
  {proc("func_g_ptr_addr()"){
    PARAM_RESULT("int");
    {
      {
        mov(eax,64);
        add(eax,7);
      }
      mov(ebx,1024);
      mul(ebx,eax);
      copy(result,ebx);
      ret();
    }
  }}
  
  {proc("func_g_mem_addr()"){
    PARAM_RESULT("int");
    {
      {
        mov(eax,64);
        add(eax,7);
      }
      mov(ebx,1024);
      mul(ebx,eax);
      add(ebx,8);
      copy(result,ebx);
      ret();
    }
  }}
  
  {proc("func_g_arr_addr()"){
    PARAM_RESULT("int");
    {
      {
        mov(eax,64);
        add(eax,7);
      }
      mov(ebx,1024);
      mul(ebx,eax);
      add(ebx,16);
      copy(result,ebx);
      ret();
    }
  }}
  
  {proc("func_CatmullRomEx(int,int,int,int,int,int)"){
    PARAM_RESULT("int");
    PARAM("int",param_p1);
    PARAM("int",param_p2);
    PARAM("int",param_p3);
    PARAM("int",param_p4);
    PARAM("int",param_t);
    PARAM("int",param_z);
    VAR("int",var_a);
    {
      mov(eax,param_p2);
      mov(var_a,eax);
    }
    VAR("int",var_b);
    {
      mov(eax,param_p3);
      sub(eax,param_p1);
      mov(var_b,eax);
    }
    VAR("int",var_c);
    {
      mov(eax,2);
      mul(eax,param_p1);
      push(eax);
      {
        mov(eax,5);
        mul(eax,param_p2);
      }
      pop(ebx);
      sub(ebx,eax);
      push(ebx);
      {
        mov(eax,4);
        mul(eax,param_p3);
      }
      pop(ebx);
      add(ebx,eax);
      sub(ebx,param_p4);
      mov(var_c,ebx);
    }
    VAR("int",var_d);
    {
      {
        mov(eax,param_p2);
        sub(eax,param_p3);
      }
      mov(ebx,3);
      mul(ebx,eax);
      add(ebx,param_p4);
      sub(ebx,param_p1);
      mov(var_d,ebx);
    }
    {
      {
        push(eax);
        mov(eax,var_d);
        mul(eax,param_t);
        div(eax,param_z);
        mov(ebx,eax);
        pop(eax);
      }
      mov(var_d,ebx);
    }
    {
      mov(ebx,var_c);
      add(var_d,ebx);
    }
    {
      {
        push(eax);
        mov(eax,var_d);
        mul(eax,param_t);
        div(eax,param_z);
        mov(ebx,eax);
        pop(eax);
      }
      mov(var_d,ebx);
    }
    {
      mov(ebx,var_b);
      add(var_d,ebx);
    }
    {
      {
        push(eax);
        mov(eax,var_d);
        mul(eax,param_t);
        div(eax,param_z);
        mov(ebx,eax);
        pop(eax);
      }
      mov(var_d,ebx);
    }
    {
      {
        mov(eax,var_d);
        div(eax,2);
      }
      mov(ebx,var_a);
      add(ebx,eax);
      copy(result,ebx);
      ret();
    }
  }}
  
  {proc("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)"){
    PARAM_RESULT("vec2i");
    PARAM("vec2i",param_a_);
    PARAM("vec2i",param_b);
    PARAM("vec2i",param_c);
    PARAM("vec2i",param_d_);
    PARAM("int",param_t);
    PARAM("int",param_z);
    VAR("vec2i",var_a);
    {
      copy(var_a,param_a_);
    }
    VAR("vec2i",var_d);
    {
      copy(var_d,param_d_);
    }
    VAR("int",var_m);
    {
      VAR("vec2i",tmp102);
      VAR("int",tmp103);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(param_b);
        push(param_c);
        call("func_sub(vec2i,vec2i)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp103);
        push(tmp102);
        call("func_hypot(vec2i)");
      }
      mov(eax,tmp103);
      mov(var_m,eax);
    }
    {
      VAR("vec2i",var_v);
      {
        VAR("vec2i",tmp102);
        {
          CALLER_SCOPE();
          pushlea(tmp102);
          push(var_a);
          push(param_b);
          call("func_sub(vec2i,vec2i)");
        }
        copy(var_v,tmp102);
      }
      VAR("int",var_D);
      {
        VAR("int",tmp101);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(var_v);
          call("func_hypot(vec2i)");
        }
        mov(eax,tmp101);
        mov(var_D,eax);
      }
      {
        jz("if_1000::end",var_D);
        {
          {
            VAR("vec2i",tmp103);
            VAR("vec2i",tmp105);
            VAR("vec2i",tmp106);
            {
              CALLER_SCOPE();
              pushlea(tmp103);
              push(var_v);
              push(var_m);
              call("func_mul(vec2i,int)");
            }
            {
              CALLER_SCOPE();
              pushlea(tmp105);
              push(tmp103);
              push(var_D);
              call("func_div(vec2i,int)");
            }
            {
              CALLER_SCOPE();
              pushlea(tmp106);
              push(param_b);
              push(tmp105);
              call("func_add(vec2i,vec2i)");
            }
            copy(var_a,tmp106);
          }
          jmp("if_1000::end");
        }
        label("if_1000::end");
      }
    }
    {
      VAR("vec2i",var_v);
      {
        VAR("vec2i",tmp102);
        {
          CALLER_SCOPE();
          pushlea(tmp102);
          push(var_d);
          push(param_c);
          call("func_sub(vec2i,vec2i)");
        }
        copy(var_v,tmp102);
      }
      VAR("int",var_D);
      {
        VAR("int",tmp101);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(var_v);
          call("func_hypot(vec2i)");
        }
        mov(eax,tmp101);
        mov(var_D,eax);
      }
      {
        jz("if_1001::end",var_D);
        {
          {
            VAR("vec2i",tmp103);
            VAR("vec2i",tmp105);
            VAR("vec2i",tmp106);
            {
              CALLER_SCOPE();
              pushlea(tmp103);
              push(var_v);
              push(var_m);
              call("func_mul(vec2i,int)");
            }
            {
              CALLER_SCOPE();
              pushlea(tmp105);
              push(tmp103);
              push(var_D);
              call("func_div(vec2i,int)");
            }
            {
              CALLER_SCOPE();
              pushlea(tmp106);
              push(param_c);
              push(tmp105);
              call("func_add(vec2i,vec2i)");
            }
            copy(var_d,tmp106);
          }
          jmp("if_1001::end");
        }
        label("if_1001::end");
      }
    }
    {
      VAR("int",tmp106);
      VAR("int",tmp113);
      VAR("vec2i",tmp114);
      {
        CALLER_SCOPE();
        pushlea(tmp106);
        push(var_a["x"]);
        push(param_b["x"]);
        push(param_c["x"]);
        push(var_d["x"]);
        push(param_t);
        push(param_z);
        call("func_CatmullRomEx(int,int,int,int,int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp113);
        push(var_a["y"]);
        push(param_b["y"]);
        push(param_c["y"]);
        push(var_d["y"]);
        push(param_t);
        push(param_z);
        call("func_CatmullRomEx(int,int,int,int,int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp114);
        push(tmp106);
        push(tmp113);
        call("func_vec2i(int,int)");
      }
      copy(result,tmp114);
      ret();
    }
  }}
  
  {proc("func_alloc(int)"){
    PARAM_RESULT("int");
    PARAM("int",param_size);
    VAR("int",var_g_addr);
    {
      VAR("int",tmp100);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        call("func_g_ptr_addr()");
      }
      mov(eax,tmp100);
      mov(var_g_addr,eax);
    }
    VAR("int",var_g_ptr);
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_g_addr);
        call("func_get_int(int)");
      }
      mov(eax,tmp101);
      mov(var_g_ptr,eax);
    }
    {
      not(eax,var_g_ptr);
      jz("if_1002::end",eax);
      {
        {
          VAR("int",var_ram_base);
          {
            {
              mov(eax,64);
              add(eax,8);
            }
            mov(ebx,1024);
            mul(ebx,eax);
            mov(var_ram_base,ebx);
          }
          {
            mov(ebx,var_ram_base);
            mov(var_g_ptr,ebx);
          }
        }
        jmp("if_1002::end");
      }
      label("if_1002::end");
    }
    {
      VAR("int",tmp101);
      VAR("int",tmp102);
      mov(eax,var_g_ptr);
      add(eax,param_size);
      copy(tmp101,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(var_g_addr);
        push(tmp101);
        call("func_set_int(int,int)");
      }
    }
    {
      copy(result,var_g_ptr);
      ret();
    }
  }}
  
    {proc("func_vec2i::mag()"){
      PARAM_RESULT("int");
      MEMBER("int",field_x);
      MEMBER("int",field_y);
      VAR_THIS_PTR();
      {
        VAR("int",tmp102);
        {
          CALLER_SCOPE();
          pushlea(tmp102);
          push(field_x);
          push(field_y);
          call("func_hypot(int,int)");
          mov(ecx,this_ptr);
        }
        copy(result,tmp102);
        ret();
      }
    }}
    
  {proc("func_vec2i::`ctor()"){
    MEMBER("int",field_x);
    MEMBER("int",field_y);
    VAR_THIS_PTR();
    mov(field_x,0);
    mov(field_y,0);
  }}
  
  {proc("func_vec2i(int,int)"){
    PARAM_RESULT("vec2i");
    PARAM("int",param_x);
    PARAM("int",param_y);
    VAR("vec2i",var_tmp);
    {
      lea(ecx,var_tmp);
      call("func_vec2i::`ctor()");
    }
    {
      mov(ebx,param_x);
      mov(var_tmp["x"],ebx);
    }
    {
      mov(ebx,param_y);
      mov(var_tmp["y"],ebx);
    }
    {
      copy(result,var_tmp);
      ret();
    }
  }}
  
  {proc("func_add(int,int)"){
    PARAM_RESULT("int");
    PARAM("int",param_addr);
    PARAM("int",param_v);
    {
      VAR("int",tmp102);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(param_addr);
        push(param_v);
        call("func_set_int(int,int)");
      }
      copy(result,tmp102);
      ret();
    }
  }}
  
  {proc("func_hypot(vec2i)"){
    PARAM_RESULT("int");
    PARAM("vec2i",param_v);
    {
      VAR("int",tmp102);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(param_v["x"]);
        push(param_v["y"]);
        call("func_hypot(int,int)");
      }
      copy(result,tmp102);
      ret();
    }
  }}
  
  {proc("func_sub(vec2i,vec2i)"){
    PARAM_RESULT("vec2i");
    PARAM("vec2i",param_a);
    PARAM("vec2i",param_b);
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      VAR("vec2i",tmp102);
      mov(eax,param_a["x"]);
      sub(eax,param_b["x"]);
      copy(tmp100,eax);
      mov(eax,param_a["y"]);
      sub(eax,param_b["y"]);
      copy(tmp101,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(tmp100);
        push(tmp101);
        call("func_vec2i(int,int)");
      }
      copy(result,tmp102);
      ret();
    }
  }}
  
  {proc("func_add(vec2i,vec2i)"){
    PARAM_RESULT("vec2i");
    PARAM("vec2i",param_a);
    PARAM("vec2i",param_b);
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      VAR("vec2i",tmp102);
      mov(eax,param_a["x"]);
      add(eax,param_b["x"]);
      copy(tmp100,eax);
      mov(eax,param_a["y"]);
      add(eax,param_b["y"]);
      copy(tmp101,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(tmp100);
        push(tmp101);
        call("func_vec2i(int,int)");
      }
      copy(result,tmp102);
      ret();
    }
  }}
  
  {proc("func_mul(vec2i,int)"){
    PARAM_RESULT("vec2i");
    PARAM("vec2i",param_a);
    PARAM("int",param_k);
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      VAR("vec2i",tmp102);
      mov(eax,param_a["x"]);
      mul(eax,param_k);
      copy(tmp100,eax);
      mov(eax,param_a["y"]);
      mul(eax,param_k);
      copy(tmp101,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(tmp100);
        push(tmp101);
        call("func_vec2i(int,int)");
      }
      copy(result,tmp102);
      ret();
    }
  }}
  
  {proc("func_div(vec2i,int)"){
    PARAM_RESULT("vec2i");
    PARAM("vec2i",param_a);
    PARAM("int",param_k);
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      VAR("vec2i",tmp102);
      mov(eax,param_a["x"]);
      div(eax,param_k);
      copy(tmp100,eax);
      mov(eax,param_a["y"]);
      div(eax,param_k);
      copy(tmp101,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(tmp100);
        push(tmp101);
        call("func_vec2i(int,int)");
      }
      copy(result,tmp102);
      ret();
    }
  }}
  
  {proc("func_get_int(int)"){
    PARAM_RESULT("int");
    PARAM("int",param_addr);
    VAR("int",var_out);
    {
      mov(var_out,0);
    }
    mov(eax,param_addr);mov(var_out,ptr[eax]);
    {
      copy(result,var_out);
      ret();
    }
  }}
  
  {proc("func_set_int(int,int)"){
    PARAM_RESULT("int");
    PARAM("int",param_addr);
    PARAM("int",param_v);
    mov(eax,param_addr);mov(ptr[eax],param_v);
    {
      mov(eax,param_addr);
      add(eax,1);
      copy(result,eax);
      ret();
    }
  }}
  
  {proc("func_setebx(int)"){
    PARAM_RESULT("int");
    PARAM("int",param_value);
    mov(ebx,param_value);
    {
      copy(result,0);
      ret();
    }
  }}
  
  {proc("func_hypot(int,int)"){
    PARAM_RESULT("int");
    PARAM("int",param_x);
    PARAM("int",param_y);
    VAR("int",var_out);
    {
      mov(var_out,0);
    }
    mov(eax,param_x);mov(ebx,param_y);hypot(eax,ebx);mov(var_out,eax);
    {
      copy(result,var_out);
      ret();
    }
  }}
  
  {proc("func_sqrt(int)"){
    PARAM_RESULT("int");
    PARAM("int",param_v);
    VAR("int",var_out);
    {
      mov(var_out,0);
    }
    sqrt(eax,param_v);mov(var_out,eax);
    {
      copy(result,var_out);
      ret();
    }
  }}
  
  {proc("func_QapAssert(int)"){
    PARAM_RESULT("int");
    PARAM("int",param_cond);
    {
      not(eax,param_cond);
      jz("if_1003::end",eax);
      {
        {
          label("Run-time error!");mov(err,-1);
        }
        jmp("if_1003::end");
      }
      label("if_1003::end");
    }
  }}
  
  {proc("func_QapAssert(int,int)"){
    PARAM_RESULT("int");
    PARAM("int",param_A);
    PARAM("int",param_B);
    {
      mov(eax,param_A);
      neq(eax,param_B);
      jz("if_1004::end",eax);
      {
        {
          label("Run-time error!");mov(err,-1);
        }
        jmp("if_1004::end");
      }
      label("if_1004::end");
    }
  }}
  
  {proc("func_min(int,int)"){
    PARAM_RESULT("int");
    PARAM("int",param_a);
    PARAM("int",param_b);
    {
      mov(eax,param_a);
      less(eax,param_b);
      jz("if_1005::end",eax);
      {
        {
          copy(result,param_a);
          ret();
        }
        jmp("if_1005::end");
      }
      label("if_1005::end");
    }
    {
      copy(result,param_b);
      ret();
    }
  }}
  
  {proc("func_max(int,int)"){
    PARAM_RESULT("int");
    PARAM("int",param_a);
    PARAM("int",param_b);
    {
      mov(eax,param_a);
      more(eax,param_b);
      jz("if_1006::end",eax);
      {
        {
          copy(result,param_a);
          ret();
        }
        jmp("if_1006::end");
      }
      label("if_1006::end");
    }
    {
      copy(result,param_b);
      ret();
    }
  }}
  
  {proc("func_clamp(int,int,int)"){
    PARAM_RESULT("int");
    PARAM("int",param_low);
    PARAM("int",param_top);
    PARAM("int",param_value);
    {
      VAR("int",tmp102);
      VAR("int",tmp104);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(param_low);
        push(param_value);
        call("func_max(int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp104);
        push(tmp102);
        push(param_top);
        call("func_min(int,int)");
      }
      copy(result,tmp104);
      ret();
    }
  }}
  
  {proc("func_qap_vertex::`ctor()"){
    MEMBER("int",field_color);
    MEMBER("vec2i",field_pos);
    VAR_THIS_PTR();
    mov(field_color,0);
    lea(ecx,field_pos);
    call("func_vec2i::`ctor()");
    mov(ecx,this_ptr);
  }}
  
  {proc("func_qap_vertex(int,vec2i)"){
    PARAM_RESULT("qap_vertex");
    PARAM("int",param_color);
    PARAM("vec2i",param_pos);
    VAR("qap_vertex",var_tmp);
    {
      lea(ecx,var_tmp);
      call("func_qap_vertex::`ctor()");
    }
    {
      mov(ebx,param_color);
      mov(var_tmp["color"],ebx);
    }
    {
      copy(var_tmp["pos"],param_pos);
    }
    {
      copy(result,var_tmp);
      ret();
    }
  }}
  
    {proc("func_vector_qap_vertex::reserve(int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_c);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            mov(eax,3);
            mul(eax,param_c);
            copy(tmp100,eax);
            {
              CALLER_SCOPE();
              pushlea(tmp101);
              push(tmp100);
              call("func_alloc(int)");
              mov(ecx,this_ptr);
            }
          }
          mov(ebx,tmp101);
          mov(field_p,ebx);
        }
        {
          mov(field_n,0);
        }
        {
          mov(ebx,param_c);
          mov(field_cap,ebx);
        }
        {
          copy(result,0);
          ret();
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::sys_add(int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_ref);
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(field_p);
            push(param_ref);
            call("func_set_int(int,int)");
            mov(ecx,this_ptr);
          }
          mov(ebx,tmp102);
          mov(field_p,ebx);
        }
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::sys_add(vec2i)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("vec2i",param_ref);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_ref["x"]);
            mov(ecx,this_ptr);
            call("func_vector_qap_vertex::sys_add(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_ref["y"]);
            mov(ecx,this_ptr);
            call("func_vector_qap_vertex::sys_add(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::add(int,vec2i)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_color);
        PARAM("vec2i",param_pos);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          mov(eax,field_n);
          less(eax,field_cap);
          copy(tmp100,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_QapAssert(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_color);
            mov(ecx,this_ptr);
            call("func_vector_qap_vertex::sys_add(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_pos);
            mov(ecx,this_ptr);
            call("func_vector_qap_vertex::sys_add(vec2i)");
            mov(ecx,this_ptr);
          }
        }
        inc(field_n);
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::add(qap_vertex)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("qap_vertex",param_ref);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          mov(eax,field_n);
          less(eax,field_cap);
          copy(tmp100,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_QapAssert(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_ref["color"]);
            mov(ecx,this_ptr);
            call("func_vector_qap_vertex::sys_add(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_ref["pos"]);
            mov(ecx,this_ptr);
            call("func_vector_qap_vertex::sys_add(vec2i)");
            mov(ecx,this_ptr);
          }
        }
        inc(field_n);
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::get_vec2i(int)"){
      PARAM_RESULT("vec2i");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_addr);
        {
          VAR("int",tmp101);
          VAR("int",tmp102);
          VAR("int",tmp103);
          VAR("vec2i",tmp104);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_addr);
            call("func_get_int(int)");
            mov(ecx,this_ptr);
          }
          mov(eax,param_addr);
          add(eax,1);
          copy(tmp102,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(tmp102);
            call("func_get_int(int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(tmp101);
            push(tmp103);
            call("func_vec2i(int,int)");
            mov(ecx,this_ptr);
          }
          copy(result,tmp104);
          ret();
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::get(int)"){
      PARAM_RESULT("qap_vertex");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_addr);
        {
          VAR("int",tmp101);
          VAR("int",tmp102);
          VAR("vec2i",tmp103);
          VAR("qap_vertex",tmp104);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_addr);
            call("func_get_int(int)");
            mov(ecx,this_ptr);
          }
          mov(eax,param_addr);
          add(eax,1);
          copy(tmp102,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(tmp102);
            mov(ecx,this_ptr);
            call("func_vector_qap_vertex::get_vec2i(int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(tmp101);
            push(tmp103);
            call("func_qap_vertex(int,vec2i)");
            mov(ecx,this_ptr);
          }
          copy(result,tmp104);
          ret();
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::at(int)"){
      PARAM_RESULT("qap_vertex");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_id);
        {
          VAR("int",tmp100);
          VAR("qap_vertex",tmp101);
          {
            mov(eax,param_id);
            sub(eax,field_n);
            mul(eax,3);
          }
          mov(ebx,field_p);
          add(ebx,eax);
          copy(tmp100,ebx);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            mov(ecx,this_ptr);
            call("func_vector_qap_vertex::get(int)");
            mov(ecx,this_ptr);
          }
          copy(result,tmp101);
          ret();
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::to_vector_int()"){
      PARAM_RESULT("vector_int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        VAR("vector_int",var_tmp);
        {
          lea(ecx,var_tmp);
          call("func_vector_int::`ctor()");
          mov(ecx,this_ptr);
        }
        {
          mov(ebx,field_p);
          mov(var_tmp["p"],ebx);
        }
        {
          {
            push(eax);
            mov(eax,field_n);
            mul(eax,3);
            mov(ebx,eax);
            pop(eax);
          }
          mov(var_tmp["n"],ebx);
        }
        {
          {
            push(eax);
            mov(eax,field_cap);
            mul(eax,3);
            mov(ebx,eax);
            pop(eax);
          }
          mov(var_tmp["cap"],ebx);
        }
        {
          copy(result,var_tmp);
          ret();
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::front()"){
      PARAM_RESULT("qap_vertex");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        VAR("int",tmp100);
        VAR("int",tmp101);
        mov(eax,field_n);
        more(eax,0);
        copy(tmp100,eax);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(tmp100);
          call("func_QapAssert(int)");
          mov(ecx,this_ptr);
        }
      }
      {
        VAR("qap_vertex",tmp101);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(0);
          mov(ecx,this_ptr);
          call("func_vector_qap_vertex::at(int)");
          mov(ecx,this_ptr);
        }
        copy(result,tmp101);
        ret();
      }
    }}
    
    {proc("func_vector_qap_vertex::back()"){
      PARAM_RESULT("qap_vertex");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        VAR("int",tmp100);
        VAR("int",tmp101);
        mov(eax,field_n);
        more(eax,0);
        copy(tmp100,eax);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(tmp100);
          call("func_QapAssert(int)");
          mov(ecx,this_ptr);
        }
      }
      {
        VAR("int",tmp100);
        VAR("qap_vertex",tmp101);
        mov(eax,field_n);
        sub(eax,1);
        copy(tmp100,eax);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(tmp100);
          mov(ecx,this_ptr);
          call("func_vector_qap_vertex::at(int)");
          mov(ecx,this_ptr);
        }
        copy(result,tmp101);
        ret();
      }
    }}
    
    {proc("func_vector_qap_vertex::clone()"){
      PARAM_RESULT("vector_qap_vertex");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        VAR("vector_qap_vertex",var_tmp);
        {
          lea(ecx,var_tmp);
          call("func_vector_qap_vertex::`ctor()");
          mov(ecx,this_ptr);
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(field_cap);
            lea(ecx,var_tmp);
            call("func_vector_qap_vertex::reserve(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",var_i);
          {
            mov(var_i,0);
          }
          jmp("for_8000::condition");
          label("for_8000::continue");
          {
            inc(var_i);
          }
          label("for_8000::condition");
          {
            mov(eax,var_i);
            less(eax,field_n);
            jz("for_8000::break",eax);
          }
          {
            {
              VAR("qap_vertex",tmp101);
              VAR("int",tmp102);
              {
                CALLER_SCOPE();
                pushlea(tmp101);
                push(var_i);
                mov(ecx,this_ptr);
                call("func_vector_qap_vertex::at(int)");
                mov(ecx,this_ptr);
              }
              {
                CALLER_SCOPE();
                pushlea(tmp102);
                push(tmp101);
                lea(ecx,var_tmp);
                call("func_vector_qap_vertex::add(qap_vertex)");
                mov(ecx,this_ptr);
              }
            }
            jmp("for_8000::continue");
          }
          label("for_8000::break");
        }
        {
          copy(result,var_tmp);
          ret();
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::is_equal(vector_qap_vertex)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("vector_qap_vertex",param_VA);
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(param_VA["n"]);
            push(field_n);
            call("func_QapAssert(int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",var_i);
          {
            mov(var_i,0);
          }
          jmp("for_8001::condition");
          label("for_8001::continue");
          {
            inc(var_i);
          }
          label("for_8001::condition");
          {
            mov(eax,var_i);
            less(eax,field_n);
            jz("for_8001::break",eax);
          }
          {
            {
              VAR("qap_vertex",var_a);
              {
                VAR("qap_vertex",tmp101);
                {
                  CALLER_SCOPE();
                  pushlea(tmp101);
                  push(var_i);
                  lea(ecx,param_VA);
                  call("func_vector_qap_vertex::at(int)");
                  mov(ecx,this_ptr);
                }
                copy(var_a,tmp101);
              }
              VAR("qap_vertex",var_b);
              {
                VAR("qap_vertex",tmp101);
                {
                  CALLER_SCOPE();
                  pushlea(tmp101);
                  push(var_i);
                  mov(ecx,this_ptr);
                  call("func_vector_qap_vertex::at(int)");
                  mov(ecx,this_ptr);
                }
                copy(var_b,tmp101);
              }
              {
                VAR("int",tmp102);
                {
                  CALLER_SCOPE();
                  pushlea(tmp102);
                  push(var_a["color"]);
                  push(var_b["color"]);
                  call("func_QapAssert(int,int)");
                  mov(ecx,this_ptr);
                }
              }
              {
                VAR("int",tmp102);
                {
                  CALLER_SCOPE();
                  pushlea(tmp102);
                  push(var_a["pos"]["x"]);
                  push(var_b["pos"]["x"]);
                  call("func_QapAssert(int,int)");
                  mov(ecx,this_ptr);
                }
              }
              {
                VAR("int",tmp102);
                {
                  CALLER_SCOPE();
                  pushlea(tmp102);
                  push(var_a["pos"]["y"]);
                  push(var_b["pos"]["y"]);
                  call("func_QapAssert(int,int)");
                  mov(ecx,this_ptr);
                }
              }
            }
            jmp("for_8001::continue");
          }
          label("for_8001::break");
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::addr_at(int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_id);
        {
          {
            mov(eax,param_id);
            sub(eax,field_n);
            mul(eax,3);
          }
          mov(ebx,field_p);
          add(ebx,eax);
          copy(result,ebx);
          ret();
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::add(vector_qap_vertex)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("vector_qap_vertex",param_VA);
        VAR("int",var_did);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(field_n);
            mov(ecx,this_ptr);
            call("func_vector_qap_vertex::addr_at(int)");
            mov(ecx,this_ptr);
          }
          mov(eax,tmp101);
          mov(var_did,eax);
        }
        VAR("int",var_sid);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(0);
            lea(ecx,param_VA);
            call("func_vector_qap_vertex::addr_at(int)");
            mov(ecx,this_ptr);
          }
          mov(eax,tmp101);
          mov(var_sid,eax);
        }
        VAR("int",var_van);
        {
          mov(eax,param_VA["n"]);
          mul(eax,3);
          mov(var_van,eax);
        }
        mov(edi,var_did);mov(esi,var_sid);
        mov(ecx,var_van);
        rep_movsd_inc();
        mov(ecx,this_ptr);
        {
          mov(ebx,param_VA["n"]);
          add(field_n,ebx);
        }
        {
          {
            push(eax);
            mov(eax,param_VA["n"]);
            mul(eax,3);
            mov(ebx,eax);
            pop(eax);
          }
          add(field_p,ebx);
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("vector_qap_vertex",param_VA);
        PARAM("vec2i",param_offset);
        VAR("int",var_did);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(field_n);
            mov(ecx,this_ptr);
            call("func_vector_qap_vertex::addr_at(int)");
            mov(ecx,this_ptr);
          }
          mov(eax,tmp101);
          mov(var_did,eax);
        }
        VAR("int",var_sid);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(0);
            lea(ecx,param_VA);
            call("func_vector_qap_vertex::addr_at(int)");
            mov(ecx,this_ptr);
          }
          mov(eax,tmp101);
          mov(var_sid,eax);
        }
        VAR("int",var_x);
        {
          mov(eax,param_offset["x"]);
          mov(var_x,eax);
        }
        VAR("int",var_y);
        {
          mov(eax,param_offset["y"]);
          mov(var_y,eax);
        }
        VAR("int",var_van);
        {
          mov(eax,param_VA["n"]);
          mov(var_van,eax);
        }
        mov(edi,var_did);mov(esi,var_sid);
        mov(eax,var_x);mov(ebx,var_y);
        mov(ecx,var_van);
        {
          LOOP_SCOPE();
          movsd_inc();
          addsd_inc(eax);addsd_inc(ebx);
        }
        mov(ecx,this_ptr);
        {
          mov(ebx,param_VA["n"]);
          add(field_n,ebx);
        }
        {
          {
            push(eax);
            mov(eax,param_VA["n"]);
            mul(eax,3);
            mov(ebx,eax);
            pop(eax);
          }
          add(field_p,ebx);
        }
      }
    }}
    
    {proc("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("vector_qap_vertex",param_VA);
        PARAM("int",param_color);
        PARAM("vec2i",param_offset);
        VAR("int",var_did);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(field_n);
            mov(ecx,this_ptr);
            call("func_vector_qap_vertex::addr_at(int)");
            mov(ecx,this_ptr);
          }
          mov(eax,tmp101);
          mov(var_did,eax);
        }
        VAR("int",var_sid);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(0);
            lea(ecx,param_VA);
            call("func_vector_qap_vertex::addr_at(int)");
            mov(ecx,this_ptr);
          }
          mov(eax,tmp101);
          mov(var_sid,eax);
        }
        VAR("int",var_x);
        {
          mov(eax,param_offset["x"]);
          mov(var_x,eax);
        }
        VAR("int",var_y);
        {
          mov(eax,param_offset["y"]);
          mov(var_y,eax);
        }
        VAR("int",var_van);
        {
          mov(eax,param_VA["n"]);
          mov(var_van,eax);
        }
        mov(edi,var_did);mov(esi,var_sid);
        mov(ebx,var_x);mov(edx,var_y);
        mov(ecx,var_van);
        {
          LOOP_SCOPE();
          inc(esi);mov(eax,param_color);stosd_inc();
          addsd_inc(ebx);addsd_inc(edx);
        }
        mov(ecx,this_ptr);
        {
          mov(ebx,param_VA["n"]);
          add(field_n,ebx);
        }
        {
          {
            push(eax);
            mov(eax,param_VA["n"]);
            mul(eax,3);
            mov(ebx,eax);
            pop(eax);
          }
          add(field_p,ebx);
        }
      }
    }}
    
  {proc("func_vector_qap_vertex::`ctor()"){
    MEMBER("int",field_p);
    MEMBER("int",field_n);
    MEMBER("int",field_cap);
    VAR_THIS_PTR();
    mov(field_p,0);
    mov(field_n,0);
    mov(field_cap,0);
  }}
  
    {proc("func_vector_int::reserve(int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_c);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            mov(eax,1);
            mul(eax,param_c);
            copy(tmp100,eax);
            {
              CALLER_SCOPE();
              pushlea(tmp101);
              push(tmp100);
              call("func_alloc(int)");
              mov(ecx,this_ptr);
            }
          }
          mov(ebx,tmp101);
          mov(field_p,ebx);
        }
        {
          mov(field_n,0);
        }
        {
          mov(ebx,param_c);
          mov(field_cap,ebx);
        }
        {
          copy(result,0);
          ret();
        }
      }
    }}
    
    {proc("func_vector_int::add(int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_ref);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          mov(eax,field_n);
          less(eax,field_cap);
          copy(tmp100,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_QapAssert(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(field_p);
            push(param_ref);
            call("func_set_int(int,int)");
            mov(ecx,this_ptr);
          }
          mov(ebx,tmp102);
          mov(field_p,ebx);
        }
        inc(field_n);
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_vector_int::get(int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_addr);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_addr);
            call("func_get_int(int)");
            mov(ecx,this_ptr);
          }
          copy(result,tmp101);
          ret();
        }
      }
    }}
    
    {proc("func_vector_int::at(int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_id);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          mov(eax,field_p);
          add(eax,param_id);
          sub(eax,field_n);
          copy(tmp100,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            mov(ecx,this_ptr);
            call("func_vector_int::get(int)");
            mov(ecx,this_ptr);
          }
          copy(result,tmp101);
          ret();
        }
      }
    }}
    
    {proc("func_vector_int::front()"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        VAR("int",tmp100);
        VAR("int",tmp101);
        mov(eax,field_n);
        more(eax,0);
        copy(tmp100,eax);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(tmp100);
          call("func_QapAssert(int)");
          mov(ecx,this_ptr);
        }
      }
      {
        VAR("int",tmp101);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(0);
          mov(ecx,this_ptr);
          call("func_vector_int::at(int)");
          mov(ecx,this_ptr);
        }
        copy(result,tmp101);
        ret();
      }
    }}
    
    {proc("func_vector_int::back()"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        VAR("int",tmp100);
        VAR("int",tmp101);
        mov(eax,field_n);
        more(eax,0);
        copy(tmp100,eax);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(tmp100);
          call("func_QapAssert(int)");
          mov(ecx,this_ptr);
        }
      }
      {
        VAR("int",tmp100);
        VAR("int",tmp101);
        mov(eax,field_n);
        sub(eax,1);
        copy(tmp100,eax);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(tmp100);
          mov(ecx,this_ptr);
          call("func_vector_int::at(int)");
          mov(ecx,this_ptr);
        }
        copy(result,tmp101);
        ret();
      }
    }}
    
    {proc("func_vector_int::addr_at(int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("int",param_id);
        {
          {
            mov(eax,param_id);
            sub(eax,field_n);
            mul(eax,1);
          }
          mov(ebx,field_p);
          add(ebx,eax);
          copy(result,ebx);
          ret();
        }
      }
    }}
    
    {proc("func_vector_int::add_mega_fast(vector_int,int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      MEMBER("int",field_cap);
      VAR_THIS_PTR();
      {
        PARAM("vector_int",param_IA);
        PARAM("int",param_vpos);
        VAR("int",var_sp);
        {
          mov(eax,param_IA["p"]);
          sub(eax,param_IA["n"]);
          mov(var_sp,eax);
        }
        VAR("int",var_c);
        {
          mov(eax,param_IA["n"]);
          mov(var_c,eax);
        }
        mov(edx,param_vpos);mov(eax,field_p);
        {
          jmp("for_8002::condition");
          label("for_8002::continue");
          {
            dec(var_c);
          }
          label("for_8002::condition");
          {
            jz("for_8002::break",var_c);
          }
          {
            {
              mov(ebx,var_sp);mov(ebx,ptr[ebx]);add(ebx,edx);mov(ptr[eax],ebx);inc(eax);
              inc(var_sp);
            }
            jmp("for_8002::continue");
          }
          label("for_8002::break");
        }
        {
          mov(ebx,param_IA["n"]);
          add(field_n,ebx);
        }
        {
          mov(ebx,param_IA["n"]);
          add(field_p,ebx);
        }
      }
    }}
    
  {proc("func_vector_int::`ctor()"){
    MEMBER("int",field_p);
    MEMBER("int",field_n);
    MEMBER("int",field_cap);
    VAR_THIS_PTR();
    mov(field_p,0);
    mov(field_n,0);
    mov(field_cap,0);
  }}
  
    {proc("func_vector_vec2i::sys_add(int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      VAR_THIS_PTR();
      {
        PARAM("int",param_ref);
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(field_p);
            push(param_ref);
            call("func_set_int(int,int)");
            mov(ecx,this_ptr);
          }
          mov(ebx,tmp102);
          mov(field_p,ebx);
        }
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_vector_vec2i::add(vec2i)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      VAR_THIS_PTR();
      {
        PARAM("vec2i",param_ref);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_ref["x"]);
            mov(ecx,this_ptr);
            call("func_vector_vec2i::sys_add(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_ref["y"]);
            mov(ecx,this_ptr);
            call("func_vector_vec2i::sys_add(int)");
            mov(ecx,this_ptr);
          }
        }
        inc(field_n);
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_vector_vec2i::get(int)"){
      PARAM_RESULT("vec2i");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      VAR_THIS_PTR();
      {
        PARAM("int",param_addr);
        {
          VAR("int",tmp101);
          VAR("int",tmp102);
          VAR("int",tmp103);
          VAR("vec2i",tmp104);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_addr);
            call("func_get_int(int)");
            mov(ecx,this_ptr);
          }
          mov(eax,param_addr);
          add(eax,1);
          copy(tmp102,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(tmp102);
            call("func_get_int(int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(tmp101);
            push(tmp103);
            call("func_vec2i(int,int)");
            mov(ecx,this_ptr);
          }
          copy(result,tmp104);
          ret();
        }
      }
    }}
    
    {proc("func_vector_vec2i::addr_at(int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      VAR_THIS_PTR();
      {
        PARAM("int",param_id);
        {
          {
            mov(eax,param_id);
            sub(eax,field_n);
            mul(eax,2);
          }
          mov(ebx,field_p);
          add(ebx,eax);
          copy(result,ebx);
          ret();
        }
      }
    }}
    
    {proc("func_vector_vec2i::at(int)"){
      PARAM_RESULT("vec2i");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      VAR_THIS_PTR();
      {
        PARAM("int",param_id);
        {
          VAR("int",tmp100);
          VAR("vec2i",tmp101);
          {
            mov(eax,param_id);
            sub(eax,field_n);
            mul(eax,2);
          }
          mov(ebx,field_p);
          add(ebx,eax);
          copy(tmp100,ebx);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            mov(ecx,this_ptr);
            call("func_vector_vec2i::get(int)");
            mov(ecx,this_ptr);
          }
          copy(result,tmp101);
          ret();
        }
      }
    }}
    
    {proc("func_vector_vec2i::CatmullRom(vector_vec2i,int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      MEMBER("int",field_n);
      VAR_THIS_PTR();
      {
        PARAM("vector_vec2i",param_arr);
        PARAM("int",param_id);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          mov(eax,param_arr["n"]);
          nless(eax,2);
          copy(tmp100,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_QapAssert(int)");
            mov(ecx,this_ptr);
          }
        }
        VAR("int",var_n);
        {
          mov(eax,param_arr["n"]);
          mov(var_n,eax);
        }
        VAR("vec2i",var_a);
        {
          VAR("int",tmp101);
          VAR("int",tmp102);
          VAR("int",tmp103);
          VAR("vec2i",tmp104);
          mov(eax,var_n);
          sub(eax,1);
          copy(tmp101,eax);
          mov(eax,param_id);
          sub(eax,1);
          copy(tmp102,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(0);
            push(tmp101);
            push(tmp102);
            call("func_clamp(int,int,int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(tmp103);
            lea(ecx,param_arr);
            call("func_vector_vec2i::at(int)");
            mov(ecx,this_ptr);
          }
          copy(var_a,tmp104);
        }
        VAR("vec2i",var_b);
        {
          VAR("int",tmp101);
          VAR("int",tmp102);
          VAR("int",tmp103);
          VAR("vec2i",tmp104);
          mov(eax,var_n);
          sub(eax,1);
          copy(tmp101,eax);
          mov(eax,param_id);
          add(eax,0);
          copy(tmp102,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(0);
            push(tmp101);
            push(tmp102);
            call("func_clamp(int,int,int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(tmp103);
            lea(ecx,param_arr);
            call("func_vector_vec2i::at(int)");
            mov(ecx,this_ptr);
          }
          copy(var_b,tmp104);
        }
        VAR("vec2i",var_c);
        {
          VAR("int",tmp101);
          VAR("int",tmp102);
          VAR("int",tmp103);
          VAR("vec2i",tmp104);
          mov(eax,var_n);
          sub(eax,1);
          copy(tmp101,eax);
          mov(eax,param_id);
          add(eax,1);
          copy(tmp102,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(0);
            push(tmp101);
            push(tmp102);
            call("func_clamp(int,int,int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(tmp103);
            lea(ecx,param_arr);
            call("func_vector_vec2i::at(int)");
            mov(ecx,this_ptr);
          }
          copy(var_c,tmp104);
        }
        VAR("vec2i",var_d);
        {
          VAR("int",tmp101);
          VAR("int",tmp102);
          VAR("int",tmp103);
          VAR("vec2i",tmp104);
          mov(eax,var_n);
          sub(eax,1);
          copy(tmp101,eax);
          mov(eax,param_id);
          add(eax,2);
          copy(tmp102,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(0);
            push(tmp101);
            push(tmp102);
            call("func_clamp(int,int,int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(tmp103);
            lea(ecx,param_arr);
            call("func_vector_vec2i::at(int)");
            mov(ecx,this_ptr);
          }
          copy(var_d,tmp104);
        }
        VAR("int",var_point_count);
        {
          VAR("vec2i",tmp102);
          VAR("int",tmp103);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(var_b);
            push(var_c);
            call("func_sub(vec2i,vec2i)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(tmp102);
            call("func_hypot(vec2i)");
            mov(ecx,this_ptr);
          }
          mov(eax,tmp103);
          div(eax,32);
          mov(var_point_count,eax);
        }
        VAR("int",var_z);
        {
          mov(eax,var_point_count);
          mov(var_z,eax);
        }
        {
          VAR("int",var_i);
          {
            mov(var_i,0);
          }
          jmp("for_8003::condition");
          label("for_8003::continue");
          {
            inc(var_i);
          }
          label("for_8003::condition");
          {
            mov(eax,var_i);
            less(eax,var_point_count);
            jz("for_8003::break",eax);
          }
          {
            {
              VAR("int",var_t);
              {
                mov(eax,var_i);
                mul(eax,var_z);
                div(eax,var_point_count);
                mov(var_t,eax);
              }
              {
                VAR("vec2i",tmp106);
                VAR("int",tmp107);
                {
                  CALLER_SCOPE();
                  pushlea(tmp106);
                  push(var_a);
                  push(var_b);
                  push(var_c);
                  push(var_d);
                  push(var_t);
                  push(var_z);
                  call("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)");
                  mov(ecx,this_ptr);
                }
                {
                  CALLER_SCOPE();
                  pushlea(tmp107);
                  push(tmp106);
                  mov(ecx,this_ptr);
                  call("func_vector_vec2i::add(vec2i)");
                  mov(ecx,this_ptr);
                }
              }
            }
            jmp("for_8003::continue");
          }
          label("for_8003::break");
        }
        {
          VAR("vec2i",tmp106);
          VAR("int",tmp107);
          {
            CALLER_SCOPE();
            pushlea(tmp106);
            push(var_a);
            push(var_b);
            push(var_c);
            push(var_d);
            push(var_z);
            push(var_z);
            call("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp107);
            push(tmp106);
            mov(ecx,this_ptr);
            call("func_vector_vec2i::add(vec2i)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
  {proc("func_vector_vec2i::`ctor()"){
    MEMBER("int",field_p);
    MEMBER("int",field_n);
    VAR_THIS_PTR();
    mov(field_p,0);
    mov(field_n,0);
  }}
  
    {proc("func_t_out_dev::AddTris(int,int,int)"){
      PARAM_RESULT("int");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("int",param_a);
        PARAM("int",param_b);
        PARAM("int",param_c);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_a);
            lea(ecx,field_IA);
            call("func_vector_int::add(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_b);
            lea(ecx,field_IA);
            call("func_vector_int::add(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_c);
            lea(ecx,field_IA);
            call("func_vector_int::add(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,0);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::AddVertex(qap_vertex)"){
      PARAM_RESULT("int");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("qap_vertex",param_qv);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_qv);
            lea(ecx,field_VA);
            call("func_vector_qap_vertex::add(qap_vertex)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,0);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::AddVertex(int,int)"){
      PARAM_RESULT("int");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("int",param_x);
        PARAM("int",param_y);
        {
          VAR("vec2i",tmp103);
          VAR("int",tmp104);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(param_x);
            push(param_y);
            call("func_vec2i(int,int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(field_color);
            push(tmp103);
            lea(ecx,field_VA);
            call("func_vector_qap_vertex::add(int,vec2i)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,0);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::AddVertex(vec2i)"){
      PARAM_RESULT("int");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("vec2i",param_pos);
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(field_color);
            push(param_pos);
            lea(ecx,field_VA);
            call("func_vector_qap_vertex::add(int,vec2i)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,0);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::AddVertexAndRetVID(vec2i)"){
      PARAM_RESULT("int");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("vec2i",param_pos);
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(field_color);
            push(param_pos);
            lea(ecx,field_VA);
            call("func_vector_qap_vertex::add(int,vec2i)");
            mov(ecx,this_ptr);
          }
        }
        {
          mov(eax,field_VA["n"]);
          sub(eax,1);
          copy(result,eax);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::add(t_out_dev)"){
      PARAM_RESULT("int");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("t_out_dev",param_geom);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            mov(eax,param_geom["IA"]["n"]);
            mod(eax,3);
          }
          mov(ebx,0);
          eq(ebx,eax);
          copy(tmp100,ebx);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_QapAssert(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(param_geom["IA"]);
            push(field_VA["n"]);
            lea(ecx,field_IA);
            call("func_vector_int::add_mega_fast(vector_int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_geom["VA"]);
            lea(ecx,field_VA);
            call("func_vector_qap_vertex::add(vector_qap_vertex)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,0);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::add_wo(t_out_dev,vec2i)"){
      PARAM_RESULT("int");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("t_out_dev",param_geom);
        PARAM("vec2i",param_offset);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            mov(eax,param_geom["IA"]["n"]);
            mod(eax,3);
          }
          mov(ebx,0);
          eq(ebx,eax);
          copy(tmp100,ebx);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_QapAssert(int)");
            mov(ecx,this_ptr);
          }
        }
        VAR("int",var_vpos);
        {
          mov(eax,field_VA["n"]);
          mov(var_vpos,eax);
        }
        {
          VAR("int",var_i);
          {
            mov(var_i,0);
          }
          jmp("for_8004::condition");
          label("for_8004::continue");
          {
            inc(var_i);
          }
          label("for_8004::condition");
          {
            mov(eax,var_i);
            less(eax,param_geom["VA"]["n"]);
            jz("for_8004::break",eax);
          }
          {
            {
              VAR("qap_vertex",var_tmp);
              {
                VAR("qap_vertex",tmp101);
                {
                  CALLER_SCOPE();
                  pushlea(tmp101);
                  push(var_i);
                  lea(ecx,param_geom["VA"]);
                  call("func_vector_qap_vertex::at(int)");
                  mov(ecx,this_ptr);
                }
                copy(var_tmp,tmp101);
              }
              {
                VAR("vec2i",tmp102);
                {
                  CALLER_SCOPE();
                  pushlea(tmp102);
                  push(var_tmp["pos"]);
                  push(param_offset);
                  mov(ecx,this_ptr);
                  call("func_add(vec2i,vec2i)");
                  mov(ecx,this_ptr);
                }
                copy(var_tmp["pos"],tmp102);
              }
              {
                VAR("int",tmp101);
                {
                  CALLER_SCOPE();
                  pushlea(tmp101);
                  push(var_tmp);
                  lea(ecx,field_VA);
                  call("func_vector_qap_vertex::add(qap_vertex)");
                  mov(ecx,this_ptr);
                }
              }
            }
            jmp("for_8004::continue");
          }
          label("for_8004::break");
        }
        {
          VAR("int",var_i);
          {
            mov(var_i,0);
          }
          jmp("for_8005::condition");
          label("for_8005::continue");
          {
            inc(var_i);
          }
          label("for_8005::condition");
          {
            mov(eax,var_i);
            less(eax,param_geom["IA"]["n"]);
            jz("for_8005::break",eax);
          }
          {
            {
              VAR("int",tmp101);
              VAR("int",tmp102);
              VAR("int",tmp103);
              {
                CALLER_SCOPE();
                pushlea(tmp101);
                push(var_i);
                lea(ecx,param_geom["IA"]);
                call("func_vector_int::at(int)");
                mov(ecx,this_ptr);
              }
              mov(eax,var_vpos);
              add(eax,tmp101);
              copy(tmp102,eax);
              {
                CALLER_SCOPE();
                pushlea(tmp103);
                push(tmp102);
                lea(ecx,field_IA);
                call("func_vector_int::add(int)");
                mov(ecx,this_ptr);
              }
            }
            jmp("for_8005::continue");
          }
          label("for_8005::break");
        }
        {
          copy(result,0);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::add_with_offset(t_out_dev,vec2i)"){
      PARAM_RESULT("int");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("t_out_dev",param_geom);
        PARAM("vec2i",param_offset);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            mov(eax,1024);
            mul(eax,16);
            mul(eax,4);
          }
          mov(ebx,field_VA["n"]);
          less(ebx,eax);
          copy(tmp100,ebx);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_QapAssert(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            mov(eax,param_geom["IA"]["n"]);
            mod(eax,3);
          }
          mov(ebx,0);
          eq(ebx,eax);
          copy(tmp100,ebx);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_QapAssert(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(param_geom["IA"]);
            push(field_VA["n"]);
            lea(ecx,field_IA);
            call("func_vector_int::add_mega_fast(vector_int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(param_geom["VA"]);
            push(param_offset);
            lea(ecx,field_VA);
            call("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,0);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::add_with_color(t_out_dev,vec2i)"){
      PARAM_RESULT("int");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("t_out_dev",param_geom);
        PARAM("vec2i",param_offset);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            mov(eax,1024);
            mul(eax,16);
            mul(eax,4);
          }
          mov(ebx,field_VA["n"]);
          less(ebx,eax);
          copy(tmp100,ebx);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_QapAssert(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            mov(eax,param_geom["IA"]["n"]);
            mod(eax,3);
          }
          mov(ebx,0);
          eq(ebx,eax);
          copy(tmp100,ebx);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_QapAssert(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(param_geom["IA"]);
            push(field_VA["n"]);
            lea(ecx,field_IA);
            call("func_vector_int::add_mega_fast(vector_int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp103);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(param_geom["VA"]);
            push(field_color);
            push(param_offset);
            lea(ecx,field_VA);
            call("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,0);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::add_wc(t_out_dev,vec2i)"){
      PARAM_RESULT("int");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("t_out_dev",param_geom);
        PARAM("vec2i",param_offset);
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            mov(eax,param_geom["IA"]["n"]);
            mod(eax,3);
          }
          mov(ebx,0);
          eq(ebx,eax);
          copy(tmp100,ebx);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_QapAssert(int)");
            mov(ecx,this_ptr);
          }
        }
        VAR("int",var_vpos);
        {
          mov(eax,field_VA["n"]);
          mov(var_vpos,eax);
        }
        {
          VAR("int",var_i);
          {
            mov(var_i,0);
          }
          jmp("for_8006::condition");
          label("for_8006::continue");
          {
            inc(var_i);
          }
          label("for_8006::condition");
          {
            mov(eax,var_i);
            less(eax,param_geom["VA"]["n"]);
            jz("for_8006::break",eax);
          }
          {
            {
              VAR("qap_vertex",var_tmp);
              {
                VAR("qap_vertex",tmp101);
                {
                  CALLER_SCOPE();
                  pushlea(tmp101);
                  push(var_i);
                  lea(ecx,param_geom["VA"]);
                  call("func_vector_qap_vertex::at(int)");
                  mov(ecx,this_ptr);
                }
                copy(var_tmp,tmp101);
              }
              {
                mov(ebx,field_color);
                mov(var_tmp["color"],ebx);
              }
              {
                VAR("vec2i",tmp102);
                {
                  CALLER_SCOPE();
                  pushlea(tmp102);
                  push(var_tmp["pos"]);
                  push(param_offset);
                  mov(ecx,this_ptr);
                  call("func_add(vec2i,vec2i)");
                  mov(ecx,this_ptr);
                }
                copy(var_tmp["pos"],tmp102);
              }
              {
                VAR("int",tmp101);
                {
                  CALLER_SCOPE();
                  pushlea(tmp101);
                  push(var_tmp);
                  lea(ecx,field_VA);
                  call("func_vector_qap_vertex::add(qap_vertex)");
                  mov(ecx,this_ptr);
                }
              }
            }
            jmp("for_8006::continue");
          }
          label("for_8006::break");
        }
        {
          VAR("int",var_i);
          {
            mov(var_i,0);
          }
          jmp("for_8007::condition");
          label("for_8007::continue");
          {
            inc(var_i);
          }
          label("for_8007::condition");
          {
            mov(eax,var_i);
            less(eax,param_geom["IA"]["n"]);
            jz("for_8007::break",eax);
          }
          {
            {
              VAR("int",tmp101);
              VAR("int",tmp102);
              VAR("int",tmp103);
              {
                CALLER_SCOPE();
                pushlea(tmp101);
                push(var_i);
                lea(ecx,param_geom["IA"]);
                call("func_vector_int::at(int)");
                mov(ecx,this_ptr);
              }
              mov(eax,var_vpos);
              add(eax,tmp101);
              copy(tmp102,eax);
              {
                CALLER_SCOPE();
                pushlea(tmp103);
                push(tmp102);
                lea(ecx,field_IA);
                call("func_vector_int::add(int)");
                mov(ecx,this_ptr);
              }
            }
            jmp("for_8007::continue");
          }
          label("for_8007::break");
        }
        {
          copy(result,0);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::GenGeomQuad(int,int)"){
      PARAM_RESULT("t_out_dev");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("int",param_w);
        PARAM("int",param_h);
        {
          VAR("t_out_dev",tmp104);
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(0);
            push(0);
            push(param_w);
            push(param_h);
            mov(ecx,this_ptr);
            call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
            mov(ecx,this_ptr);
          }
          copy(result,tmp104);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::GenGeomQuad(vec2i,int,int)"){
      PARAM_RESULT("t_out_dev");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("vec2i",param_p);
        PARAM("int",param_w);
        PARAM("int",param_h);
        {
          VAR("t_out_dev",tmp104);
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(param_p["x"]);
            push(param_p["y"]);
            push(param_w);
            push(param_h);
            mov(ecx,this_ptr);
            call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
            mov(ecx,this_ptr);
          }
          copy(result,tmp104);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::GenGeomQuad(int,int,int,int)"){
      PARAM_RESULT("t_out_dev");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("int",param_x);
        PARAM("int",param_y);
        PARAM("int",param_w);
        PARAM("int",param_h);
        VAR("t_out_dev",var_geom);
        {
          VAR("t_out_dev",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(1);
            call("func_new_geom(int)");
            mov(ecx,this_ptr);
          }
          copy(var_geom,tmp101);
        }
        {
          mov(ebx,field_color);
          mov(var_geom["color"],ebx);
        }
        VAR("int",var_hx);
        {
          mov(eax,param_w);
          div(eax,2);
          mov(var_hx,eax);
        }
        VAR("int",var_hy);
        {
          mov(eax,param_h);
          div(eax,2);
          mov(var_hy,eax);
        }
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          VAR("int",tmp102);
          mov(eax,param_x);
          sub(eax,var_hx);
          copy(tmp100,eax);
          mov(eax,param_y);
          sub(eax,var_hy);
          copy(tmp101,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(tmp100);
            push(tmp101);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddVertex(int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          VAR("int",tmp102);
          mov(eax,param_x);
          add(eax,var_hx);
          copy(tmp100,eax);
          mov(eax,param_y);
          sub(eax,var_hy);
          copy(tmp101,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(tmp100);
            push(tmp101);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddVertex(int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          VAR("int",tmp102);
          mov(eax,param_x);
          add(eax,var_hx);
          copy(tmp100,eax);
          mov(eax,param_y);
          add(eax,var_hy);
          copy(tmp101,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(tmp100);
            push(tmp101);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddVertex(int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          VAR("int",tmp102);
          mov(eax,param_x);
          sub(eax,var_hx);
          copy(tmp100,eax);
          mov(eax,param_y);
          add(eax,var_hy);
          copy(tmp101,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(tmp100);
            push(tmp101);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddVertex(int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp103);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(1);
            push(0);
            push(3);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddTris(int,int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp103);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(3);
            push(2);
            push(1);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddTris(int,int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,var_geom);
          ret();
        }
      }
    }}
    
    {proc("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)"){
      PARAM_RESULT("t_out_dev");
      MEMBER("vector_qap_vertex",field_VA);
      MEMBER("vector_int",field_IA);
      MEMBER("int",field_color);
      VAR_THIS_PTR();
      {
        PARAM("vec2i",param_a);
        PARAM("vec2i",param_b);
        PARAM("int",param_hls);
        VAR("t_out_dev",var_geom);
        {
          VAR("t_out_dev",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(1);
            call("func_new_geom(int)");
            mov(ecx,this_ptr);
          }
          copy(var_geom,tmp101);
        }
        {
          mov(ebx,field_color);
          mov(var_geom["color"],ebx);
        }
        VAR("vec2i",var_ab);
        {
          VAR("vec2i",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(param_b);
            push(param_a);
            call("func_sub(vec2i,vec2i)");
            mov(ecx,this_ptr);
          }
          copy(var_ab,tmp102);
        }
        VAR("vec2i",var_n);
        {
          VAR("vec2i",tmp101);
          VAR("vec2i",tmp103);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(var_ab);
            call("func_ort(vec2i)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(tmp101);
            push(param_hls);
            call("func_set_mag(vec2i,int)");
            mov(ecx,this_ptr);
          }
          copy(var_n,tmp103);
        }
        VAR("vec2i",var_d);
        {
          VAR("vec2i",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(var_ab);
            push(var_n);
            mov(ecx,this_ptr);
            call("func_add(vec2i,vec2i)");
            mov(ecx,this_ptr);
          }
          copy(var_d,tmp102);
        }
        {
          VAR("vec2i",tmp103);
          VAR("vec2i",tmp104);
          VAR("int",tmp105);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(var_n);
            push(1);
            call("func_mul(vec2i,int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(param_a);
            push(tmp103);
            mov(ecx,this_ptr);
            call("func_add(vec2i,vec2i)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp105);
            push(tmp104);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddVertex(vec2i)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp102);
          VAR("vec2i",tmp103);
          VAR("vec2i",tmp104);
          VAR("int",tmp105);
          inv(eax,1);
          copy(tmp102,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(var_n);
            push(tmp102);
            call("func_mul(vec2i,int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(param_a);
            push(tmp103);
            mov(ecx,this_ptr);
            call("func_add(vec2i,vec2i)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp105);
            push(tmp104);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddVertex(vec2i)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp102);
          VAR("vec2i",tmp103);
          VAR("vec2i",tmp104);
          VAR("int",tmp105);
          inv(eax,1);
          copy(tmp102,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(var_n);
            push(tmp102);
            call("func_mul(vec2i,int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(param_b);
            push(tmp103);
            mov(ecx,this_ptr);
            call("func_add(vec2i,vec2i)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp105);
            push(tmp104);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddVertex(vec2i)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("vec2i",tmp103);
          VAR("vec2i",tmp104);
          VAR("int",tmp105);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(var_n);
            push(1);
            call("func_mul(vec2i,int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp104);
            push(param_b);
            push(tmp103);
            mov(ecx,this_ptr);
            call("func_add(vec2i,vec2i)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp105);
            push(tmp104);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddVertex(vec2i)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp103);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(1);
            push(0);
            push(3);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddTris(int,int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp103);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(3);
            push(2);
            push(1);
            lea(ecx,var_geom);
            call("func_t_out_dev::AddTris(int,int,int)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,var_geom);
          ret();
        }
      }
    }}
    
  {proc("func_t_out_dev::`ctor()"){
    MEMBER("vector_qap_vertex",field_VA);
    MEMBER("vector_int",field_IA);
    MEMBER("int",field_color);
    VAR_THIS_PTR();
    lea(ecx,field_VA);
    call("func_vector_qap_vertex::`ctor()");
    mov(ecx,this_ptr);
    lea(ecx,field_IA);
    call("func_vector_int::`ctor()");
    mov(ecx,this_ptr);
    mov(field_color,0);
  }}
  
  {proc("func_ort(vec2i)"){
    PARAM_RESULT("vec2i");
    PARAM("vec2i",param_v);
    {
      VAR("int",tmp101);
      VAR("vec2i",tmp102);
      inv(eax,param_v["x"]);
      copy(tmp101,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(param_v["y"]);
        push(tmp101);
        call("func_vec2i(int,int)");
      }
      copy(result,tmp102);
      ret();
    }
  }}
  
  {proc("func_set_mag(vec2i,int)"){
    PARAM_RESULT("vec2i");
    PARAM("vec2i",param_v);
    PARAM("int",param_mag);
    {
      VAR("vec2i",tmp102);
      VAR("int",tmp103);
      VAR("vec2i",tmp104);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(param_v);
        push(param_mag);
        call("func_mul(vec2i,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp103);
        lea(ecx,param_v);
        call("func_vec2i::mag()");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp104);
        push(tmp102);
        push(tmp103);
        call("func_div(vec2i,int)");
      }
      copy(result,tmp104);
      ret();
    }
  }}
  
  {proc("func_new_geom(int)"){
    PARAM_RESULT("t_out_dev");
    PARAM("int",param_n);
    VAR("t_out_dev",var_tmp);
    {
      lea(ecx,var_tmp);
      call("func_t_out_dev::`ctor()");
    }
    {
      {
        push(eax);
        mov(eax,255);
        shl(eax,24);
        mov(ebx,eax);
        pop(eax);
      }
      mov(var_tmp["color"],ebx);
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      mov(eax,4);
      mul(eax,param_n);
      copy(tmp100,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(tmp100);
        lea(ecx,var_tmp["VA"]);
        call("func_vector_qap_vertex::reserve(int)");
      }
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      mov(eax,6);
      mul(eax,param_n);
      copy(tmp100,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(tmp100);
        lea(ecx,var_tmp["IA"]);
        call("func_vector_int::reserve(int)");
      }
    }
    {
      copy(result,var_tmp);
      ret();
    }
  }}
  
    {proc("func_t_input::kb_on_down(int)"){
      PARAM_RESULT("int");
      MEMBER("vec2i",field_mpos);
      MEMBER("int",field_zDelta);
      MEMBER("vector_int",field_kb_down);
      MEMBER("vector_int",field_kb_changed);
      VAR_THIS_PTR();
      {
        PARAM("int",param_id);
        {
          VAR("int",tmp101);
          VAR("int",tmp103);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_id);
            lea(ecx,field_kb_down);
            call("func_vector_int::at(int)");
            mov(ecx,this_ptr);
          }
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(param_id);
            lea(ecx,field_kb_changed);
            call("func_vector_int::at(int)");
            mov(ecx,this_ptr);
          }
          mov(eax,tmp101);
          and(eax,tmp103);
          copy(result,eax);
          ret();
        }
      }
    }}
    
    {proc("func_t_input::kb_on_up(int)"){
      PARAM_RESULT("int");
      MEMBER("vec2i",field_mpos);
      MEMBER("int",field_zDelta);
      MEMBER("vector_int",field_kb_down);
      MEMBER("vector_int",field_kb_changed);
      VAR_THIS_PTR();
      {
        PARAM("int",param_id);
        {
          VAR("int",tmp101);
          VAR("int",tmp103);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_id);
            lea(ecx,field_kb_down);
            call("func_vector_int::at(int)");
            mov(ecx,this_ptr);
          }
          not(eax,tmp101);
          push(eax);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(param_id);
            lea(ecx,field_kb_changed);
            call("func_vector_int::at(int)");
            mov(ecx,this_ptr);
          }
          pop(eax);
          and(eax,tmp103);
          copy(result,eax);
          ret();
        }
      }
    }}
    
  {proc("func_t_input::`ctor()"){
    MEMBER("vec2i",field_mpos);
    MEMBER("int",field_zDelta);
    MEMBER("vector_int",field_kb_down);
    MEMBER("vector_int",field_kb_changed);
    VAR_THIS_PTR();
    lea(ecx,field_mpos);
    call("func_vec2i::`ctor()");
    mov(ecx,this_ptr);
    mov(field_zDelta,0);
    lea(ecx,field_kb_down);
    call("func_vector_int::`ctor()");
    mov(ecx,this_ptr);
    lea(ecx,field_kb_changed);
    call("func_vector_int::`ctor()");
    mov(ecx,this_ptr);
  }}
  
    {proc("func_t_dev::read_int()"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        VAR("int",var_v);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(field_p);
            call("func_get_int(int)");
            mov(ecx,this_ptr);
          }
          mov(eax,tmp101);
          mov(var_v,eax);
        }
        inc(field_p);
        {
          copy(result,var_v);
          ret();
        }
      }
    }}
    
    {proc("func_t_dev::read_vec2i()"){
      PARAM_RESULT("vec2i");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        VAR("int",tmp100);
        VAR("int",tmp101);
        VAR("vec2i",tmp102);
        {
          CALLER_SCOPE();
          pushlea(tmp100);
          mov(ecx,this_ptr);
          call("func_t_dev::read_int()");
          mov(ecx,this_ptr);
        }
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          mov(ecx,this_ptr);
          call("func_t_dev::read_int()");
          mov(ecx,this_ptr);
        }
        {
          CALLER_SCOPE();
          pushlea(tmp102);
          push(tmp100);
          push(tmp101);
          call("func_vec2i(int,int)");
          mov(ecx,this_ptr);
        }
        copy(result,tmp102);
        ret();
      }
    }}
    
    {proc("func_t_dev::read_vector_int()"){
      PARAM_RESULT("vector_int");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        VAR("vector_int",var_tmp);
        {
          lea(ecx,var_tmp);
          call("func_vector_int::`ctor()");
          mov(ecx,this_ptr);
        }
        {
          VAR("int",tmp100);
          {
            CALLER_SCOPE();
            pushlea(tmp100);
            mov(ecx,this_ptr);
            call("func_t_dev::read_int()");
            mov(ecx,this_ptr);
          }
          mov(ebx,tmp100);
          mov(var_tmp["n"],ebx);
        }
        {
          mov(ebx,var_tmp["n"]);
          add(field_p,ebx);
        }
        {
          mov(ebx,field_p);
          mov(var_tmp["p"],ebx);
        }
        {
          copy(result,var_tmp);
          ret();
        }
      }
    }}
    
    {proc("func_t_dev::read_IA()"){
      PARAM_RESULT("vector_int");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        VAR("vector_int",tmp100);
        {
          CALLER_SCOPE();
          pushlea(tmp100);
          mov(ecx,this_ptr);
          call("func_t_dev::read_vector_int()");
          mov(ecx,this_ptr);
        }
        copy(result,tmp100);
        ret();
      }
    }}
    
    {proc("func_t_dev::read_VA()"){
      PARAM_RESULT("vector_qap_vertex");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        VAR("vector_qap_vertex",var_tmp);
        {
          lea(ecx,var_tmp);
          call("func_vector_qap_vertex::`ctor()");
          mov(ecx,this_ptr);
        }
        {
          VAR("int",tmp100);
          {
            CALLER_SCOPE();
            pushlea(tmp100);
            mov(ecx,this_ptr);
            call("func_t_dev::read_int()");
            mov(ecx,this_ptr);
          }
          mov(ebx,tmp100);
          mov(var_tmp["n"],ebx);
        }
        {
          {
            push(eax);
            mov(eax,var_tmp["n"]);
            mul(eax,3);
            mov(ebx,eax);
            pop(eax);
          }
          add(field_p,ebx);
        }
        {
          mov(ebx,field_p);
          mov(var_tmp["p"],ebx);
        }
        {
          copy(result,var_tmp);
          ret();
        }
      }
    }}
    
    {proc("func_t_dev::read_geom()"){
      PARAM_RESULT("t_out_dev");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        VAR("t_out_dev",var_od);
        {
          lea(ecx,var_od);
          call("func_t_out_dev::`ctor()");
          mov(ecx,this_ptr);
        }
        {
          VAR("vector_qap_vertex",tmp100);
          {
            CALLER_SCOPE();
            pushlea(tmp100);
            mov(ecx,this_ptr);
            call("func_t_dev::read_VA()");
            mov(ecx,this_ptr);
          }
          copy(var_od["VA"],tmp100);
        }
        {
          VAR("vector_int",tmp100);
          {
            CALLER_SCOPE();
            pushlea(tmp100);
            mov(ecx,this_ptr);
            call("func_t_dev::read_IA()");
            mov(ecx,this_ptr);
          }
          copy(var_od["IA"],tmp100);
        }
        {
          copy(result,var_od);
          ret();
        }
      }
    }}
    
    {proc("func_t_dev::read_vector_vec2i()"){
      PARAM_RESULT("vector_vec2i");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        VAR("vector_vec2i",var_tmp);
        {
          lea(ecx,var_tmp);
          call("func_vector_vec2i::`ctor()");
          mov(ecx,this_ptr);
        }
        {
          VAR("int",tmp100);
          {
            CALLER_SCOPE();
            pushlea(tmp100);
            mov(ecx,this_ptr);
            call("func_t_dev::read_int()");
            mov(ecx,this_ptr);
          }
          mov(ebx,tmp100);
          mov(var_tmp["n"],ebx);
        }
        {
          {
            push(eax);
            mov(eax,var_tmp["n"]);
            mul(eax,2);
            mov(ebx,eax);
            pop(eax);
          }
          add(field_p,ebx);
        }
        {
          mov(ebx,field_p);
          mov(var_tmp["p"],ebx);
        }
        {
          copy(result,var_tmp);
          ret();
        }
      }
    }}
    
    {proc("func_t_dev::write(int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        PARAM("int",param_ref);
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(field_p);
            push(param_ref);
            call("func_set_int(int,int)");
            mov(ecx,this_ptr);
          }
          mov(ebx,tmp102);
          mov(field_p,ebx);
        }
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_t_dev::write(int,int,int)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        PARAM("int",param_c);
        PARAM("int",param_x);
        PARAM("int",param_y);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_c);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_x);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_y);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_t_dev::write(vec2i)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        PARAM("vec2i",param_pos);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_pos["x"]);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_pos["y"]);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_t_dev::write(int,vec2i)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        PARAM("int",param_c);
        PARAM("vec2i",param_pos);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_c);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_pos["x"]);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_pos["y"]);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_t_dev::write(qap_vertex)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        PARAM("qap_vertex",param_v);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_v["color"]);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_v["pos"]);
            mov(ecx,this_ptr);
            call("func_t_dev::write(vec2i)");
            mov(ecx,this_ptr);
          }
        }
        {
          copy(result,field_p);
          ret();
        }
      }
    }}
    
    {proc("func_t_dev::write(vector_vec2i)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        PARAM("vector_vec2i",param_arr);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_arr["n"]);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",var_n);
          {
            mov(eax,param_arr["n"]);
            mul(eax,2);
            mov(var_n,eax);
          }
          VAR("int",var_sp);
          {
            VAR("int",tmp101);
            {
              CALLER_SCOPE();
              pushlea(tmp101);
              push(0);
              lea(ecx,param_arr);
              call("func_vector_vec2i::addr_at(int)");
              mov(ecx,this_ptr);
            }
            mov(eax,tmp101);
            mov(var_sp,eax);
          }
          mov(esi,var_sp);mov(edi,field_p);
          push(ecx);mov(ecx,var_n);rep_movsd_inc();pop(ecx);
          {
            mov(ebx,var_n);
            add(field_p,ebx);
          }
        }
      }
    }}
    
    {proc("func_t_dev::write(t_out_dev)"){
      PARAM_RESULT("int");
      MEMBER("int",field_p);
      VAR_THIS_PTR();
      {
        PARAM("t_out_dev",param_dev);
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_dev["VA"]["n"]);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",var_n);
          {
            mov(eax,param_dev["VA"]["n"]);
            mul(eax,3);
            mov(var_n,eax);
          }
          VAR("int",var_sp);
          {
            VAR("int",tmp101);
            {
              CALLER_SCOPE();
              pushlea(tmp101);
              push(0);
              lea(ecx,param_dev["VA"]);
              call("func_vector_qap_vertex::addr_at(int)");
              mov(ecx,this_ptr);
            }
            mov(eax,tmp101);
            mov(var_sp,eax);
          }
          mov(esi,var_sp);mov(edi,field_p);
          push(ecx);mov(ecx,var_n);rep_movsd_inc();pop(ecx);
          {
            {
              push(eax);
              mov(eax,param_dev["VA"]["n"]);
              mul(eax,3);
              mov(ebx,eax);
              pop(eax);
            }
            add(field_p,ebx);
          }
        }
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(param_dev["IA"]["n"]);
            mov(ecx,this_ptr);
            call("func_t_dev::write(int)");
            mov(ecx,this_ptr);
          }
        }
        {
          VAR("int",var_sp);
          {
            VAR("int",tmp101);
            {
              CALLER_SCOPE();
              pushlea(tmp101);
              push(0);
              lea(ecx,param_dev["IA"]);
              call("func_vector_int::addr_at(int)");
              mov(ecx,this_ptr);
            }
            mov(eax,tmp101);
            mov(var_sp,eax);
          }
          VAR("int",var_n);
          {
            mov(eax,param_dev["IA"]["n"]);
            mov(var_n,eax);
          }
          {
            VAR("int",tmp101);
            VAR("int",tmp102);
            mov(eax,var_n);
            mod(eax,3);
            copy(tmp101,eax);
            {
              CALLER_SCOPE();
              pushlea(tmp102);
              push(0);
              push(tmp101);
              call("func_QapAssert(int,int)");
              mov(ecx,this_ptr);
            }
          }
          mov(esi,var_sp);mov(edi,field_p);
          push(ecx);mov(ecx,var_n);rep_movsd_inc();pop(ecx);
          {
            mov(ebx,param_dev["IA"]["n"]);
            add(field_p,ebx);
          }
        }
      }
    }}
    
  {proc("func_t_dev::`ctor()"){
    MEMBER("int",field_p);
    VAR_THIS_PTR();
    mov(field_p,0);
  }}
  
  {proc("func_t_mem::`ctor()"){
    MEMBER("int",field_ptr);
    MEMBER("int",field_size);
    VAR_THIS_PTR();
    mov(field_ptr,0);
    mov(field_size,0);
  }}
  
  {proc("func_g_obj_addr()"){
    PARAM_RESULT("int");
    {
      {
        mov(eax,64);
        add(eax,7);
      }
      mov(ebx,1024);
      mul(ebx,eax);
      add(ebx,512);
      copy(result,ebx);
      ret();
    }
  }}
  
  {proc("func_get_obj_pos(t_input,int)"){
    PARAM_RESULT("vec2i");
    PARAM("t_input",param_inp);
    PARAM("int",param_zoom);
    VAR("vec2i",var_obj);
    {
      VAR("int",tmp100);
      VAR("vec2i",tmp102);
      VAR("vec2i",tmp104);
      inv(eax,0);
      copy(tmp100,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(tmp100);
        push(0);
        call("func_vec2i(int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp104);
        push(tmp102);
        push(param_zoom);
        call("func_mul(vec2i,int)");
      }
      copy(var_obj,tmp104);
    }
    VAR("int",var_obj_addr);
    {
      VAR("int",tmp100);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        call("func_g_obj_addr()");
      }
      mov(eax,tmp100);
      mov(var_obj_addr,eax);
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      mov(eax,var_obj_addr);
      add(eax,2);
      copy(tmp100,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(tmp100);
        call("func_get_int(int)");
      }
      jz("if_1007::else",tmp101);
      {
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            mov(eax,var_obj_addr);
            add(eax,0);
            copy(tmp100,eax);
            {
              CALLER_SCOPE();
              pushlea(tmp101);
              push(tmp100);
              call("func_get_int(int)");
            }
          }
          mov(ebx,tmp101);
          mov(var_obj["x"],ebx);
        }
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            mov(eax,var_obj_addr);
            add(eax,1);
            copy(tmp100,eax);
            {
              CALLER_SCOPE();
              pushlea(tmp101);
              push(tmp100);
              call("func_get_int(int)");
            }
          }
          mov(ebx,tmp101);
          mov(var_obj["y"],ebx);
        }
        jmp("if_1007::end");
      }
      label("if_1007::else");
      {
        VAR("int",tmp100);
        VAR("int",tmp102);
        mov(eax,var_obj_addr);
        add(eax,2);
        copy(tmp100,eax);
        {
          CALLER_SCOPE();
          pushlea(tmp102);
          push(tmp100);
          push(1);
          call("func_set_int(int,int)");
        }
      }
      label("if_1007::end");
    }
    VAR("int",var_VK_LEFT);
    {
      mov(var_VK_LEFT,0);
    }
    VAR("int",var_VK_RIGHT);
    {
      mov(var_VK_RIGHT,0);
    }
    VAR("int",var_VK_UP);
    {
      mov(var_VK_UP,0);
    }
    VAR("int",var_VK_DOWN);
    {
      mov(var_VK_DOWN,0);
    }
    mov(var_VK_LEFT,VK_LEFT);mov(var_VK_RIGHT,VK_RIGHT);
    mov(var_VK_UP,VK_UP);mov(var_VK_DOWN,VK_DOWN);
    VAR("int",var_speed);
    {
      mov(eax,2);
      mul(eax,param_zoom);
      mov(var_speed,eax);
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_VK_LEFT);
        lea(ecx,param_inp["kb_down"]);
        call("func_vector_int::at(int)");
      }
      jz("if_1008::end",tmp101);
      {
        {
          mov(ebx,var_speed);
          sub(var_obj["x"],ebx);
        }
        jmp("if_1008::end");
      }
      label("if_1008::end");
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_VK_RIGHT);
        lea(ecx,param_inp["kb_down"]);
        call("func_vector_int::at(int)");
      }
      jz("if_1009::end",tmp101);
      {
        {
          mov(ebx,var_speed);
          add(var_obj["x"],ebx);
        }
        jmp("if_1009::end");
      }
      label("if_1009::end");
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_VK_UP);
        lea(ecx,param_inp["kb_down"]);
        call("func_vector_int::at(int)");
      }
      jz("if_1010::end",tmp101);
      {
        {
          mov(ebx,var_speed);
          add(var_obj["y"],ebx);
        }
        jmp("if_1010::end");
      }
      label("if_1010::end");
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_VK_DOWN);
        lea(ecx,param_inp["kb_down"]);
        call("func_vector_int::at(int)");
      }
      jz("if_1011::end",tmp101);
      {
        {
          mov(ebx,var_speed);
          sub(var_obj["y"],ebx);
        }
        jmp("if_1011::end");
      }
      label("if_1011::end");
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp102);
      mov(eax,var_obj_addr);
      add(eax,0);
      copy(tmp100,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(tmp100);
        push(var_obj["x"]);
        call("func_set_int(int,int)");
      }
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp102);
      mov(eax,var_obj_addr);
      add(eax,1);
      copy(tmp100,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(tmp100);
        push(var_obj["y"]);
        call("func_set_int(int,int)");
      }
    }
    {
      copy(result,var_obj);
      ret();
    }
  }}
  
  {proc("func_set_vec2i(int,vec2i)"){
    PARAM_RESULT("int");
    PARAM("int",param_addr);
    PARAM("vec2i",param_v);
    {
      VAR("int",tmp102);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(param_addr);
        push(param_v["x"]);
        call("func_set_int(int,int)");
      }
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp102);
      mov(eax,param_addr);
      add(eax,1);
      copy(tmp100,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(tmp100);
        push(param_v["y"]);
        call("func_set_int(int,int)");
      }
    }
    {
      copy(result,0);
      ret();
    }
  }}
  
  {proc("func_get_points(int,int,int)"){
    PARAM_RESULT("vector_vec2i");
    PARAM("int",param_mposx);
    PARAM("int",param_mposy);
    PARAM("int",param_zoom);
    VAR("vec2i",var_a);
    {
      VAR("vec2i",tmp102);
      VAR("vec2i",tmp104);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(450);
        push(50);
        call("func_vec2i(int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp104);
        push(tmp102);
        push(param_zoom);
        call("func_mul(vec2i,int)");
      }
      copy(var_a,tmp104);
    }
    VAR("vec2i",var_b);
    {
      VAR("vec2i",tmp102);
      VAR("vec2i",tmp104);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(650);
        push(150);
        call("func_vec2i(int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp104);
        push(tmp102);
        push(param_zoom);
        call("func_mul(vec2i,int)");
      }
      copy(var_b,tmp104);
    }
    {
      mov(ebx,param_mposx);
      mov(var_b["x"],ebx);
    }
    {
      mov(ebx,param_mposy);
      mov(var_b["y"],ebx);
    }
    VAR("vec2i",var_c);
    {
      VAR("vec2i",tmp102);
      VAR("vec2i",tmp104);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(300);
        push(500);
        call("func_vec2i(int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp104);
        push(tmp102);
        push(param_zoom);
        call("func_mul(vec2i,int)");
      }
      copy(var_c,tmp104);
    }
    VAR("vec2i",var_d);
    {
      VAR("vec2i",tmp102);
      VAR("vec2i",tmp104);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(390);
        push(550);
        call("func_vec2i(int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp104);
        push(tmp102);
        push(param_zoom);
        call("func_mul(vec2i,int)");
      }
      copy(var_d,tmp104);
    }
    VAR("vector_vec2i",var_arr);
    {
      lea(ecx,var_arr);
      call("func_vector_vec2i::`ctor()");
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(1024);
        call("func_alloc(int)");
      }
      mov(ebx,tmp101);
      mov(var_arr["p"],ebx);
    }
    {
      mov(var_arr["n"],0);
    }
    {
      VAR("vec2i",tmp102);
      VAR("int",tmp103);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(0);
        push(0);
        call("func_vec2i(int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp103);
        push(tmp102);
        lea(ecx,var_arr);
        call("func_vector_vec2i::add(vec2i)");
      }
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_a);
        lea(ecx,var_arr);
        call("func_vector_vec2i::add(vec2i)");
      }
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_b);
        lea(ecx,var_arr);
        call("func_vector_vec2i::add(vec2i)");
      }
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_c);
        lea(ecx,var_arr);
        call("func_vector_vec2i::add(vec2i)");
      }
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_d);
        lea(ecx,var_arr);
        call("func_vector_vec2i::add(vec2i)");
      }
    }
    {
      VAR("vec2i",tmp102);
      VAR("vec2i",tmp104);
      VAR("int",tmp105);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(450);
        push(550);
        call("func_vec2i(int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp104);
        push(tmp102);
        push(param_zoom);
        call("func_mul(vec2i,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp105);
        push(tmp104);
        lea(ecx,var_arr);
        call("func_vector_vec2i::add(vec2i)");
      }
    }
    {
      VAR("vec2i",var_sum);
      {
        lea(ecx,var_sum);
        call("func_vec2i::`ctor()");
      }
      {
        VAR("int",var_i);
        {
          mov(var_i,0);
        }
        jmp("for_8008::condition");
        label("for_8008::continue");
        {
          inc(var_i);
        }
        label("for_8008::condition");
        {
          mov(eax,var_i);
          less(eax,var_arr["n"]);
          jz("for_8008::break",eax);
        }
        {
          {
            mov(eax,var_i);
            neq(eax,2);
            jz("if_1012::end",eax);
            {
              {
                VAR("vec2i",tmp102);
                VAR("vec2i",tmp103);
                {
                  CALLER_SCOPE();
                  pushlea(tmp102);
                  push(var_i);
                  lea(ecx,var_arr);
                  call("func_vector_vec2i::at(int)");
                }
                {
                  CALLER_SCOPE();
                  pushlea(tmp103);
                  push(var_sum);
                  push(tmp102);
                  call("func_add(vec2i,vec2i)");
                }
                copy(var_sum,tmp103);
              }
              jmp("if_1012::end");
            }
            label("if_1012::end");
          }
          jmp("for_8008::continue");
        }
        label("for_8008::break");
      }
      {
        VAR("vec2i",tmp102);
        {
          CALLER_SCOPE();
          pushlea(tmp102);
          push(var_sum);
          push(var_arr["n"]);
          call("func_div(vec2i,int)");
        }
        copy(var_sum,tmp102);
      }
      {
        VAR("int",var_i);
        {
          mov(var_i,0);
        }
        jmp("for_8009::condition");
        label("for_8009::continue");
        {
          inc(var_i);
        }
        label("for_8009::condition");
        {
          mov(eax,var_i);
          less(eax,var_arr["n"]);
          jz("for_8009::break",eax);
        }
        {
          {
            mov(eax,var_i);
            neq(eax,2);
            jz("if_1013::end",eax);
            {
              {
                VAR("int",tmp101);
                VAR("vec2i",tmp103);
                VAR("vec2i",tmp105);
                VAR("int",tmp106);
                {
                  CALLER_SCOPE();
                  pushlea(tmp101);
                  push(var_i);
                  lea(ecx,var_arr);
                  call("func_vector_vec2i::addr_at(int)");
                }
                {
                  CALLER_SCOPE();
                  pushlea(tmp103);
                  push(var_i);
                  lea(ecx,var_arr);
                  call("func_vector_vec2i::at(int)");
                }
                {
                  CALLER_SCOPE();
                  pushlea(tmp105);
                  push(tmp103);
                  push(var_sum);
                  call("func_sub(vec2i,vec2i)");
                }
                {
                  CALLER_SCOPE();
                  pushlea(tmp106);
                  push(tmp101);
                  push(tmp105);
                  call("func_set_vec2i(int,vec2i)");
                }
              }
              jmp("if_1013::end");
            }
            label("if_1013::end");
          }
          jmp("for_8009::continue");
        }
        label("for_8009::break");
      }
    }
    {
      copy(result,var_arr);
      ret();
    }
  }}
  
  {proc("func_GenGeomCatmullRom(vector_vec2i,int)"){
    PARAM_RESULT("t_out_dev");
    PARAM("vector_vec2i",param_arr);
    PARAM("int",param_zoom);
    VAR("vector_vec2i",var_dev);
    {
      lea(ecx,var_dev);
      call("func_vector_vec2i::`ctor()");
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      {
        mov(eax,1024);
        mul(eax,16);
        copy(tmp100,eax);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(tmp100);
          call("func_alloc(int)");
        }
      }
      mov(ebx,tmp101);
      mov(var_dev["p"],ebx);
    }
    {
      mov(var_dev["n"],0);
    }
    {
      VAR("int",var_i);
      {
        mov(var_i,0);
      }
      jmp("for_8010::condition");
      label("for_8010::continue");
      {
        inc(var_i);
      }
      label("for_8010::condition");
      {
        mov(eax,var_i);
        add(eax,1);
        less(eax,param_arr["n"]);
        jz("for_8010::break",eax);
      }
      {
        {
          VAR("int",tmp102);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(param_arr);
            push(var_i);
            lea(ecx,var_dev);
            call("func_vector_vec2i::CatmullRom(vector_vec2i,int)");
          }
        }
        jmp("for_8010::continue");
      }
      label("for_8010::break");
    }
    VAR("t_out_dev",var_od);
    {
      VAR("int",tmp100);
      VAR("t_out_dev",tmp101);
      mov(eax,1024);
      mul(eax,4);
      copy(tmp100,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(tmp100);
        call("func_new_geom(int)");
      }
      copy(var_od,tmp101);
    }
    VAR("int",var_n);
    {
      mov(eax,var_dev["n"]);
      mov(var_n,eax);
    }
    {
      VAR("int",var_i);
      {
        mov(var_i,1);
      }
      jmp("for_8011::condition");
      label("for_8011::continue");
      {
        inc(var_i);
      }
      label("for_8011::condition");
      {
        mov(eax,var_i);
        less(eax,var_n);
        jz("for_8011::break",eax);
      }
      {
        {
          VAR("int",tmp100);
          VAR("vec2i",tmp101);
          VAR("int",tmp102);
          VAR("vec2i",tmp103);
          VAR("int",tmp104);
          VAR("t_out_dev",tmp105);
          VAR("int",tmp106);
          mov(eax,var_i);
          sub(eax,1);
          copy(tmp100,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            lea(ecx,var_dev);
            call("func_vector_vec2i::at(int)");
          }
          mov(eax,var_i);
          sub(eax,0);
          copy(tmp102,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(tmp102);
            lea(ecx,var_dev);
            call("func_vector_vec2i::at(int)");
          }
          mov(eax,param_zoom);
          mul(eax,2);
          copy(tmp104,eax);
          {
            CALLER_SCOPE();
            pushlea(tmp105);
            push(tmp101);
            push(tmp103);
            push(tmp104);
            lea(ecx,var_od);
            call("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)");
          }
          {
            CALLER_SCOPE();
            pushlea(tmp106);
            push(tmp105);
            lea(ecx,var_od);
            call("func_t_out_dev::add(t_out_dev)");
          }
        }
        jmp("for_8011::continue");
      }
      label("for_8011::break");
    }
    {
      copy(result,var_od);
      ret();
    }
  }}
  
  {proc("func_limit255(int)"){
    PARAM_RESULT("int");
    PARAM("int",param_v);
    {
      VAR("int",tmp103);
      VAR("int",tmp104);
      {
        CALLER_SCOPE();
        pushlea(tmp103);
        push(255);
        push(param_v);
        call("func_min(int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp104);
        push(0);
        push(tmp103);
        call("func_max(int,int)");
      }
      copy(result,tmp104);
      ret();
    }
  }}
  
  {proc("func_sqrmag(int,int)"){
    PARAM_RESULT("int");
    PARAM("int",param_x);
    PARAM("int",param_y);
    {
      mov(eax,param_x);
      mul(eax,param_x);
      push(eax);
      {
        mov(eax,param_y);
        mul(eax,param_y);
      }
      pop(ebx);
      add(ebx,eax);
      copy(result,ebx);
      ret();
    }
  }}
  
  {proc("func_sqr(int)"){
    PARAM_RESULT("int");
    PARAM("int",param_x);
    {
      mov(eax,param_x);
      mul(eax,param_x);
      copy(result,eax);
      ret();
    }
  }}
  
  {proc("func_gen_grid(vec2i,int)"){
    PARAM_RESULT("t_out_dev");
    PARAM("vec2i",param_mpos);
    PARAM("int",param_zoom);
    VAR("t_out_dev",var_od);
    {
      VAR("int",tmp100);
      VAR("t_out_dev",tmp101);
      mov(eax,64);
      mul(eax,4);
      mul(eax,16);
      mul(eax,2);
      copy(tmp100,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(tmp100);
        call("func_new_geom(int)");
      }
      copy(var_od,tmp101);
    }
    VAR("int",var_cell_size);
    {
      mov(eax,1);
      mul(eax,param_zoom);
      mov(var_cell_size,eax);
    }
    VAR("int",var_t);
    {
      mov(var_t,16);
    }
    VAR("int",var_h);
    {
      mov(eax,var_t);
      div(eax,2);
      mov(var_h,eax);
    }
    {
      VAR("int",var_x);
      {
        mov(var_x,0);
      }
      jmp("for_8012::condition");
      label("for_8012::continue");
      {
        inc(var_x);
      }
      label("for_8012::condition");
      {
        mov(eax,var_x);
        less(eax,var_t);
        jz("for_8012::break",eax);
      }
      {
        {
          VAR("int",var_y);
          {
            mov(var_y,0);
          }
          jmp("for_8013::condition");
          label("for_8013::continue");
          {
            inc(var_y);
          }
          label("for_8013::condition");
          {
            mov(eax,var_y);
            less(eax,var_t);
            jz("for_8013::break",eax);
          }
          {
            {
              VAR("int",var_c);
              {
                mov(eax,var_y);
                mul(eax,255);
                div(eax,var_t);
                shl(eax,16);
                push(eax);
                {
                  mov(eax,var_x);
                  mul(eax,255);
                  div(eax,var_t);
                  shl(eax,8);
                }
                pop(ebx);
                add(ebx,eax);
                mov(var_c,ebx);
              }
              VAR("int",var_a);
              {
                VAR("int",tmp100);
                VAR("int",tmp101);
                VAR("int",tmp102);
                VAR("int",tmp103);
                VAR("int",tmp104);
                VAR("int",tmp105);
                VAR("int",tmp106);
                VAR("int",tmp107);
                {
                  mov(eax,var_x);
                  sub(eax,var_h);
                  copy(tmp100,eax);
                  mov(eax,var_y);
                  sub(eax,var_h);
                  copy(tmp101,eax);
                  {
                    CALLER_SCOPE();
                    pushlea(tmp102);
                    push(tmp100);
                    push(tmp101);
                    call("func_sqrmag(int,int)");
                  }
                  {
                    CALLER_SCOPE();
                    pushlea(tmp103);
                    push(tmp102);
                    call("func_sqr(int)");
                  }
                  mov(eax,tmp103);
                  mul(eax,255);
                  push(eax);
                  {
                    mov(eax,var_h);
                    mul(eax,var_h);
                    copy(tmp104,eax);
                    {
                      CALLER_SCOPE();
                      pushlea(tmp105);
                      push(tmp104);
                      call("func_sqr(int)");
                    }
                  }
                  pop(eax);
                  div(eax,tmp105);
                }
                mov(ebx,255);
                sub(ebx,eax);
                copy(tmp106,ebx);
                {
                  CALLER_SCOPE();
                  pushlea(tmp107);
                  push(tmp106);
                  call("func_limit255(int)");
                }
                mov(eax,tmp107);
                mov(var_a,eax);
              }
              {
                {
                  mov(eax,0);
                  shl(eax,16);
                  push(eax);
                  {
                    mov(eax,var_a);
                    shl(eax,8);
                  }
                  pop(ebx);
                  add(ebx,eax);
                  add(ebx,0);
                }
                mov(var_c,ebx);
              }
              {
                {
                  push(eax);
                  mov(eax,var_a);
                  shl(eax,24);
                  add(eax,var_c);
                  mov(ebx,eax);
                  pop(eax);
                }
                mov(var_od["color"],ebx);
              }
              {
                VAR("t_out_dev",tmp102);
                VAR("int",tmp104);
                VAR("int",tmp105);
                VAR("vec2i",tmp106);
                VAR("vec2i",tmp107);
                VAR("vec2i",tmp110);
                VAR("vec2i",tmp112);
                VAR("vec2i",tmp113);
                VAR("int",tmp114);
                {
                  CALLER_SCOPE();
                  pushlea(tmp102);
                  push(var_cell_size);
                  push(var_cell_size);
                  lea(ecx,var_od);
                  call("func_t_out_dev::GenGeomQuad(int,int)");
                }
                mov(eax,var_h);
                mul(eax,var_cell_size);
                copy(tmp104,eax);
                mov(eax,var_h);
                mul(eax,var_cell_size);
                copy(tmp105,eax);
                {
                  CALLER_SCOPE();
                  pushlea(tmp106);
                  push(tmp104);
                  push(tmp105);
                  call("func_vec2i(int,int)");
                }
                {
                  CALLER_SCOPE();
                  pushlea(tmp107);
                  push(param_mpos);
                  push(tmp106);
                  call("func_sub(vec2i,vec2i)");
                }
                {
                  CALLER_SCOPE();
                  pushlea(tmp110);
                  push(var_x);
                  push(var_y);
                  call("func_vec2i(int,int)");
                }
                {
                  CALLER_SCOPE();
                  pushlea(tmp112);
                  push(tmp110);
                  push(var_cell_size);
                  call("func_mul(vec2i,int)");
                }
                {
                  CALLER_SCOPE();
                  pushlea(tmp113);
                  push(tmp107);
                  push(tmp112);
                  call("func_add(vec2i,vec2i)");
                }
                {
                  CALLER_SCOPE();
                  pushlea(tmp114);
                  push(tmp102);
                  push(tmp113);
                  lea(ecx,var_od);
                  call("func_t_out_dev::add_wo(t_out_dev,vec2i)");
                }
              }
            }
            jmp("for_8013::continue");
          }
          label("for_8013::break");
        }
        jmp("for_8012::continue");
      }
      label("for_8012::break");
    }
    {
      copy(result,var_od);
      ret();
    }
  }}
  
  {proc("func_get_grid(vec2i,int)"){
    PARAM_RESULT("t_out_dev");
    PARAM("vec2i",param_mpos);
    PARAM("int",param_zoom);
    VAR("t_dev",var_dev);
    {
      lea(ecx,var_dev);
      call("func_t_dev::`ctor()");
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        call("func_g_mem_addr()");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(tmp100);
        call("func_get_int(int)");
      }
      mov(ebx,tmp101);
      mov(var_dev["p"],ebx);
    }
    {
      VAR("int",tmp100);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        lea(ecx,var_dev);
        call("func_t_dev::read_int()");
      }
      not(eax,tmp100);
      jz("if_1014::end",eax);
      {
        {
          VAR("int",var_dev_p);
          {
            mov(eax,var_dev["p"]);
            mov(var_dev_p,eax);
          }
          {
            VAR("t_out_dev",tmp102);
            VAR("int",tmp103);
            {
              CALLER_SCOPE();
              pushlea(tmp102);
              push(param_mpos);
              push(param_zoom);
              call("func_gen_grid(vec2i,int)");
            }
            {
              CALLER_SCOPE();
              pushlea(tmp103);
              push(tmp102);
              lea(ecx,var_dev);
              call("func_t_dev::write(t_out_dev)");
            }
          }
          VAR("int",var_size);
          {
            mov(eax,var_dev["p"]);
            sub(eax,var_dev_p);
            mov(var_size,eax);
          }
          {
            VAR("int",tmp100);
            VAR("int",tmp102);
            mov(eax,var_dev_p);
            sub(eax,1);
            copy(tmp100,eax);
            {
              CALLER_SCOPE();
              pushlea(tmp102);
              push(tmp100);
              push(var_size);
              call("func_set_int(int,int)");
            }
          }
          {
            mov(ebx,var_dev_p);
            mov(var_dev["p"],ebx);
          }
        }
        jmp("if_1014::end");
      }
      label("if_1014::end");
    }
    {
      VAR("t_out_dev",tmp100);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        lea(ecx,var_dev);
        call("func_t_dev::read_geom()");
      }
      copy(result,tmp100);
      ret();
    }
  }}
  
  {proc("func_get_arr(vec2i,int)"){
    PARAM_RESULT("vector_vec2i");
    PARAM("vec2i",param_mpos);
    PARAM("int",param_zoom);
    VAR("t_dev",var_dev);
    {
      lea(ecx,var_dev);
      call("func_t_dev::`ctor()");
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        call("func_g_arr_addr()");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(tmp100);
        call("func_get_int(int)");
      }
      mov(ebx,tmp101);
      mov(var_dev["p"],ebx);
    }
    {
      VAR("int",tmp100);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        lea(ecx,var_dev);
        call("func_t_dev::read_int()");
      }
      not(eax,tmp100);
      jz("if_1015::end",eax);
      {
        {
          VAR("int",var_dev_p);
          {
            mov(eax,var_dev["p"]);
            mov(var_dev_p,eax);
          }
          {
            VAR("vector_vec2i",tmp103);
            VAR("int",tmp104);
            {
              CALLER_SCOPE();
              pushlea(tmp103);
              push(param_mpos["x"]);
              push(param_mpos["y"]);
              push(param_zoom);
              call("func_get_points(int,int,int)");
            }
            {
              CALLER_SCOPE();
              pushlea(tmp104);
              push(tmp103);
              lea(ecx,var_dev);
              call("func_t_dev::write(vector_vec2i)");
            }
          }
          VAR("int",var_size);
          {
            mov(eax,var_dev["p"]);
            sub(eax,var_dev_p);
            mov(var_size,eax);
          }
          {
            VAR("int",tmp100);
            VAR("int",tmp102);
            mov(eax,var_dev_p);
            sub(eax,1);
            copy(tmp100,eax);
            {
              CALLER_SCOPE();
              pushlea(tmp102);
              push(tmp100);
              push(var_size);
              call("func_set_int(int,int)");
            }
          }
          {
            mov(ebx,var_dev_p);
            mov(var_dev["p"],ebx);
          }
        }
        jmp("if_1015::end");
      }
      label("if_1015::end");
    }
    {
      VAR("vector_vec2i",tmp100);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        lea(ecx,var_dev);
        call("func_t_dev::read_vector_vec2i()");
      }
      copy(result,tmp100);
      ret();
    }
  }}
  
  {proc("func_t_app::`ctor()"){
    MEMBER("int",field_id);
    MEMBER("vec2i",field_obj_pos);
    MEMBER("vector_vec2i",field_arr);
    MEMBER("t_out_dev",field_grid);
    VAR_THIS_PTR();
    inv(eax,1);
    mov(field_id,eax);
    lea(ecx,field_obj_pos);
    call("func_vec2i::`ctor()");
    mov(ecx,this_ptr);
    lea(ecx,field_arr);
    call("func_vector_vec2i::`ctor()");
    mov(ecx,this_ptr);
    lea(ecx,field_grid);
    call("func_t_out_dev::`ctor()");
    mov(ecx,this_ptr);
  }}
  
    {proc("func_t_str::test_O2()"){
      PARAM_RESULT("int");
      MEMBER("int",field_ptr);
      MEMBER("int",field_n);
      VAR_THIS_PTR();
      {
        VAR("int",var_r);
        {
          mov(var_r,1024);
        }
        VAR("int",var_n);
        {
          mov(var_n,0);
        }
        VAR("int",var_d);
        {
          mov(eax,var_r);
          mul(eax,2);
          mov(var_d,eax);
        }
        {
          VAR("int",var_i);
          {
            mov(var_i,0);
          }
          jmp("for_8014::condition");
          label("for_8014::continue");
          {
            inc(var_i);
          }
          label("for_8014::condition");
          {
            mov(eax,var_i);
            less(eax,var_d);
            jz("for_8014::break",eax);
          }
          {
            {
              VAR("int",var_j);
              {
                mov(var_j,0);
              }
              jmp("for_8015::condition");
              label("for_8015::continue");
              {
                inc(var_j);
              }
              label("for_8015::condition");
              {
                mov(eax,var_j);
                less(eax,var_d);
                jz("for_8015::break",eax);
              }
              {
                {
                  {
                    mov(eax,var_i);
                    mul(eax,var_i);
                    push(eax);
                    {
                      mov(eax,var_j);
                      mul(eax,var_j);
                    }
                    pop(ebx);
                    add(ebx,eax);
                    push(ebx);
                    {
                      mov(eax,var_r);
                      mul(eax,var_r);
                    }
                    pop(ebx);
                    more(ebx,eax);
                    jz("if_1016::end",ebx);
                    {
                      jmp("for_8015::continue");
                      jmp("if_1016::end");
                    }
                    label("if_1016::end");
                  }
                  inc(var_n);
                }
                jmp("for_8015::continue");
              }
              label("for_8015::break");
            }
            jmp("for_8014::continue");
          }
          label("for_8014::break");
        }
        {
          copy(result,var_n);
          ret();
        }
      }
    }}
    
  {proc("func_t_str::`ctor()"){
    MEMBER("int",field_ptr);
    MEMBER("int",field_n);
    VAR_THIS_PTR();
    mov(field_ptr,0);
    mov(field_n,0);
  }}
  
  {proc("func_cr_test(t_input)"){
    PARAM_RESULT("t_mem");
    PARAM("t_input",param_inp);
    VAR("int",var_mbLeft);
    {
      mov(var_mbLeft,257);
    }
    VAR("int",var_mbRight);
    {
      mov(var_mbRight,258);
    }
    VAR("int",var_mbMiddle);
    {
      mov(var_mbMiddle,259);
    }
    VAR("int",var_zoom);
    {
      mov(var_zoom,4);
    }
    VAR("vec2i",var_obj_pos);
    {
      VAR("vec2i",tmp102);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(param_inp);
        push(var_zoom);
        call("func_get_obj_pos(t_input,int)");
      }
      copy(var_obj_pos,tmp102);
    }
    VAR("vec2i",var_mpos);
    {
      VAR("vec2i",tmp102);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(param_inp["mpos"]);
        push(var_zoom);
        call("func_mul(vec2i,int)");
      }
      copy(var_mpos,tmp102);
    }
    VAR("t_out_dev",var_od);
    {
      VAR("int",tmp100);
      VAR("t_out_dev",tmp101);
      mov(eax,1024);
      mul(eax,16);
      copy(tmp100,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(tmp100);
        call("func_new_geom(int)");
      }
      copy(var_od,tmp101);
    }
    {
      {
        mov(eax,255);
        shl(eax,24);
        push(eax);
        {
          mov(eax,128);
          shl(eax,8);
        }
        pop(ebx);
        add(ebx,eax);
      }
      mov(var_od["color"],ebx);
    }
    VAR("vec2i",var_no_offset);
    {
      VAR("vec2i",tmp102);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(0);
        push(0);
        call("func_vec2i(int,int)");
      }
      copy(var_no_offset,tmp102);
    }
    {
      jz("if_1017::end",0);
      {
        {
          VAR("t_out_dev",var_q1);
          {
            VAR("int",tmp102);
            VAR("int",tmp103);
            VAR("t_out_dev",tmp104);
            mov(eax,30);
            mul(eax,var_zoom);
            copy(tmp102,eax);
            mov(eax,30);
            mul(eax,var_zoom);
            copy(tmp103,eax);
            {
              CALLER_SCOPE();
              pushlea(tmp104);
              push(var_mpos["x"]);
              push(var_mpos["y"]);
              push(tmp102);
              push(tmp103);
              lea(ecx,var_od);
              call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
            }
            copy(var_q1,tmp104);
          }
          {
            {
              mov(eax,255);
              shl(eax,24);
              push(eax);
              {
                mov(eax,128);
                shl(eax,8);
              }
              pop(ebx);
              add(ebx,eax);
              push(ebx);
              {
                mov(eax,255);
                shl(eax,16);
              }
              pop(ebx);
              add(ebx,eax);
            }
            mov(var_od["color"],ebx);
          }
          VAR("t_out_dev",var_q2);
          {
            VAR("int",tmp101);
            VAR("int",tmp102);
            VAR("int",tmp103);
            VAR("t_out_dev",tmp104);
            {
              mov(eax,64);
              mul(eax,var_zoom);
            }
            mov(ebx,var_mpos["y"]);
            sub(ebx,eax);
            copy(tmp101,ebx);
            mov(eax,100);
            mul(eax,var_zoom);
            copy(tmp102,eax);
            mov(eax,10);
            mul(eax,var_zoom);
            copy(tmp103,eax);
            {
              CALLER_SCOPE();
              pushlea(tmp104);
              push(var_mpos["x"]);
              push(tmp101);
              push(tmp102);
              push(tmp103);
              lea(ecx,var_od);
              call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
            }
            copy(var_q2,tmp104);
          }
          VAR("t_out_dev",var_q3);
          {
            VAR("int",tmp100);
            VAR("int",tmp102);
            VAR("int",tmp103);
            VAR("t_out_dev",tmp104);
            mov(eax,200);
            mul(eax,var_zoom);
            add(eax,var_mpos["x"]);
            copy(tmp100,eax);
            mov(eax,10);
            mul(eax,var_zoom);
            copy(tmp102,eax);
            mov(eax,60);
            mul(eax,var_zoom);
            copy(tmp103,eax);
            {
              CALLER_SCOPE();
              pushlea(tmp104);
              push(tmp100);
              push(var_mpos["y"]);
              push(tmp102);
              push(tmp103);
              lea(ecx,var_od);
              call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
            }
            copy(var_q3,tmp104);
          }
          {
            VAR("int",tmp101);
            {
              CALLER_SCOPE();
              pushlea(tmp101);
              push(var_q1);
              lea(ecx,var_od);
              call("func_t_out_dev::add(t_out_dev)");
            }
          }
          {
            VAR("int",tmp101);
            {
              CALLER_SCOPE();
              pushlea(tmp101);
              push(var_q2);
              lea(ecx,var_od);
              call("func_t_out_dev::add(t_out_dev)");
            }
          }
          {
            VAR("int",tmp101);
            {
              CALLER_SCOPE();
              pushlea(tmp101);
              push(var_q3);
              lea(ecx,var_od);
              call("func_t_out_dev::add(t_out_dev)");
            }
          }
          {
            VAR("t_out_dev",tmp103);
            VAR("int",tmp104);
            {
              CALLER_SCOPE();
              pushlea(tmp103);
              push(var_mpos);
              push(var_no_offset);
              push(var_zoom);
              lea(ecx,var_od);
              call("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)");
            }
            {
              CALLER_SCOPE();
              pushlea(tmp104);
              push(tmp103);
              lea(ecx,var_od);
              call("func_t_out_dev::add(t_out_dev)");
            }
          }
        }
        jmp("if_1017::end");
      }
      label("if_1017::end");
    }
    VAR("t_out_dev",var_grid);
    {
      VAR("vec2i",tmp102);
      VAR("t_out_dev",tmp104);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(0);
        push(0);
        call("func_vec2i(int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp104);
        push(tmp102);
        push(var_zoom);
        call("func_get_grid(vec2i,int)");
      }
      copy(var_grid,tmp104);
    }
    VAR("vector_vec2i",var_arr);
    {
      VAR("vec2i",tmp102);
      VAR("vector_vec2i",tmp104);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(0);
        push(0);
        call("func_vec2i(int,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp104);
        push(tmp102);
        push(var_zoom);
        call("func_get_arr(vec2i,int)");
      }
      copy(var_arr,tmp104);
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(82);
        lea(ecx,param_inp);
        call("func_t_input::kb_on_down(int)");
      }
      jz("if_1018::end",tmp101);
      {
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(0);
            lea(ecx,var_arr);
            call("func_vector_vec2i::addr_at(int)");
          }
          mov(ebx,tmp101);
          mov(var_arr["p"],ebx);
        }
        {
          mov(var_arr["n"],0);
        }
        VAR("t_dev",var_dev);
        {
          lea(ecx,var_dev);
          call("func_t_dev::`ctor()");
        }
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp100);
            call("func_g_arr_addr()");
          }
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_get_int(int)");
          }
          mov(ebx,tmp101);
          mov(var_dev["p"],ebx);
        }
        {
          VAR("int",tmp100);
          {
            CALLER_SCOPE();
            pushlea(tmp100);
            lea(ecx,var_dev);
            call("func_t_dev::read_int()");
          }
        }
        {
          jz("if_1019::end",1);
          {
            {
              VAR("int",var_dev_p);
              {
                mov(eax,var_dev["p"]);
                mov(var_dev_p,eax);
              }
              {
                VAR("int",tmp101);
                {
                  CALLER_SCOPE();
                  pushlea(tmp101);
                  push(var_arr);
                  lea(ecx,var_dev);
                  call("func_t_dev::write(vector_vec2i)");
                }
              }
              VAR("int",var_size);
              {
                mov(eax,var_dev["p"]);
                sub(eax,var_dev_p);
                mov(var_size,eax);
              }
              {
                VAR("int",tmp100);
                VAR("int",tmp102);
                mov(eax,var_dev_p);
                sub(eax,1);
                copy(tmp100,eax);
                {
                  CALLER_SCOPE();
                  pushlea(tmp102);
                  push(tmp100);
                  push(var_size);
                  call("func_set_int(int,int)");
                }
              }
              {
                mov(ebx,var_dev_p);
                mov(var_dev["p"],ebx);
              }
            }
            jmp("if_1019::end");
          }
          label("if_1019::end");
        }
        jmp("if_1018::end");
      }
      label("if_1018::end");
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_mbRight);
        lea(ecx,param_inp);
        call("func_t_input::kb_on_down(int)");
      }
      jz("if_1020::end",tmp101);
      {
        {
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(var_mpos);
            lea(ecx,var_arr);
            call("func_vector_vec2i::add(vec2i)");
          }
        }
        VAR("t_dev",var_dev);
        {
          lea(ecx,var_dev);
          call("func_t_dev::`ctor()");
        }
        {
          VAR("int",tmp100);
          VAR("int",tmp101);
          {
            CALLER_SCOPE();
            pushlea(tmp100);
            call("func_g_arr_addr()");
          }
          {
            CALLER_SCOPE();
            pushlea(tmp101);
            push(tmp100);
            call("func_get_int(int)");
          }
          mov(ebx,tmp101);
          mov(var_dev["p"],ebx);
        }
        {
          VAR("int",tmp100);
          {
            CALLER_SCOPE();
            pushlea(tmp100);
            lea(ecx,var_dev);
            call("func_t_dev::read_int()");
          }
        }
        {
          jz("if_1021::end",1);
          {
            {
              VAR("int",var_dev_p);
              {
                mov(eax,var_dev["p"]);
                mov(var_dev_p,eax);
              }
              {
                VAR("int",tmp101);
                {
                  CALLER_SCOPE();
                  pushlea(tmp101);
                  push(var_arr);
                  lea(ecx,var_dev);
                  call("func_t_dev::write(vector_vec2i)");
                }
              }
              VAR("int",var_size);
              {
                mov(eax,var_dev["p"]);
                sub(eax,var_dev_p);
                mov(var_size,eax);
              }
              {
                VAR("int",tmp100);
                VAR("int",tmp102);
                mov(eax,var_dev_p);
                sub(eax,1);
                copy(tmp100,eax);
                {
                  CALLER_SCOPE();
                  pushlea(tmp102);
                  push(tmp100);
                  push(var_size);
                  call("func_set_int(int,int)");
                }
              }
              {
                mov(ebx,var_dev_p);
                mov(var_dev["p"],ebx);
              }
            }
            jmp("if_1021::end");
          }
          label("if_1021::end");
        }
        jmp("if_1020::end");
      }
      label("if_1020::end");
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_mbLeft);
        lea(ecx,param_inp["kb_down"]);
        call("func_vector_int::at(int)");
      }
      jz("if_1022::end",tmp101);
      {
        {
          VAR("int",var_id);
          {
            mov(var_id,0);
          }
          {
            VAR("int",var_i);
            {
              mov(var_i,0);
            }
            jmp("for_8016::condition");
            label("for_8016::continue");
            {
              inc(var_i);
            }
            label("for_8016::condition");
            {
              mov(eax,var_i);
              less(eax,var_arr["n"]);
              jz("for_8016::break",eax);
            }
            {
              {
                VAR("vec2i",var_a);
                {
                  VAR("vec2i",tmp101);
                  {
                    CALLER_SCOPE();
                    pushlea(tmp101);
                    push(var_id);
                    lea(ecx,var_arr);
                    call("func_vector_vec2i::at(int)");
                  }
                  copy(var_a,tmp101);
                }
                VAR("vec2i",var_b);
                {
                  VAR("vec2i",tmp101);
                  {
                    CALLER_SCOPE();
                    pushlea(tmp101);
                    push(var_i);
                    lea(ecx,var_arr);
                    call("func_vector_vec2i::at(int)");
                  }
                  copy(var_b,tmp101);
                }
                VAR("int",var_ad);
                {
                  VAR("vec2i",tmp102);
                  VAR("int",tmp103);
                  {
                    CALLER_SCOPE();
                    pushlea(tmp102);
                    push(var_a);
                    push(var_mpos);
                    call("func_sub(vec2i,vec2i)");
                  }
                  {
                    CALLER_SCOPE();
                    pushlea(tmp103);
                    push(tmp102);
                    call("func_hypot(vec2i)");
                  }
                  mov(eax,tmp103);
                  mov(var_ad,eax);
                }
                VAR("int",var_bd);
                {
                  VAR("vec2i",tmp102);
                  VAR("int",tmp103);
                  {
                    CALLER_SCOPE();
                    pushlea(tmp102);
                    push(var_b);
                    push(var_mpos);
                    call("func_sub(vec2i,vec2i)");
                  }
                  {
                    CALLER_SCOPE();
                    pushlea(tmp103);
                    push(tmp102);
                    call("func_hypot(vec2i)");
                  }
                  mov(eax,tmp103);
                  mov(var_bd,eax);
                }
                {
                  mov(eax,var_bd);
                  less(eax,var_ad);
                  jz("if_1023::end",eax);
                  {
                    {
                      mov(ebx,var_i);
                      mov(var_id,ebx);
                    }
                    jmp("if_1023::end");
                  }
                  label("if_1023::end");
                }
              }
              jmp("for_8016::continue");
            }
            label("for_8016::break");
          }
          {
            VAR("int",tmp101);
            VAR("int",tmp103);
            {
              CALLER_SCOPE();
              pushlea(tmp101);
              push(var_id);
              lea(ecx,var_arr);
              call("func_vector_vec2i::addr_at(int)");
            }
            {
              CALLER_SCOPE();
              pushlea(tmp103);
              push(tmp101);
              push(var_mpos);
              call("func_set_vec2i(int,vec2i)");
            }
          }
        }
        jmp("if_1022::end");
      }
      label("if_1022::end");
    }
    {
      VAR("t_out_dev",tmp102);
      VAR("int",tmp103);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(var_arr);
        push(var_zoom);
        call("func_GenGeomCatmullRom(vector_vec2i,int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp103);
        push(tmp102);
        lea(ecx,var_od);
        call("func_t_out_dev::add(t_out_dev)");
      }
    }
    VAR("int",var_VK_SHIFT);
    {
      mov(var_VK_SHIFT,0);
    }
    mov(var_VK_SHIFT,VK_SHIFT);
    VAR("int",var_draw_fast);
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_VK_SHIFT);
        lea(ecx,param_inp["kb_down"]);
        call("func_vector_int::at(int)");
      }
      mov(eax,tmp101);
      mov(var_draw_fast,eax);
    }
    {
      VAR("int",var_i);
      {
        mov(var_i,0);
      }
      jmp("for_8017::condition");
      label("for_8017::continue");
      {
        inc(var_i);
      }
      label("for_8017::condition");
      {
        mov(eax,var_i);
        less(eax,var_arr["n"]);
        jz("for_8017::break",eax);
      }
      {
        {
          VAR("vec2i",tmp102);
          VAR("int",tmp103);
          {
            CALLER_SCOPE();
            pushlea(tmp102);
            push(var_i);
            lea(ecx,var_arr);
            call("func_vector_vec2i::at(int)");
          }
          {
            CALLER_SCOPE();
            pushlea(tmp103);
            push(var_grid);
            push(tmp102);
            lea(ecx,var_od);
            call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)");
          }
        }
        jmp("for_8017::continue");
      }
      label("for_8017::break");
    }
    VAR("t_mem",var_mem);
    {
      lea(ecx,var_mem);
      call("func_t_mem::`ctor()");
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      {
        mov(eax,1024);
        mul(eax,1024);
        copy(tmp100,eax);
        {
          CALLER_SCOPE();
          pushlea(tmp101);
          push(tmp100);
          call("func_alloc(int)");
        }
      }
      mov(ebx,tmp101);
      mov(var_mem["ptr"],ebx);
    }
    VAR("t_dev",var_out);
    {
      lea(ecx,var_out);
      call("func_t_dev::`ctor()");
    }
    {
      mov(ebx,var_mem["ptr"]);
      mov(var_out["p"],ebx);
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_od);
        lea(ecx,var_out);
        call("func_t_dev::write(t_out_dev)");
      }
    }
    {
      {
        push(eax);
        mov(eax,var_out["p"]);
        sub(eax,var_mem["ptr"]);
        mov(ebx,eax);
        pop(eax);
      }
      mov(var_mem["size"],ebx);
    }
    {
      copy(result,var_mem);
      ret();
    }
  }}
  
  {proc("func_main(int)"){
    PARAM_RESULT("int");
    PARAM("int",param_ptr);
    {
      VAR("int",tmp100);
      VAR("int",tmp102);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        call("func_g_ptr_addr()");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(tmp100);
        push(0);
        call("func_set_int(int,int)");
      }
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      VAR("int",tmp102);
      VAR("int",tmp103);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        call("func_g_mem_addr()");
      }
      mov(eax,1024);
      mul(eax,512);
      copy(tmp101,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(tmp101);
        call("func_alloc(int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp103);
        push(tmp100);
        push(tmp102);
        call("func_set_int(int,int)");
      }
    }
    {
      VAR("int",tmp100);
      VAR("int",tmp101);
      VAR("int",tmp102);
      VAR("int",tmp103);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        call("func_g_arr_addr()");
      }
      mov(eax,1024);
      mul(eax,16);
      copy(tmp101,eax);
      {
        CALLER_SCOPE();
        pushlea(tmp102);
        push(tmp101);
        call("func_alloc(int)");
      }
      {
        CALLER_SCOPE();
        pushlea(tmp103);
        push(tmp100);
        push(tmp102);
        call("func_set_int(int,int)");
      }
    }
    VAR("t_input",var_inp);
    {
      lea(ecx,var_inp);
      call("func_t_input::`ctor()");
    }
    VAR("t_dev",var_dev);
    {
      lea(ecx,var_dev);
      call("func_t_dev::`ctor()");
    }
    {
      mov(ebx,param_ptr);
      mov(var_dev["p"],ebx);
    }
    {
      VAR("vec2i",tmp100);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        lea(ecx,var_dev);
        call("func_t_dev::read_vec2i()");
      }
      copy(var_inp["mpos"],tmp100);
    }
    {
      VAR("int",tmp100);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        lea(ecx,var_dev);
        call("func_t_dev::read_int()");
      }
      mov(ebx,tmp100);
      mov(var_inp["zDelta"],ebx);
    }
    {
      VAR("vector_int",tmp100);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        lea(ecx,var_dev);
        call("func_t_dev::read_vector_int()");
      }
      copy(var_inp["kb_down"],tmp100);
    }
    {
      VAR("vector_int",tmp100);
      {
        CALLER_SCOPE();
        pushlea(tmp100);
        lea(ecx,var_dev);
        call("func_t_dev::read_vector_int()");
      }
      copy(var_inp["kb_changed"],tmp100);
    }
    VAR("t_mem",var_out);
    {
      VAR("t_mem",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_inp);
        call("func_cr_test(t_input)");
      }
      copy(var_out,tmp101);
    }
    {
      VAR("int",tmp101);
      {
        CALLER_SCOPE();
        pushlea(tmp101);
        push(var_out["size"]);
        call("func_setebx(int)");
      }
    }
    mov(ecx,1);
    {
      copy(result,var_out["ptr"]);
      ret();
    }
  }}
  
}