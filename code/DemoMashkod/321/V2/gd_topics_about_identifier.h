struct t_frame{
  vector<t_var> vars;
  vector<t_func> funcs;
  //vector<t_func> sysfuncs;
};

struct t_identifier{
  string name;
  vectr<t_var_without_name> vars;
  vectr<t_func_without_name> funcs;
  //vectr<t_sysfunc_without_name> sysfunc;
};

struct t_frame{
  vector<t_identifier> names;
};

Просто решил поделиться размышлениями.
{
  Предисловие
  {
    Первый раз делаю транслятор из чего-то С++ подобного в промежуточный ASM-подобный код. Уже вторая неделя пошла в расход.
    ОФФтоп
    {
      На данный момент промежуточный ASM-подобный код копилю С++ компиляторм и при запуске получаю машкод для свой VM.
    }
    За долго до этого делал несколько интепретаторов ASM-подобных языков и один интепретатор С++ подобного языка. И каждый раз решал что делать в ситуации описаной ниже. И вот опять я в ней.
  }
  Ситуация
  {
    AST построеноено. //Но оценочная функция для каждого узла не выполнена. У меня так всегда. Но это не важно.
    Теперь во время очередного прохода по AST мы попадаем в блок кода в котором объявлены функции и переменные.
    Надо их куда-то запомнить.
    ы начинаем его обходить с целью например 
    Мы залезем в какой-то блок кода в котором объявлены функции и переменные.
  }
  Кормназад
  {
    Интересно / Не интересно / Хз.
  }
  Междуактивный
  {
    Скачать / Посмотреть демку / Хз.
  }
}

Противопоказания к публикации
{
  
}

размышления
{
  хорошо бы после поиска t_var_without_name конвертнуть в t_var. а после того как работа будет завершена или сразу перед новым поиском
  сохранить изменения в t_frame например если имя будет изменено.
  
  но вообще у меня такая программа, что имя не будет изменено. тоесть поиск совершаеться не для изменения, а для
  того чтобы скопироватьь кудато инфу из результата поиска.
  
  а вообще похоже есть две причины по которым информация копируеться.
  для того чтобы показать её наблюдателю.
  для того чтобы она управляла процессом.
  
  короче есть информация которая управляет процессами.
  короче инфу можно конвертировать из одного формата в другой.
  можно показывать результат наблюдателю.
  а можно использовать инфу для того чтобы описать процесс конвертации.
  тоесть инфа может быть программой.
  
  у меня такое ощущение что тот путь решения задачи который выбрал я неправельный.
  единственно правельное решение - это вынесеное имя.
  это позволит находить функции 
}