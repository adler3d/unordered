/*
1273,6211,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
140,0,64,0
255,0,7,0
140,1,1024,0
299,1,0,0
157,3,4,2
153,3,0,1
1273,11,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
140,0,64,0
255,0,7,0
140,1,1024,0
299,1,0,0
255,1,8,0
157,3,4,2
153,3,0,1
1273,26,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
140,0,64,0
255,0,7,0
140,1,1024,0
299,1,0,0
255,1,16,0
157,3,4,2
153,3,0,1
1273,41,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
157,0,4,6
153,4,-1,0
1421,5,0,0
157,0,4,5
295,0,4,7
153,4,-2,0
1421,5,0,0
140,0,2,0
318,0,4,7
1279,0,0,0
140,0,5,0
318,0,4,6
1415,1,0,0
276,1,0,0
1279,1,0,0
140,0,4,0
318,0,4,5
1415,1,0,0
253,1,0,0
295,1,4,4
153,4,-3,1
1421,5,0,0
157,0,4,6
295,0,4,5
140,1,3,0
299,1,0,0
272,1,4,4
295,1,4,7
153,4,-4,1
1279,0,0,0
157,0,4,-4
318,0,4,3
341,0,4,2
138,1,0,0
1415,0,0,0
153,4,-4,1
157,1,4,-3
268,4,-4,1
1279,0,0,0
157,0,4,-4
318,0,4,3
341,0,4,2
138,1,0,0
1415,0,0,0
153,4,-4,1
157,1,4,-2
268,4,-4,1
1279,0,0,0
157,0,4,-4
318,0,4,3
341,0,4,2
138,1,0,0
1415,0,0,0
153,4,-4,1
157,0,4,-4
324,0,2,0
157,1,4,-1
253,1,0,0
157,3,4,8
153,3,0,1
1273,114,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
1282,4,11,0
1282,4,10,0
1417,4,-2,0
1417,4,-1,0
278,5,2,0
1282,4,5,0
1282,4,4,0
1417,4,-4,0
1417,4,-3,0
1421,5,0,0
278,5,2,0
1421,5,0,0
1448,4,-7,0
1282,4,9,0
1282,4,8,0
1282,4,7,0
1282,4,6,0
1277,454,0,0
255,5,5,0
1448,4,-8,0
1282,4,-6,0
1282,4,-7,0
1277,436,0,0
255,5,3,0
157,0,4,-8
153,4,-5,0
1418,5,0,0
255,5,2,0
278,5,2,0
278,5,2,0
1448,4,-9,0
1282,4,-1,0
1282,4,-2,0
1282,4,9,0
1282,4,8,0
1277,454,0,0
255,5,5,0
1282,4,-8,0
1282,4,-9,0
1417,4,-7,0
1417,4,-6,0
255,5,2,0
1421,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-6,0
1282,4,-7,0
1277,436,0,0
255,5,3,0
157,0,4,-9
153,4,-8,0
1418,5,0,0
113,205,4,-8
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-10,0
1282,4,-6,0
1282,4,-7,0
1282,4,-5,0
1277,514,0,0
255,5,4,0
1448,4,-12,0
1282,4,-9,0
1282,4,-10,0
1282,4,-8,0
1277,544,0,0
255,5,4,0
1448,4,-14,0
1282,4,9,0
1282,4,8,0
1282,4,-11,0
1282,4,-12,0
1277,484,0,0
255,5,5,0
1282,4,-13,0
1282,4,-14,0
1417,4,-2,0
1417,4,-1,0
255,5,2,0
255,5,2,0
255,5,2,0
1273,205,0,0
1432,0,0,0
1418,5,0,0
255,5,2,0
278,5,2,0
278,5,2,0
1448,4,-9,0
1282,4,-3,0
1282,4,-4,0
1282,4,7,0
1282,4,6,0
1277,454,0,0
255,5,5,0
1282,4,-8,0
1282,4,-9,0
1417,4,-7,0
1417,4,-6,0
255,5,2,0
1421,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-6,0
1282,4,-7,0
1277,436,0,0
255,5,3,0
157,0,4,-9
153,4,-8,0
1418,5,0,0
113,263,4,-8
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-10,0
1282,4,-6,0
1282,4,-7,0
1282,4,-5,0
1277,514,0,0
255,5,4,0
1448,4,-12,0
1282,4,-9,0
1282,4,-10,0
1282,4,-8,0
1277,544,0,0
255,5,4,0
1448,4,-14,0
1282,4,7,0
1282,4,6,0
1282,4,-11,0
1282,4,-12,0
1277,484,0,0
255,5,5,0
1282,4,-13,0
1282,4,-14,0
1417,4,-4,0
1417,4,-3,0
255,5,2,0
255,5,2,0
255,5,2,0
1273,263,0,0
1432,0,0,0
1418,5,0,0
255,5,2,0
1421,5,0,0
1421,5,0,0
278,5,2,0
1448,4,-6,0
1282,4,-2,0
1282,4,8,0
1282,4,6,0
1282,4,-4,0
1282,4,3,0
1282,4,2,0
1277,45,0,0
255,5,7,0
1448,4,-7,0
1282,4,-1,0
1282,4,9,0
1282,4,7,0
1282,4,-3,0
1282,4,3,0
1282,4,2,0
1277,45,0,0
255,5,7,0
1448,4,-9,0
1282,4,-6,0
1282,4,-7,0
1277,397,0,0
255,5,3,0
157,3,4,12
1282,4,-8,0
1282,4,-9,0
1417,3,0,0
1417,3,1,0
1273,304,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
255,5,2,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
1448,4,-2,0
1277,1,0,0
255,5,1,0
157,0,4,-2
153,4,-1,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1282,4,-1,0
1277,574,0,0
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
180,0,4,-2
98,340,0,0
1421,5,0,0
140,0,64,0
255,0,8,0
140,1,1024,0
299,1,0,0
153,4,-3,1
157,1,4,-3
153,4,-2,1
1418,5,0,0
1273,340,0,0
1432,0,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-2
272,0,4,2
153,4,-3,0
1448,4,-4,0
1282,4,-1,0
1282,4,-3,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,3,4,3
1282,4,-2,0
1417,3,0,0
1273,359,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,0,0
1282,2,1,0
1277,615,0,0
157,2,4,-1
255,5,3,0
157,3,4,2
1282,4,-2,0
1417,3,0,0
1273,381,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
1447,2,4,-2
1277,385,0,0
157,1,4,3
153,4,-2,1
157,1,4,2
153,4,-1,1
157,3,4,4
1282,4,-1,0
1282,4,-2,0
1417,3,0,0
1417,3,1,0
1273,414,0,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1448,4,-1,0
1282,4,3,0
1282,4,2,0
1277,590,0,0
255,5,3,0
157,3,4,4
1282,4,-1,0
1417,3,0,0
1273,432,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1448,4,-1,0
1282,4,2,0
1282,4,3,0
1277,615,0,0
255,5,3,0
157,3,4,4
1282,4,-1,0
1417,3,0,0
1273,450,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,4
295,0,4,2
153,4,-1,0
157,0,4,5
295,0,4,3
153,4,-2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-2,0
1277,397,0,0
255,5,3,0
157,3,4,6
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1273,480,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,4
272,0,4,2
153,4,-1,0
157,0,4,5
272,0,4,3
153,4,-2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-2,0
1277,397,0,0
255,5,3,0
157,3,4,6
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1273,510,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,3
318,0,4,2
153,4,-1,0
157,0,4,4
318,0,4,2
153,4,-2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-2,0
1277,397,0,0
255,5,3,0
157,3,4,5
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1273,540,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,3
341,0,4,2
153,4,-1,0
157,0,4,4
341,0,4,2
153,4,-2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-2,0
1277,397,0,0
255,5,3,0
157,3,4,5
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1273,570,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
155,4,-1,0
157,0,4,2
156,4,-1,0
157,3,4,3
1282,4,-1,0
1417,3,0,0
1273,586,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,3
160,0,4,2
157,0,4,3
255,0,1,0
157,3,4,4
153,3,0,0
1273,600,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,1,4,2
157,3,4,3
155,3,0,0
1273,611,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
155,4,-1,0
157,0,4,3
157,1,4,2
230,0,1,0
153,4,-1,0
157,3,4,4
1282,4,-1,0
1417,3,0,0
1273,629,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
155,4,-1,0
226,0,4,2
153,4,-1,0
157,3,4,3
1282,4,-1,0
1417,3,0,0
1273,645,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
180,0,4,2
98,657,0,0
1432,0,0,0
140,9,-1,0
1273,657,0,0
1432,0,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,3
410,0,4,2
98,671,0,0
1432,0,0,0
140,9,-1,0
1273,671,0,0
1432,0,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,3
433,0,4,2
98,687,0,0
157,3,4,4
1282,4,3,0
1417,3,0,0
1273,692,0,0
1273,687,0,0
1432,0,0,0
157,3,4,4
1282,4,2,0
1417,3,0,0
1273,692,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,3
456,0,4,2
98,707,0,0
157,3,4,4
1282,4,3,0
1417,3,0,0
1273,712,0,0
1273,707,0,0
1432,0,0,0
157,3,4,4
1282,4,2,0
1417,3,0,0
1273,712,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
1448,4,-1,0
1282,4,4,0
1282,4,2,0
1277,696,0,0
255,5,3,0
1448,4,-2,0
1282,4,-1,0
1282,4,3,0
1277,676,0,0
255,5,3,0
157,3,4,5
1282,4,-2,0
1417,3,0,0
1273,737,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
1447,2,2,1
1277,385,0,0
157,2,4,-1
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,3,0
1447,2,4,-3
1277,741,0,0
157,1,4,4
153,4,-3,1
1282,4,3,0
1282,4,2,0
1417,4,-2,0
1417,4,-1,0
157,3,4,5
1282,4,-1,0
1282,4,-2,0
1282,4,-3,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,776,0,0
255,5,3,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
140,0,3,0
318,0,4,2
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,308,0,0
157,2,4,-1
255,5,2,0
157,1,4,-3
153,2,0,1
1418,5,0,0
1418,5,0,0
155,2,1,0
157,1,4,2
153,2,2,1
157,3,4,3
155,3,0,0
1273,806,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,0,0
1282,4,2,0
1277,590,0,0
157,2,4,-1
255,5,3,0
157,1,4,-2
153,2,0,1
1418,5,0,0
157,3,4,3
1282,2,0,0
1417,3,0,0
1273,830,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,810,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,810,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
157,3,4,4
1282,2,0,0
1417,3,0,0
1273,860,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
433,0,2,2
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,4,0
157,2,4,-1
1277,810,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
1282,4,2,0
157,2,4,-1
1277,834,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1420,2,1,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,904,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
433,0,2,2
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,810,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,4,0
1282,4,3,0
157,2,4,-1
1277,834,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1420,2,1,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,948,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
1448,4,-2,0
1282,4,2,0
1277,574,0,0
157,2,4,-1
255,5,2,0
157,0,4,2
255,0,1,0
153,4,-3,0
1448,4,-4,0
1282,4,-3,0
1277,574,0,0
157,2,4,-1
255,5,2,0
1448,4,-6,0
1282,4,-2,0
1282,4,-4,0
1277,397,0,0
157,2,4,-1
255,5,3,0
157,3,4,3
1282,4,-5,0
1282,4,-6,0
1417,3,0,0
1417,3,1,0
1273,991,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
278,5,2,0
278,5,3,0
1448,4,-2,0
1282,4,2,0
1277,574,0,0
157,2,4,-1
255,5,2,0
157,0,4,2
255,0,1,0
153,4,-3,0
1448,4,-5,0
1282,4,-3,0
157,2,4,-1
1277,952,0,0
157,2,4,-1
255,5,2,0
1448,4,-8,0
1282,4,-2,0
1282,4,-4,0
1282,4,-5,0
1277,755,0,0
157,2,4,-1
255,5,4,0
157,3,4,3
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1038,0,0
255,5,3,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
278,5,3,0
157,0,4,2
295,0,2,1
301,0,3,0
157,1,2,0
253,1,0,0
153,4,-2,1
1448,4,-5,0
1282,4,-2,0
157,2,4,-1
1277,995,0,0
157,2,4,-1
255,5,2,0
157,3,4,3
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1072,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,3,0
1447,2,4,-4
1277,1799,0,0
157,2,4,-1
157,1,2,0
153,4,-4,1
1279,0,0,0
157,0,2,1
301,0,3,0
138,1,0,0
1415,0,0,0
153,4,-3,1
1279,0,0,0
157,0,2,2
301,0,3,0
138,1,0,0
1415,0,0,0
153,4,-2,1
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1109,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
439,0,0,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
278,5,3,0
1448,4,-4,0
1281,0,0,0
157,2,4,-1
1277,1042,0,0
157,2,4,-1
255,5,2,0
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1147,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
439,0,0,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
278,5,3,0
157,0,2,1
278,0,1,0
153,4,-2,0
1448,4,-5,0
1282,4,-2,0
157,2,4,-1
1277,1042,0,0
157,2,4,-1
255,5,2,0
157,3,4,2
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1190,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,3,0
1447,2,4,-4
1277,1541,0,0
157,2,4,-1
1421,5,0,0
1448,4,-5,0
1282,2,2,0
1447,2,4,-4
1277,780,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
155,4,-5,0
1273,1216,0,0
1432,0,0,0
1420,4,-5,0
1432,0,0,0
157,0,4,-5
433,0,2,1
98,1239,0,0
278,5,3,0
1421,5,0,0
1448,4,-8,0
1282,4,-5,0
157,2,4,-1
1277,1042,0,0
157,2,4,-1
255,5,2,0
1448,4,-9,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1447,2,4,-4
1277,908,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
255,5,3,0
1273,1214,0,0
1432,0,0,0
1418,5,0,0
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1251,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,3,0
1282,2,1,0
1277,662,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1421,5,0,0
155,4,-2,0
1273,1273,0,0
1432,0,0,0
1420,4,-2,0
1432,0,0,0
157,0,4,-2
433,0,2,1
98,1334,0,0
278,5,3,0
278,5,3,0
1448,4,-8,0
1282,4,-2,0
1447,2,4,2
1277,1042,0,0
157,2,4,-1
255,5,2,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
255,5,3,0
278,5,3,0
278,5,3,0
1448,4,-11,0
1282,4,-2,0
157,2,4,-1
1277,1042,0,0
157,2,4,-1
255,5,2,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1417,4,-8,0
1417,4,-7,0
1417,4,-6,0
255,5,3,0
1421,5,0,0
1448,4,-9,0
1282,4,-5,0
1282,4,-8,0
1277,662,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-4,0
1282,4,-7,0
1277,662,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-3,0
1282,4,-6,0
1277,662,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,3,0
255,5,3,0
1273,1271,0,0
1432,0,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
157,0,4,2
295,0,2,1
301,0,3,0
157,1,2,0
253,1,0,0
157,3,4,3
153,3,0,1
1273,1355,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1282,2,1,0
157,2,4,-1
1277,1341,0,0
157,2,4,-1
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1281,0,0,0
1447,2,4,2
1277,1341,0,0
157,2,4,-1
255,5,2,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
1421,5,0,0
157,0,4,3
301,0,3,0
153,4,-4,0
157,6,4,-2
157,7,4,-3
157,2,4,-4
1441,0,0,0
157,2,4,-1
157,1,4,3
268,2,1,1
1279,0,0,0
157,0,4,3
301,0,3,0
138,1,0,0
1415,0,0,0
268,2,0,1
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1282,2,1,0
157,2,4,-1
1277,1341,0,0
157,2,4,-1
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1281,0,0,0
1447,2,4,4
1277,1341,0,0
157,2,4,-1
255,5,2,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
1421,5,0,0
157,0,4,2
153,4,-4,0
1421,5,0,0
157,0,4,3
153,4,-5,0
1421,5,0,0
157,0,4,5
153,4,-6,0
157,6,4,-2
157,7,4,-3
157,0,4,-4
157,1,4,-5
157,2,4,-6
1435,0,0,0
1287,0,0,0
1287,1,0,0
1285,1452,0,0
157,2,4,-1
157,1,4,5
268,2,1,1
1279,0,0,0
157,0,4,5
301,0,3,0
138,1,0,0
1415,0,0,0
268,2,0,1
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1282,2,1,0
157,2,4,-1
1277,1341,0,0
157,2,4,-1
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1281,0,0,0
1447,2,4,5
1277,1341,0,0
157,2,4,-1
255,5,2,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
1421,5,0,0
157,0,4,2
153,4,-4,0
1421,5,0,0
157,0,4,3
153,4,-5,0
1421,5,0,0
157,0,4,6
153,4,-6,0
157,6,4,-2
157,7,4,-3
157,1,4,-4
157,3,4,-5
157,2,4,-6
1418,7,0,0
157,0,4,4
1439,0,0,0
1287,1,0,0
1287,3,0,0
1285,1516,0,0
157,2,4,-1
157,1,4,6
268,2,1,1
1279,0,0,0
157,0,4,6
301,0,3,0
138,1,0,0
1415,0,0,0
268,2,0,1
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
155,2,2,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
140,0,1,0
318,0,4,2
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,308,0,0
157,2,4,-1
255,5,2,0
157,1,4,-3
153,2,0,1
1418,5,0,0
1418,5,0,0
155,2,1,0
157,1,4,2
153,2,2,1
157,3,4,3
155,3,0,0
1273,1580,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
433,0,2,2
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,2,0,0
1282,4,2,0
1277,590,0,0
157,2,4,-1
255,5,3,0
157,1,4,-2
153,2,0,1
1418,5,0,0
1420,2,1,0
157,3,4,3
1282,2,0,0
1417,3,0,0
1273,1617,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,2,0
1277,574,0,0
157,2,4,-1
255,5,2,0
157,3,4,3
1282,4,-2,0
1417,3,0,0
1273,1638,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,0
272,0,4,2
295,0,2,1
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
157,2,4,-1
1277,1621,0,0
157,2,4,-1
255,5,2,0
157,3,4,3
1282,4,-3,0
1417,3,0,0
1273,1666,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
439,0,0,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1281,0,0,0
157,2,4,-1
1277,1642,0,0
157,2,4,-1
255,5,2,0
157,3,4,2
1282,4,-2,0
1417,3,0,0
1273,1700,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
439,0,0,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,2,1
278,0,1,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
157,2,4,-1
1277,1642,0,0
157,2,4,-1
255,5,2,0
157,3,4,2
1282,4,-3,0
1417,3,0,0
1273,1739,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
157,0,4,2
295,0,2,1
301,0,1,0
157,1,2,0
253,1,0,0
157,3,4,3
153,3,0,1
1273,1757,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
157,0,4,3
295,0,4,4
153,4,-2,0
1421,5,0,0
157,0,4,4
153,4,-3,0
157,3,4,2
157,0,2,0
1273,1778,0,0
1432,0,0,0
1423,4,-3,0
1432,0,0,0
113,1787,4,-3
157,1,4,-2
150,1,1,0
253,1,3,0
147,0,1,0
1418,0,0,0
1420,4,-2,0
1273,1776,0,0
1432,0,0,0
157,1,4,4
268,2,1,1
157,1,4,4
268,2,0,1
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
155,2,2,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,0,0
1282,4,2,0
1277,590,0,0
157,2,4,-1
255,5,3,0
157,1,4,-2
153,2,0,1
1418,5,0,0
157,3,4,3
1282,2,0,0
1417,3,0,0
1273,1832,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,1812,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,1812,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1420,2,1,0
157,3,4,4
1282,2,0,0
1417,3,0,0
1273,1863,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
1448,4,-2,0
1282,4,2,0
1277,574,0,0
157,2,4,-1
255,5,2,0
157,0,4,2
255,0,1,0
153,4,-3,0
1448,4,-4,0
1282,4,-3,0
1277,574,0,0
157,2,4,-1
255,5,2,0
1448,4,-6,0
1282,4,-2,0
1282,4,-4,0
1277,397,0,0
157,2,4,-1
255,5,3,0
157,3,4,3
1282,4,-5,0
1282,4,-6,0
1417,3,0,0
1417,3,1,0
1273,1906,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
157,0,4,2
295,0,2,1
301,0,2,0
157,1,2,0
253,1,0,0
157,3,4,3
153,3,0,1
1273,1924,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
278,5,2,0
157,0,4,2
295,0,2,1
301,0,2,0
157,1,2,0
253,1,0,0
153,4,-2,1
1448,4,-4,0
1282,4,-2,0
157,2,4,-1
1277,1867,0,0
157,2,4,-1
255,5,2,0
157,3,4,3
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1273,1956,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,4,4
462,0,2,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
157,0,4,4
153,4,-2,0
278,5,2,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,-2
278,0,1,0
153,4,-5,0
157,0,4,2
278,0,1,0
153,4,-6,0
1448,4,-7,0
1281,0,0,0
1282,4,-5,0
1282,4,-6,0
1277,716,0,0
157,2,4,-1
255,5,4,0
1448,4,-9,0
1282,4,-7,0
1447,2,4,3
1277,1928,0,0
157,2,4,-1
255,5,2,0
1282,4,-8,0
1282,4,-9,0
1417,4,-4,0
1417,4,-3,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
278,5,2,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,-2
278,0,1,0
153,4,-7,0
157,0,4,2
255,0,0,0
153,4,-8,0
1448,4,-9,0
1281,0,0,0
1282,4,-7,0
1282,4,-8,0
1277,716,0,0
157,2,4,-1
255,5,4,0
1448,4,-11,0
1282,4,-9,0
1447,2,4,3
1277,1928,0,0
157,2,4,-1
255,5,2,0
1282,4,-10,0
1282,4,-11,0
1417,4,-6,0
1417,4,-5,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
278,5,2,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,-2
278,0,1,0
153,4,-9,0
157,0,4,2
255,0,1,0
153,4,-10,0
1448,4,-11,0
1281,0,0,0
1282,4,-9,0
1282,4,-10,0
1277,716,0,0
157,2,4,-1
255,5,4,0
1448,4,-13,0
1282,4,-11,0
1447,2,4,3
1277,1928,0,0
157,2,4,-1
255,5,2,0
1282,4,-12,0
1282,4,-13,0
1417,4,-8,0
1417,4,-7,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
278,5,2,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,-2
278,0,1,0
153,4,-11,0
157,0,4,2
255,0,2,0
153,4,-12,0
1448,4,-13,0
1281,0,0,0
1282,4,-11,0
1282,4,-12,0
1277,716,0,0
157,2,4,-1
255,5,4,0
1448,4,-15,0
1282,4,-13,0
1447,2,4,3
1277,1928,0,0
157,2,4,-1
255,5,2,0
1282,4,-14,0
1282,4,-15,0
1417,4,-10,0
1417,4,-9,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
278,5,2,0
1421,5,0,0
1448,4,-13,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1277,454,0,0
157,2,4,-1
255,5,5,0
1448,4,-14,0
1282,4,-12,0
1282,4,-13,0
1277,436,0,0
157,2,4,-1
255,5,3,0
157,0,4,-14
324,0,32,0
153,4,-11,0
1418,5,0,0
255,5,2,0
1421,5,0,0
157,0,4,-11
153,4,-12,0
1421,5,0,0
155,4,-13,0
1273,2138,0,0
1432,0,0,0
1420,4,-13,0
1432,0,0,0
157,0,4,-13
433,0,4,-11
98,2174,0,0
1421,5,0,0
157,0,4,-13
318,0,4,-12
341,0,4,-11
153,4,-14,0
278,5,2,0
1421,5,0,0
1448,4,-16,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1282,4,-10,0
1282,4,-14,0
1282,4,-12,0
1277,118,0,0
157,2,4,-1
255,5,11,0
1448,4,-17,0
1282,4,-15,0
1282,4,-16,0
157,2,4,-1
1277,1836,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
1418,5,0,0
1273,2136,0,0
1432,0,0,0
1418,5,0,0
278,5,2,0
1421,5,0,0
1448,4,-14,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1282,4,-10,0
1282,4,-12,0
1282,4,-12,0
1277,118,0,0
157,2,4,-1
255,5,11,0
1448,4,-15,0
1282,4,-13,0
1282,4,-14,0
157,2,4,-1
1277,1836,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,2213,0,0
1418,5,0,0
1418,5,0,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,4,0
1447,2,2,3
1277,1584,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
1447,2,2,3
1277,1584,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
1447,2,2,3
1277,1584,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
157,3,4,5
155,3,0,0
1273,2262,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,908,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,3,4,5
155,3,0,0
1273,2285,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,2,0
1421,5,0,0
1448,4,-3,0
1282,4,3,0
1282,4,2,0
1277,397,0,0
157,2,4,-1
255,5,3,0
1448,4,-4,0
1282,2,6,0
1282,4,-2,0
1282,4,-3,0
1447,2,2,0
1277,864,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
255,5,2,0
157,3,4,4
155,3,0,0
1273,2316,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,6,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,864,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,3,4,4
155,3,0,0
1273,2339,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,6,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,864,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,0,2,1
278,0,1,0
157,3,4,4
153,3,0,0
1273,2364,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,4,6
347,0,3,0
140,1,0,0
368,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,7,0
1282,4,6,0
1282,4,5,0
1282,2,1,0
1447,2,2,3
1277,1761,0,0
157,2,4,-1
255,5,5,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,1359,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,3,4,9
155,3,0,0
1273,2412,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,4,8
347,0,3,0
140,1,0,0
368,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
157,0,2,1
153,4,-2,0
1421,5,0,0
155,4,-3,0
1273,2443,0,0
1432,0,0,0
1420,4,-3,0
1432,0,0,0
157,0,4,-3
433,0,4,5
98,2489,0,0
278,5,3,0
278,5,3,0
1448,4,-9,0
1282,4,-3,0
1447,2,4,4
1277,1042,0,0
157,2,4,-1
255,5,2,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
255,5,3,0
278,5,2,0
1448,4,-8,0
1282,4,-4,0
1282,4,-5,0
1282,4,3,0
1282,4,2,0
157,2,4,-1
1277,484,0,0
157,2,4,-1
255,5,5,0
1282,4,-7,0
1282,4,-8,0
1417,4,-5,0
1417,4,-4,0
255,5,2,0
1421,5,0,0
1448,4,-7,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1447,2,2,0
1277,908,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
255,5,3,0
1273,2441,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
155,4,-3,0
1273,2496,0,0
1432,0,0,0
1420,4,-3,0
1432,0,0,0
157,0,4,-3
433,0,4,8
98,2522,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1282,4,-3,0
1447,2,4,7
1277,1642,0,0
157,2,4,-1
255,5,2,0
157,0,4,-2
272,0,4,-4
153,4,-5,0
1448,4,-6,0
1282,4,-5,0
1447,2,2,3
1277,1584,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1273,2494,0,0
1432,0,0,0
1418,5,0,0
157,3,4,11
155,3,0,0
1273,2529,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
140,0,1024,0
301,0,16,0
301,0,4,0
157,1,2,1
414,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,8
347,0,3,0
140,1,0,0
368,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,9,0
1282,4,8,0
1282,4,7,0
1282,2,1,0
1447,2,2,3
1277,1761,0,0
157,2,4,-1
255,5,5,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,6,0
1282,4,5,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,1411,0,0
157,2,4,-1
255,5,6,0
1418,5,0,0
157,3,4,11
155,3,0,0
1273,2594,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
140,0,1024,0
301,0,16,0
301,0,4,0
157,1,2,1
414,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,8
347,0,3,0
140,1,0,0
368,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,9,0
1282,4,8,0
1282,4,7,0
1282,2,1,0
1447,2,2,3
1277,1761,0,0
157,2,4,-1
255,5,5,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,6,0
1282,4,5,0
1282,4,4,0
1282,2,6,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,1475,0,0
157,2,4,-1
255,5,7,0
1418,5,0,0
157,3,4,11
155,3,0,0
1273,2660,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,4,8
347,0,3,0
140,1,0,0
368,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,649,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
157,0,2,1
153,4,-2,0
1421,5,0,0
155,4,-3,0
1273,2691,0,0
1432,0,0,0
1420,4,-3,0
1432,0,0,0
157,0,4,-3
433,0,4,5
98,2739,0,0
278,5,3,0
278,5,3,0
1448,4,-9,0
1282,4,-3,0
1447,2,4,4
1277,1042,0,0
157,2,4,-1
255,5,2,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
255,5,3,0
157,1,2,6
153,4,-6,1
278,5,2,0
1448,4,-8,0
1282,4,-4,0
1282,4,-5,0
1282,4,3,0
1282,4,2,0
157,2,4,-1
1277,484,0,0
157,2,4,-1
255,5,5,0
1282,4,-7,0
1282,4,-8,0
1417,4,-5,0
1417,4,-4,0
255,5,2,0
1421,5,0,0
1448,4,-7,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1447,2,2,0
1277,908,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
255,5,3,0
1273,2689,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
155,4,-3,0
1273,2746,0,0
1432,0,0,0
1420,4,-3,0
1432,0,0,0
157,0,4,-3
433,0,4,8
98,2772,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1282,4,-3,0
1447,2,4,7
1277,1642,0,0
157,2,4,-1
255,5,2,0
157,0,4,-2
272,0,4,-4
153,4,-5,0
1448,4,-6,0
1282,4,-5,0
1447,2,2,3
1277,1584,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1273,2744,0,0
1432,0,0,0
1418,5,0,0
157,3,4,11
155,3,0,0
1273,2779,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,7,0
1448,4,-8,0
1281,0,0,0
1281,0,0,0
1282,4,3,0
1282,4,2,0
157,2,4,-1
1277,2857,0,0
157,2,4,-1
255,5,5,0
157,3,4,4
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,2816,0,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,7,0
1448,4,-8,0
1282,4,4,0
1282,4,5,0
1282,4,3,0
1282,4,2,0
157,2,4,-1
1277,2857,0,0
157,2,4,-1
255,5,5,0
157,3,4,6
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,2853,0,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,7,0
278,5,7,0
1448,4,-15,0
1281,1,0,0
1277,3341,0,0
157,2,4,-1
255,5,2,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1282,4,-14,0
1282,4,-15,0
1417,4,-8,0
1417,4,-7,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
1417,4,-2,0
255,5,7,0
157,1,2,6
153,4,-2,1
1421,5,0,0
157,0,4,3
324,0,2,0
153,4,-9,0
1421,5,0,0
157,0,4,2
324,0,2,0
153,4,-10,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,5
295,0,4,-9
153,4,-11,0
157,0,4,4
295,0,4,-10
153,4,-12,0
1448,4,-13,0
1282,4,-11,0
1282,4,-12,0
1447,2,4,-8
1277,2289,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,5
272,0,4,-9
153,4,-11,0
157,0,4,4
295,0,4,-10
153,4,-12,0
1448,4,-13,0
1282,4,-11,0
1282,4,-12,0
1447,2,4,-8
1277,2289,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,5
272,0,4,-9
153,4,-11,0
157,0,4,4
272,0,4,-10
153,4,-12,0
1448,4,-13,0
1282,4,-11,0
1282,4,-12,0
1447,2,4,-8
1277,2289,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,5
295,0,4,-9
153,4,-11,0
157,0,4,4
272,0,4,-10
153,4,-12,0
1448,4,-13,0
1282,4,-11,0
1282,4,-12,0
1447,2,4,-8
1277,2289,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-11,0
1281,1,0,0
1281,0,0,0
1281,3,0,0
1447,2,4,-8
1277,2229,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
1421,5,0,0
1448,4,-11,0
1281,3,0,0
1281,2,0,0
1281,1,0,0
1447,2,4,-8
1277,2229,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,3,4,6
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,3010,0,0
1418,5,0,0
1418,5,0,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,7,0
278,5,7,0
1448,4,-15,0
1281,1,0,0
1277,3341,0,0
157,2,4,-1
255,5,2,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1282,4,-14,0
1282,4,-15,0
1417,4,-8,0
1417,4,-7,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
1417,4,-2,0
255,5,7,0
157,1,2,6
153,4,-2,1
278,5,2,0
278,5,2,0
1448,4,-12,0
1282,4,4,0
1282,4,3,0
1282,4,6,0
1282,4,5,0
1277,454,0,0
157,2,4,-1
255,5,5,0
1282,4,-11,0
1282,4,-12,0
1417,4,-10,0
1417,4,-9,0
255,5,2,0
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-14,0
1282,4,-9,0
1282,4,-10,0
1277,3282,0,0
157,2,4,-1
255,5,3,0
1448,4,-16,0
1282,4,-13,0
1282,4,-14,0
1282,4,2,0
1277,3306,0,0
157,2,4,-1
255,5,4,0
1282,4,-15,0
1282,4,-16,0
1417,4,-12,0
1417,4,-11,0
255,5,2,0
255,5,2,0
278,5,2,0
278,5,2,0
1448,4,-16,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1282,4,-12,0
157,2,4,-1
1277,484,0,0
157,2,4,-1
255,5,5,0
1282,4,-15,0
1282,4,-16,0
1417,4,-14,0
1417,4,-13,0
255,5,2,0
278,5,2,0
278,5,2,0
1421,5,0,0
1448,4,-16,0
1282,4,-11,0
1282,4,-12,0
1281,1,0,0
1277,514,0,0
157,2,4,-1
255,5,4,0
1448,4,-18,0
1282,4,6,0
1282,4,5,0
1282,4,-15,0
1282,4,-16,0
157,2,4,-1
1277,484,0,0
157,2,4,-1
255,5,5,0
1448,4,-19,0
1282,4,-17,0
1282,4,-18,0
1447,2,4,-8
1277,2320,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
255,5,2,0
1421,5,0,0
278,5,2,0
278,5,2,0
1421,5,0,0
186,0,1,0
153,4,-15,0
1448,4,-17,0
1282,4,-11,0
1282,4,-12,0
1282,4,-15,0
1277,514,0,0
157,2,4,-1
255,5,4,0
1448,4,-19,0
1282,4,6,0
1282,4,5,0
1282,4,-16,0
1282,4,-17,0
157,2,4,-1
1277,484,0,0
157,2,4,-1
255,5,5,0
1448,4,-20,0
1282,4,-18,0
1282,4,-19,0
1447,2,4,-8
1277,2320,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
255,5,2,0
1418,5,0,0
1421,5,0,0
278,5,2,0
278,5,2,0
1421,5,0,0
186,0,1,0
153,4,-15,0
1448,4,-17,0
1282,4,-11,0
1282,4,-12,0
1282,4,-15,0
1277,514,0,0
157,2,4,-1
255,5,4,0
1448,4,-19,0
1282,4,4,0
1282,4,3,0
1282,4,-16,0
1282,4,-17,0
157,2,4,-1
1277,484,0,0
157,2,4,-1
255,5,5,0
1448,4,-20,0
1282,4,-18,0
1282,4,-19,0
1447,2,4,-8
1277,2320,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
255,5,2,0
1418,5,0,0
278,5,2,0
278,5,2,0
1421,5,0,0
1448,4,-16,0
1282,4,-11,0
1282,4,-12,0
1281,1,0,0
1277,514,0,0
157,2,4,-1
255,5,4,0
1448,4,-18,0
1282,4,4,0
1282,4,3,0
1282,4,-15,0
1282,4,-16,0
157,2,4,-1
1277,484,0,0
157,2,4,-1
255,5,5,0
1448,4,-19,0
1282,4,-17,0
1282,4,-18,0
1447,2,4,-8
1277,2320,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
255,5,2,0
1421,5,0,0
1448,4,-15,0
1281,1,0,0
1281,0,0,0
1281,3,0,0
1447,2,4,-8
1277,2229,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
1421,5,0,0
1448,4,-15,0
1281,3,0,0
1281,2,0,0
1281,1,0,0
1447,2,4,-8
1277,2229,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,3,4,7
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,3261,0,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1447,2,2,0
1277,1541,0,0
157,2,4,-1
1447,2,2,3
1277,1799,0,0
157,2,4,-1
155,2,6,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
278,5,2,0
203,0,4,2
153,4,-1,0
1448,4,-3,0
1282,4,3,0
1282,4,-1,0
1277,397,0,0
255,5,3,0
157,3,4,4
1282,4,-2,0
1282,4,-3,0
1417,3,0,0
1417,3,1,0
1273,3302,0,0
255,5,2,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
1421,5,0,0
278,5,2,0
1448,4,-2,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1277,514,0,0
255,5,4,0
1448,4,-3,0
1447,2,4,3
1277,363,0,0
255,5,1,0
1448,4,-5,0
1282,4,-1,0
1282,4,-2,0
1282,4,-3,0
1277,544,0,0
255,5,4,0
157,3,4,5
1282,4,-4,0
1282,4,-5,0
1417,3,0,0
1417,3,1,0
1273,3337,0,0
255,5,2,0
1418,5,0,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,7,0
1447,2,4,-7
1277,3265,0,0
1279,0,0,0
140,0,255,0
646,0,24,0
138,1,0,0
1415,0,0,0
153,4,-1,1
1421,5,0,0
1421,5,0,0
140,0,4,0
318,0,4,2
153,4,-8,0
1448,4,-9,0
1282,4,-8,0
1447,2,4,-7
1277,780,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
140,0,6,0
318,0,4,2
153,4,-8,0
1448,4,-9,0
1282,4,-8,0
1447,2,4,-4
1277,1554,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
157,3,4,3
1282,4,-1,0
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,3394,0,0
255,5,7,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
1447,2,2,3
1277,1642,0,0
157,2,4,-1
255,5,2,0
1448,4,-3,0
1282,4,2,0
1447,2,2,6
1277,1642,0,0
157,2,4,-1
255,5,2,0
157,0,4,-2
548,0,4,-3
157,3,4,3
153,3,0,0
1273,3425,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
1447,2,2,3
1277,1642,0,0
157,2,4,-1
255,5,2,0
180,0,4,-2
1279,0,0,0
1448,4,-3,0
1282,4,2,0
1447,2,2,6
1277,1642,0,0
157,2,4,-1
255,5,2,0
1415,0,0,0
548,0,4,-3
157,3,4,3
153,3,0,0
1273,3458,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1447,2,2,0
1277,385,0,0
157,2,4,-1
155,2,2,0
1447,2,2,3
1277,1799,0,0
157,2,4,-1
1447,2,2,6
1277,1799,0,0
157,2,4,-1
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1282,2,0,0
1277,574,0,0
157,2,4,-1
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
1420,2,0,0
157,3,4,2
1282,4,-2,0
1417,3,0,0
1273,3504,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
278,5,2,0
1448,4,-2,0
157,2,4,-1
1277,3482,0,0
157,2,4,-1
255,5,1,0
1448,4,-3,0
157,2,4,-1
1277,3482,0,0
157,2,4,-1
255,5,1,0
1448,4,-5,0
1282,4,-2,0
1282,4,-3,0
1277,397,0,0
157,2,4,-1
255,5,3,0
157,3,4,2
1282,4,-4,0
1282,4,-5,0
1417,3,0,0
1417,3,1,0
1273,3542,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,3,0
1447,2,4,-4
1277,1799,0,0
157,2,4,-1
1421,5,0,0
1448,4,-5,0
157,2,4,-1
1277,3482,0,0
157,2,4,-1
255,5,1,0
157,1,4,-5
153,4,-3,1
1418,5,0,0
157,1,4,-3
268,2,0,1
157,1,2,0
153,4,-4,1
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,3578,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,3,0
1448,4,-4,0
157,2,4,-1
1277,3546,0,0
157,2,4,-1
255,5,1,0
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,3603,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,3,0
1447,2,4,-4
1277,1541,0,0
157,2,4,-1
1421,5,0,0
1448,4,-5,0
157,2,4,-1
1277,3482,0,0
157,2,4,-1
255,5,1,0
157,1,4,-5
153,4,-3,1
1418,5,0,0
1279,0,0,0
157,0,4,-3
301,0,3,0
138,1,0,0
1415,0,0,0
268,2,0,1
157,1,2,0
153,4,-4,1
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,3643,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,7,0
1447,2,4,-8
1277,3265,0,0
157,2,4,-1
278,5,3,0
1448,4,-11,0
157,2,4,-1
1277,3607,0,0
157,2,4,-1
255,5,1,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1417,4,-8,0
1417,4,-7,0
1417,4,-6,0
255,5,3,0
278,5,3,0
1448,4,-11,0
157,2,4,-1
1277,3582,0,0
157,2,4,-1
255,5,1,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
255,5,3,0
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,3700,0,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,2,0
1447,2,4,-3
1277,2217,0,0
157,2,4,-1
1421,5,0,0
1448,4,-4,0
157,2,4,-1
1277,3482,0,0
157,2,4,-1
255,5,1,0
157,1,4,-4
153,4,-2,1
1418,5,0,0
1279,0,0,0
157,0,4,-2
301,0,2,0
138,1,0,0
1415,0,0,0
268,2,0,1
157,1,2,0
153,4,-3,1
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1417,3,0,0
1417,3,1,0
1273,3738,0,0
255,5,2,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,0,0
1282,4,2,0
1277,590,0,0
157,2,4,-1
255,5,3,0
157,1,4,-2
153,2,0,1
1418,5,0,0
157,3,4,3
1282,2,0,0
1417,3,0,0
1273,3762,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,4,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,3800,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
157,3,4,4
1282,2,0,0
1417,3,0,0
1273,3830,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,4,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,3868,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,4,0
1282,4,3,0
157,2,4,-1
1277,3804,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,3899,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
157,0,4,3
301,0,2,0
153,4,-2,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1281,0,0,0
1447,2,4,2
1277,1910,0,0
157,2,4,-1
255,5,2,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
157,7,4,-3
157,6,2,0
1279,2,0,0
157,2,4,-2
1441,0,0,0
1415,2,0,0
157,1,4,-2
268,2,0,1
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
157,0,4,3
301,0,3,0
153,4,-2,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1281,0,0,0
1447,2,4,2
1277,1341,0,0
157,2,4,-1
255,5,2,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
157,7,4,-3
157,6,2,0
1279,2,0,0
157,2,4,-2
1441,0,0,0
1415,2,0,0
1279,0,0,0
157,0,4,3
301,0,3,0
138,1,0,0
1415,0,0,0
268,2,0,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,6,0
157,2,4,-1
1277,3742,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1281,0,0,0
1447,2,4,5
1277,1743,0,0
157,2,4,-1
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
1421,5,0,0
157,0,4,6
153,4,-3,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
347,0,3,0
153,4,-4,0
1448,4,-5,0
1281,0,0,0
1282,4,-4,0
1277,662,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
157,7,4,-2
157,6,2,0
1279,2,0,0
157,2,4,-3
1441,0,0,0
1415,2,0,0
157,1,4,6
268,2,0,1
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
140,0,64,0
255,0,7,0
140,1,1024,0
299,1,0,0
255,1,512,0
157,3,4,2
153,3,0,1
1273,4072,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
1421,5,0,0
278,5,2,0
278,5,2,0
186,0,0,0
153,4,-3,0
1448,4,-5,0
1282,4,-3,0
1281,0,0,0
1277,397,0,0
255,5,3,0
1448,4,-7,0
1282,4,-4,0
1282,4,-5,0
1282,4,2,0
1277,514,0,0
255,5,4,0
1282,4,-6,0
1282,4,-7,0
1417,4,-2,0
1417,4,-1,0
255,5,2,0
255,5,2,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1277,4061,0,0
255,5,1,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,2,0
153,4,-4,0
1448,4,-5,0
1282,4,-4,0
1277,574,0,0
255,5,2,0
113,4148,4,-5
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,0,0
153,4,-6,0
1448,4,-7,0
1282,4,-6,0
1277,574,0,0
255,5,2,0
157,1,4,-7
153,4,-2,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,1,0
153,4,-6,0
1448,4,-7,0
1282,4,-6,0
1277,574,0,0
255,5,2,0
157,1,4,-7
153,4,-1,1
1418,5,0,0
1418,5,0,0
1273,4161,0,0
1432,0,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,2,0
153,4,-6,0
1448,4,-7,0
1282,4,-6,0
1281,1,0,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
155,4,-4,0
1421,5,0,0
155,4,-5,0
1421,5,0,0
155,4,-6,0
1421,5,0,0
155,4,-7,0
155,4,-4,37
155,4,-5,39
155,4,-6,38
155,4,-7,40
1421,5,0,0
140,0,2,0
318,0,4,2
153,4,-8,0
1421,5,0,0
1448,4,-9,0
1282,4,-4,0
1447,2,4,6
1277,1642,0,0
255,5,2,0
113,4190,4,-9
157,1,4,-8
291,4,-2,1
1273,4190,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-5,0
1447,2,4,6
1277,1642,0,0
255,5,2,0
113,4202,4,-9
157,1,4,-8
268,4,-2,1
1273,4202,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-6,0
1447,2,4,6
1277,1642,0,0
255,5,2,0
113,4214,4,-9
157,1,4,-8
268,4,-1,1
1273,4214,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-7,0
1447,2,4,6
1277,1642,0,0
255,5,2,0
113,4226,4,-9
157,1,4,-8
291,4,-1,1
1273,4226,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,0,0
153,4,-9,0
1448,4,-10,0
1282,4,-9,0
1282,4,-2,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,1,0
153,4,-9,0
1448,4,-10,0
1282,4,-9,0
1282,4,-1,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,3,4,12
1282,4,-1,0
1282,4,-2,0
1417,3,0,0
1417,3,1,0
1273,4265,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1448,4,-1,0
1282,4,4,0
1282,4,2,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,4
255,0,1,0
153,4,-1,0
1448,4,-2,0
1282,4,-1,0
1282,4,3,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,3,4,5
155,3,0,0
1273,4294,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-4,0
1281,450,0,0
1281,50,0,0
1277,397,0,0
255,5,3,0
1448,4,-6,0
1282,4,-3,0
1282,4,-4,0
1282,4,2,0
1277,514,0,0
255,5,4,0
1282,4,-5,0
1282,4,-6,0
1417,4,-2,0
1417,4,-1,0
255,5,2,0
255,5,2,0
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-6,0
1281,650,0,0
1281,150,0,0
1277,397,0,0
255,5,3,0
1448,4,-8,0
1282,4,-5,0
1282,4,-6,0
1282,4,2,0
1277,514,0,0
255,5,4,0
1282,4,-7,0
1282,4,-8,0
1417,4,-4,0
1417,4,-3,0
255,5,2,0
255,5,2,0
157,1,4,4
153,4,-4,1
157,1,4,3
153,4,-3,1
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-8,0
1281,300,0,0
1281,500,0,0
1277,397,0,0
255,5,3,0
1448,4,-10,0
1282,4,-7,0
1282,4,-8,0
1282,4,2,0
1277,514,0,0
255,5,4,0
1282,4,-9,0
1282,4,-10,0
1417,4,-6,0
1417,4,-5,0
255,5,2,0
255,5,2,0
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-10,0
1281,390,0,0
1281,550,0,0
1277,397,0,0
255,5,3,0
1448,4,-12,0
1282,4,-9,0
1282,4,-10,0
1282,4,2,0
1277,514,0,0
255,5,4,0
1282,4,-11,0
1282,4,-12,0
1417,4,-8,0
1417,4,-7,0
255,5,2,0
255,5,2,0
278,5,2,0
1447,2,4,-10
1277,2217,0,0
1421,5,0,0
1448,4,-11,0
1281,1024,0,0
1277,308,0,0
255,5,2,0
157,1,4,-11
153,4,-10,1
1418,5,0,0
155,4,-9,0
278,5,2,0
1421,5,0,0
1448,4,-12,0
1281,0,0,0
1281,0,0,0
1277,397,0,0
255,5,3,0
1448,4,-13,0
1282,4,-11,0
1282,4,-12,0
1447,2,4,-10
1277,1836,0,0
255,5,3,0
1418,5,0,0
255,5,2,0
1421,5,0,0
1448,4,-11,0
1282,4,-1,0
1282,4,-2,0
1447,2,4,-10
1277,1836,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
1448,4,-11,0
1282,4,-3,0
1282,4,-4,0
1447,2,4,-10
1277,1836,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
1448,4,-11,0
1282,4,-5,0
1282,4,-6,0
1447,2,4,-10
1277,1836,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
1448,4,-11,0
1282,4,-7,0
1282,4,-8,0
1447,2,4,-10
1277,1836,0,0
255,5,3,0
1418,5,0,0
278,5,2,0
278,5,2,0
1421,5,0,0
1448,4,-12,0
1281,450,0,0
1281,550,0,0
1277,397,0,0
255,5,3,0
1448,4,-14,0
1282,4,-11,0
1282,4,-12,0
1282,4,2,0
1277,514,0,0
255,5,4,0
1448,4,-15,0
1282,4,-13,0
1282,4,-14,0
1447,2,4,-10
1277,1836,0,0
255,5,3,0
1418,5,0,0
255,5,2,0
255,5,2,0
278,5,2,0
1447,2,4,-12
1277,385,0,0
1421,5,0,0
155,4,-13,0
1273,4475,0,0
1432,0,0,0
1420,4,-13,0
1432,0,0,0
157,0,4,-13
433,0,4,-9
98,4505,0,0
157,0,4,-13
393,0,2,0
98,4503,0,0
278,5,2,0
278,5,2,0
1448,4,-15,0
1282,4,-13,0
1447,2,4,-10
1277,1928,0,0
255,5,2,0
1448,4,-17,0
1282,4,-11,0
1282,4,-12,0
1282,4,-14,0
1282,4,-15,0
1277,484,0,0
255,5,5,0
1282,4,-16,0
1282,4,-17,0
1417,4,-12,0
1417,4,-11,0
255,5,2,0
255,5,2,0
1273,4503,0,0
1432,0,0,0
1273,4473,0,0
1432,0,0,0
1418,5,0,0
278,5,2,0
1448,4,-14,0
1282,4,-11,0
1282,4,-12,0
1282,4,-9,0
1277,544,0,0
255,5,4,0
1282,4,-13,0
1282,4,-14,0
1417,4,-12,0
1417,4,-11,0
255,5,2,0
1421,5,0,0
155,4,-13,0
1273,4524,0,0
1432,0,0,0
1420,4,-13,0
1432,0,0,0
157,0,4,-13
433,0,4,-9
98,4565,0,0
157,0,4,-13
393,0,2,0
98,4563,0,0
1421,5,0,0
278,5,2,0
278,5,2,0
1421,5,0,0
1448,4,-14,0
1282,4,-13,0
1447,2,4,-10
1277,1910,0,0
255,5,2,0
1448,4,-16,0
1282,4,-13,0
1447,2,4,-10
1277,1928,0,0
255,5,2,0
1448,4,-18,0
1282,4,-15,0
1282,4,-16,0
1282,4,-11,0
1282,4,-12,0
1277,454,0,0
255,5,5,0
1448,4,-19,0
1282,4,-14,0
1282,4,-17,0
1282,4,-18,0
1277,4269,0,0
255,5,4,0
1418,5,0,0
255,5,2,0
255,5,2,0
1418,5,0,0
1273,4563,0,0
1432,0,0,0
1273,4522,0,0
1432,0,0,0
1418,5,0,0
255,5,2,0
157,3,4,5
1282,4,-9,0
1282,4,-10,0
1417,3,0,0
1417,3,1,0
1273,4579,0,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
1447,2,4,-2
1277,2217,0,0
1421,5,0,0
1421,5,0,0
140,0,1024,0
301,0,16,0
153,4,-3,0
1448,4,-4,0
1282,4,-3,0
1277,308,0,0
255,5,2,0
157,1,4,-4
153,4,-2,1
1418,5,0,0
1418,5,0,0
155,4,-1,0
1421,5,0,0
155,4,-3,0
1273,4608,0,0
1432,0,0,0
1420,4,-3,0
1432,0,0,0
157,0,4,-3
255,0,1,0
433,0,4,4
98,4623,0,0
1421,5,0,0
1448,4,-4,0
1282,4,4,0
1282,4,3,0
1282,4,-3,0
1447,2,4,-2
1277,1960,0,0
255,5,4,0
1418,5,0,0
1273,4606,0,0
1432,0,0,0
1418,5,0,0
278,5,7,0
1421,5,0,0
278,5,7,0
140,0,1024,0
301,0,4,0
153,4,-10,0
1448,4,-17,0
1282,4,-10,0
1277,3341,0,0
255,5,2,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1282,4,-14,0
1282,4,-15,0
1282,4,-16,0
1282,4,-17,0
1417,4,-9,0
1417,4,-8,0
1417,4,-7,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
255,5,7,0
1418,5,0,0
1421,5,0,0
157,0,4,-1
153,4,-10,0
1421,5,0,0
155,4,-11,1
1273,4659,0,0
1432,0,0,0
1420,4,-11,0
1432,0,0,0
157,0,4,-11
433,0,4,-10
98,4717,0,0
1421,5,0,0
278,5,2,0
1421,5,0,0
278,5,2,0
1421,5,0,0
278,5,7,0
1421,5,0,0
157,0,4,-11
278,0,1,0
153,4,-12,0
1448,4,-14,0
1282,4,-12,0
1447,2,4,-2
1277,1928,0,0
255,5,2,0
157,0,4,-11
278,0,0,0
153,4,-15,0
1448,4,-17,0
1282,4,-15,0
1447,2,4,-2
1277,1928,0,0
255,5,2,0
157,0,4,2
301,0,2,0
153,4,-18,0
1448,4,-25,0
1282,4,-13,0
1282,4,-14,0
1282,4,-16,0
1282,4,-17,0
1282,4,-18,0
1447,2,4,-9
1277,3014,0,0
255,5,6,0
1448,4,-26,0
1282,4,-19,0
1282,4,-20,0
1282,4,-21,0
1282,4,-22,0
1282,4,-23,0
1282,4,-24,0
1282,4,-25,0
1447,2,4,-9
1277,2368,0,0
255,5,8,0
1418,5,0,0
255,5,7,0
1418,5,0,0
255,5,2,0
1418,5,0,0
255,5,2,0
1418,5,0,0
1273,4657,0,0
1432,0,0,0
1418,5,0,0
157,3,4,5
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,4738,0,0
1418,5,0,0
255,5,7,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
1448,4,-1,0
1281,255,0,0
1282,4,2,0
1277,676,0,0
255,5,3,0
1448,4,-2,0
1281,0,0,0
1282,4,-1,0
1277,696,0,0
255,5,3,0
157,3,4,3
1282,4,-2,0
1417,3,0,0
1273,4763,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,3
318,0,4,3
1279,0,0,0
157,0,4,2
318,0,4,2
1415,1,0,0
253,1,0,0
157,3,4,4
153,3,0,1
1273,4780,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,2
318,0,4,2
157,3,4,3
153,3,0,0
1273,4792,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,7,0
1421,5,0,0
278,5,7,0
140,0,64,0
301,0,4,0
301,0,16,0
301,0,2,0
153,4,-8,0
1448,4,-15,0
1282,4,-8,0
1277,3341,0,0
255,5,2,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1282,4,-14,0
1282,4,-15,0
1417,4,-7,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
1417,4,-2,0
1417,4,-1,0
255,5,7,0
1418,5,0,0
1421,5,0,0
140,0,1,0
318,0,4,2
153,4,-8,0
1421,5,0,0
155,4,-9,16
1421,5,0,0
157,0,4,-9
324,0,2,0
153,4,-10,0
1421,5,0,0
155,4,-11,0
1273,4842,0,0
1432,0,0,0
1420,4,-11,0
1432,0,0,0
157,0,4,-11
433,0,4,-9
98,5016,0,0
1421,5,0,0
155,4,-12,0
1273,4851,0,0
1432,0,0,0
1420,4,-12,0
1432,0,0,0
157,0,4,-12
433,0,4,-9
98,5013,0,0
1421,5,0,0
157,0,4,-12
301,0,255,0
341,0,4,-9
646,0,16,0
1279,0,0,0
157,0,4,-11
301,0,255,0
341,0,4,-9
646,0,8,0
1415,1,0,0
253,1,0,0
153,4,-13,1
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-11
295,0,4,-10
153,4,-15,0
157,0,4,-12
295,0,4,-10
153,4,-16,0
1448,4,-17,0
1282,4,-15,0
1282,4,-16,0
1277,4767,0,0
255,5,3,0
1448,4,-18,0
1282,4,-17,0
1277,4784,0,0
255,5,2,0
157,0,4,-18
301,0,255,0
1279,0,0,0
157,0,4,-10
318,0,4,-10
153,4,-19,0
1448,4,-20,0
1282,4,-19,0
1277,4784,0,0
255,5,2,0
1415,0,0,0
341,0,4,-20
140,1,255,0
276,1,0,0
153,4,-21,1
1448,4,-22,0
1282,4,-21,0
1277,4742,0,0
255,5,2,0
157,0,4,-22
153,4,-14,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
140,0,0,0
646,0,16,0
1279,0,0,0
157,0,4,-14
646,0,8,0
1415,1,0,0
253,1,0,0
255,1,0,0
153,4,-13,1
1279,0,0,0
157,0,4,-14
646,0,24,0
272,0,4,-13
138,1,0,0
1415,0,0,0
153,4,-1,1
278,5,7,0
1421,5,0,0
1421,5,0,0
278,5,2,0
278,5,2,0
278,5,2,0
278,5,2,0
278,5,2,0
1421,5,0,0
1448,4,-21,0
1282,4,-8,0
1282,4,-8,0
1447,2,4,-7
1277,2783,0,0
255,5,3,0
157,0,4,-10
318,0,4,-8
153,4,-22,0
157,0,4,-10
318,0,4,-8
153,4,-23,0
1448,4,-25,0
1282,4,-22,0
1282,4,-23,0
1277,397,0,0
255,5,3,0
1448,4,-27,0
1282,4,4,0
1282,4,3,0
1282,4,-24,0
1282,4,-25,0
1277,454,0,0
255,5,5,0
1448,4,-29,0
1282,4,-11,0
1282,4,-12,0
1277,397,0,0
255,5,3,0
1448,4,-31,0
1282,4,-28,0
1282,4,-29,0
1282,4,-8,0
1277,514,0,0
255,5,4,0
1448,4,-33,0
1282,4,-26,0
1282,4,-27,0
1282,4,-30,0
1282,4,-31,0
1277,484,0,0
255,5,5,0
1448,4,-34,0
1282,4,-15,0
1282,4,-16,0
1282,4,-17,0
1282,4,-18,0
1282,4,-19,0
1282,4,-20,0
1282,4,-21,0
1282,4,-32,0
1282,4,-33,0
1447,2,4,-7
1277,2416,0,0
255,5,10,0
1418,5,0,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,2,0
1418,5,0,0
1418,5,0,0
255,5,7,0
1418,5,0,0
1418,5,0,0
1273,4849,0,0
1432,0,0,0
1418,5,0,0
1273,4840,0,0
1432,0,0,0
1418,5,0,0
157,3,4,5
1282,4,-1,0
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,5038,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
255,5,7,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1447,2,4,-1
1277,4038,0,0
1421,5,0,0
1421,5,0,0
1448,4,-2,0
1277,15,0,0
255,5,1,0
1448,4,-3,0
1282,4,-2,0
1277,574,0,0
255,5,2,0
157,1,4,-3
153,4,-1,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1447,2,4,-1
1277,3482,0,0
255,5,1,0
180,0,4,-2
98,5113,0,0
1421,5,0,0
157,0,4,-1
153,4,-3,0
278,5,7,0
1421,5,0,0
1448,4,-10,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1277,4796,0,0
255,5,4,0
1448,4,-11,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1282,4,-10,0
1447,2,4,-1
1277,3946,0,0
255,5,8,0
1418,5,0,0
255,5,7,0
1421,5,0,0
157,0,4,-1
295,0,4,-3
153,4,-4,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
278,0,1,0
153,4,-5,0
1448,4,-6,0
1282,4,-5,0
1282,4,-4,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,1,4,-3
153,4,-1,1
1418,5,0,0
1418,5,0,0
1273,5113,0,0
1432,0,0,0
1418,5,0,0
278,5,7,0
1448,4,-8,0
1447,2,4,-1
1277,3647,0,0
255,5,1,0
157,3,4,5
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,5138,0,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1447,2,4,-1
1277,4038,0,0
1421,5,0,0
1421,5,0,0
1448,4,-2,0
1277,30,0,0
255,5,1,0
1448,4,-3,0
1282,4,-2,0
1277,574,0,0
255,5,2,0
157,1,4,-3
153,4,-1,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1447,2,4,-1
1277,3482,0,0
255,5,1,0
180,0,4,-2
98,5208,0,0
1421,5,0,0
157,0,4,-1
153,4,-3,0
278,5,2,0
1421,5,0,0
1448,4,-5,0
1282,4,3,0
1282,4,4,0
1282,4,2,0
1277,4298,0,0
255,5,4,0
1448,4,-6,0
1282,4,-4,0
1282,4,-5,0
1447,2,4,-1
1277,3903,0,0
255,5,3,0
1418,5,0,0
255,5,2,0
1421,5,0,0
157,0,4,-1
295,0,4,-3
153,4,-4,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
278,0,1,0
153,4,-5,0
1448,4,-6,0
1282,4,-5,0
1282,4,-4,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,1,4,-3
153,4,-1,1
1418,5,0,0
1418,5,0,0
1273,5208,0,0
1432,0,0,0
1418,5,0,0
278,5,2,0
1448,4,-3,0
1447,2,4,-1
1277,3704,0,0
255,5,1,0
157,3,4,5
1282,4,-2,0
1282,4,-3,0
1417,3,0,0
1417,3,1,0
1273,5223,0,0
255,5,2,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
186,0,1,0
153,2,0,0
1447,2,2,1
1277,385,0,0
157,2,4,-1
1447,2,2,3
1277,2217,0,0
157,2,4,-1
1447,2,2,5
1277,3265,0,0
157,2,4,-1
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
155,4,-2,1024
1421,5,0,0
155,4,-3,0
1421,5,0,0
157,0,4,-2
301,0,2,0
153,4,-4,0
1421,5,0,0
155,4,-5,0
1273,5266,0,0
1432,0,0,0
1420,4,-5,0
1432,0,0,0
157,0,4,-5
433,0,4,-4
98,5300,0,0
1421,5,0,0
155,4,-6,0
1273,5275,0,0
1432,0,0,0
1420,4,-6,0
1432,0,0,0
157,0,4,-6
433,0,4,-4
98,5297,0,0
157,0,4,-5
318,0,4,-5
1279,0,0,0
157,0,4,-6
318,0,4,-6
1415,1,0,0
253,1,0,0
1279,1,0,0
157,0,4,-2
318,0,4,-2
1415,1,0,0
437,1,0,0
98,5294,1,0
1273,5273,0,0
1273,5294,0,0
1432,0,0,0
1420,4,-3,0
1273,5273,0,0
1432,0,0,0
1418,5,0,0
1273,5264,0,0
1432,0,0,0
1418,5,0,0
157,3,4,2
1282,4,-3,0
1417,3,0,0
1273,5310,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
155,4,-1,257
1421,5,0,0
155,4,-2,258
1421,5,0,0
155,4,-3,259
1421,5,0,0
155,4,-4,4
278,5,2,0
278,5,2,0
1448,4,-8,0
1282,4,10,0
1282,4,9,0
1282,4,8,0
1282,4,7,0
1282,4,6,0
1282,4,5,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1282,4,-4,0
1277,4076,0,0
255,5,11,0
1282,4,-7,0
1282,4,-8,0
1417,4,-6,0
1417,4,-5,0
255,5,2,0
278,5,2,0
278,5,2,0
1448,4,-10,0
1282,4,3,0
1282,4,2,0
1282,4,-4,0
1277,514,0,0
255,5,4,0
1282,4,-9,0
1282,4,-10,0
1417,4,-8,0
1417,4,-7,0
255,5,2,0
278,5,7,0
1421,5,0,0
278,5,7,0
140,0,1024,0
301,0,16,0
153,4,-16,0
1448,4,-23,0
1282,4,-16,0
1277,3341,0,0
255,5,2,0
1282,4,-17,0
1282,4,-18,0
1282,4,-19,0
1282,4,-20,0
1282,4,-21,0
1282,4,-22,0
1282,4,-23,0
1417,4,-15,0
1417,4,-14,0
1417,4,-13,0
1417,4,-12,0
1417,4,-11,0
1417,4,-10,0
1417,4,-9,0
255,5,7,0
1418,5,0,0
140,0,255,0
646,0,24,0
1279,0,0,0
140,0,128,0
646,0,8,0
1415,1,0,0
253,1,0,0
153,4,-9,1
278,5,2,0
278,5,2,0
1448,4,-19,0
1281,0,0,0
1281,0,0,0
1277,397,0,0
255,5,3,0
1282,4,-18,0
1282,4,-19,0
1417,4,-17,0
1417,4,-16,0
255,5,2,0
100,5615,0,0
278,5,7,0
1421,5,0,0
1421,5,0,0
278,5,7,0
140,0,30,0
318,0,4,-4
153,4,-25,0
140,0,30,0
318,0,4,-4
153,4,-26,0
1448,4,-33,0
1282,4,-8,0
1282,4,-7,0
1282,4,-25,0
1282,4,-26,0
1447,2,4,-15
1277,2857,0,0
255,5,5,0
1282,4,-27,0
1282,4,-28,0
1282,4,-29,0
1282,4,-30,0
1282,4,-31,0
1282,4,-32,0
1282,4,-33,0
1417,4,-24,0
1417,4,-23,0
1417,4,-22,0
1417,4,-21,0
1417,4,-20,0
1417,4,-19,0
1417,4,-18,0
255,5,7,0
1418,5,0,0
1418,5,0,0
140,0,255,0
646,0,24,0
1279,0,0,0
140,0,128,0
646,0,8,0
1415,1,0,0
253,1,0,0
1279,1,0,0
140,0,255,0
646,0,16,0
1415,1,0,0
253,1,0,0
153,4,-9,1
278,5,7,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,7,0
140,0,64,0
318,0,4,-4
157,1,4,-7
276,1,0,0
153,4,-32,1
140,0,100,0
318,0,4,-4
153,4,-33,0
140,0,10,0
318,0,4,-4
153,4,-34,0
1448,4,-41,0
1282,4,-8,0
1282,4,-32,0
1282,4,-33,0
1282,4,-34,0
1447,2,4,-15
1277,2857,0,0
255,5,5,0
1282,4,-35,0
1282,4,-36,0
1282,4,-37,0
1282,4,-38,0
1282,4,-39,0
1282,4,-40,0
1282,4,-41,0
1417,4,-31,0
1417,4,-30,0
1417,4,-29,0
1417,4,-28,0
1417,4,-27,0
1417,4,-26,0
1417,4,-25,0
255,5,7,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
278,5,7,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,7,0
140,0,200,0
318,0,4,-4
272,0,4,-8
153,4,-39,0
140,0,10,0
318,0,4,-4
153,4,-40,0
140,0,60,0
318,0,4,-4
153,4,-41,0
1448,4,-48,0
1282,4,-39,0
1282,4,-7,0
1282,4,-40,0
1282,4,-41,0
1447,2,4,-15
1277,2857,0,0
255,5,5,0
1282,4,-42,0
1282,4,-43,0
1282,4,-44,0
1282,4,-45,0
1282,4,-46,0
1282,4,-47,0
1282,4,-48,0
1417,4,-38,0
1417,4,-37,0
1417,4,-36,0
1417,4,-35,0
1417,4,-34,0
1417,4,-33,0
1417,4,-32,0
255,5,7,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-39,0
1282,4,-18,0
1282,4,-19,0
1282,4,-20,0
1282,4,-21,0
1282,4,-22,0
1282,4,-23,0
1282,4,-24,0
1447,2,4,-15
1277,2368,0,0
255,5,8,0
1418,5,0,0
1421,5,0,0
1448,4,-39,0
1282,4,-25,0
1282,4,-26,0
1282,4,-27,0
1282,4,-28,0
1282,4,-29,0
1282,4,-30,0
1282,4,-31,0
1447,2,4,-15
1277,2368,0,0
255,5,8,0
1418,5,0,0
1421,5,0,0
1448,4,-39,0
1282,4,-32,0
1282,4,-33,0
1282,4,-34,0
1282,4,-35,0
1282,4,-36,0
1282,4,-37,0
1282,4,-38,0
1447,2,4,-15
1277,2368,0,0
255,5,8,0
1418,5,0,0
278,5,7,0
1421,5,0,0
1448,4,-45,0
1282,4,-7,0
1282,4,-8,0
1282,4,-16,0
1282,4,-17,0
1282,4,-4,0
1447,2,4,-15
1277,3014,0,0
255,5,6,0
1448,4,-46,0
1282,4,-39,0
1282,4,-40,0
1282,4,-41,0
1282,4,-42,0
1282,4,-43,0
1282,4,-44,0
1282,4,-45,0
1447,2,4,-15
1277,2368,0,0
255,5,8,0
1418,5,0,0
255,5,7,0
255,5,7,0
255,5,7,0
255,5,7,0
1273,5615,0,0
1432,0,0,0
278,5,7,0
278,5,2,0
278,5,7,0
1448,4,-26,0
1281,0,0,0
1281,0,0,0
1277,397,0,0
255,5,3,0
1448,4,-33,0
1282,4,-25,0
1282,4,-26,0
1282,4,-4,0
1277,5042,0,0
255,5,4,0
1282,4,-27,0
1282,4,-28,0
1282,4,-29,0
1282,4,-30,0
1282,4,-31,0
1282,4,-32,0
1282,4,-33,0
1417,4,-24,0
1417,4,-23,0
1417,4,-22,0
1417,4,-21,0
1417,4,-20,0
1417,4,-19,0
1417,4,-18,0
255,5,7,0
255,5,2,0
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-28,0
1281,0,0,0
1281,0,0,0
1277,397,0,0
255,5,3,0
1448,4,-30,0
1282,4,-27,0
1282,4,-28,0
1282,4,-4,0
1277,5142,0,0
255,5,4,0
1282,4,-29,0
1282,4,-30,0
1417,4,-26,0
1417,4,-25,0
255,5,2,0
255,5,2,0
1421,5,0,0
1448,4,-27,0
1281,82,0,0
1447,2,4,2
1277,3398,0,0
255,5,2,0
113,5741,4,-27
1421,5,0,0
1448,4,-28,0
1281,0,0,0
1447,2,4,-26
1277,1910,0,0
255,5,2,0
157,1,4,-28
153,4,-26,1
1418,5,0,0
155,4,-25,0
1421,5,0,0
1447,2,4,-28
1277,4038,0,0
1421,5,0,0
1421,5,0,0
1448,4,-29,0
1277,30,0,0
255,5,1,0
1448,4,-30,0
1282,4,-29,0
1277,574,0,0
255,5,2,0
157,1,4,-30
153,4,-28,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-29,0
1447,2,4,-28
1277,3482,0,0
255,5,1,0
1418,5,0,0
100,5738,1,0
1421,5,0,0
157,0,4,-28
153,4,-29,0
1421,5,0,0
1448,4,-30,0
1282,4,-25,0
1282,4,-26,0
1447,2,4,-28
1277,3903,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
157,0,4,-28
295,0,4,-29
153,4,-30,0
1421,5,0,0
1421,5,0,0
157,0,4,-29
278,0,1,0
153,4,-31,0
1448,4,-32,0
1282,4,-31,0
1282,4,-30,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,1,4,-29
153,4,-28,1
1418,5,0,0
1418,5,0,0
1273,5738,0,0
1432,0,0,0
1273,5741,0,0
1418,5,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1448,4,-27,0
1282,4,-2,0
1447,2,4,2
1277,3398,0,0
255,5,2,0
113,5816,4,-27
1421,5,0,0
1448,4,-28,0
1282,4,-7,0
1282,4,-8,0
1447,2,4,-26
1277,1836,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
1447,2,4,-28
1277,4038,0,0
1421,5,0,0
1421,5,0,0
1448,4,-29,0
1277,30,0,0
255,5,1,0
1448,4,-30,0
1282,4,-29,0
1277,574,0,0
255,5,2,0
157,1,4,-30
153,4,-28,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-29,0
1447,2,4,-28
1277,3482,0,0
255,5,1,0
1418,5,0,0
100,5813,1,0
1421,5,0,0
157,0,4,-28
153,4,-29,0
1421,5,0,0
1448,4,-30,0
1282,4,-25,0
1282,4,-26,0
1447,2,4,-28
1277,3903,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
157,0,4,-28
295,0,4,-29
153,4,-30,0
1421,5,0,0
1421,5,0,0
157,0,4,-29
278,0,1,0
153,4,-31,0
1448,4,-32,0
1282,4,-31,0
1282,4,-30,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,1,4,-29
153,4,-28,1
1418,5,0,0
1418,5,0,0
1273,5813,0,0
1432,0,0,0
1273,5816,0,0
1418,5,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1448,4,-27,0
1282,4,-1,0
1447,2,4,5
1277,1642,0,0
255,5,2,0
113,5929,4,-27
1421,5,0,0
155,4,-28,0
1421,5,0,0
155,4,-29,0
1273,5832,0,0
1432,0,0,0
1420,4,-29,0
1432,0,0,0
157,0,4,-29
433,0,4,-25
98,5910,0,0
278,5,2,0
278,5,2,0
1448,4,-33,0
1282,4,-28,0
1447,2,4,-26
1277,1928,0,0
255,5,2,0
1282,4,-32,0
1282,4,-33,0
1417,4,-31,0
1417,4,-30,0
255,5,2,0
278,5,2,0
278,5,2,0
1448,4,-35,0
1282,4,-29,0
1447,2,4,-26
1277,1928,0,0
255,5,2,0
1282,4,-34,0
1282,4,-35,0
1417,4,-33,0
1417,4,-32,0
255,5,2,0
1421,5,0,0
278,5,2,0
1421,5,0,0
1448,4,-36,0
1282,4,-30,0
1282,4,-31,0
1282,4,-7,0
1282,4,-8,0
1277,454,0,0
255,5,5,0
1448,4,-37,0
1282,4,-35,0
1282,4,-36,0
1277,436,0,0
255,5,3,0
157,0,4,-37
153,4,-34,0
1418,5,0,0
255,5,2,0
1421,5,0,0
278,5,2,0
1421,5,0,0
1448,4,-37,0
1282,4,-32,0
1282,4,-33,0
1282,4,-7,0
1282,4,-8,0
1277,454,0,0
255,5,5,0
1448,4,-38,0
1282,4,-36,0
1282,4,-37,0
1277,436,0,0
255,5,3,0
157,0,4,-38
153,4,-35,0
1418,5,0,0
255,5,2,0
157,0,4,-35
433,0,4,-34
98,5904,0,0
157,1,4,-29
153,4,-28,1
1273,5904,0,0
1432,0,0,0
1418,5,0,0
1418,5,0,0
255,5,2,0
255,5,2,0
1273,5830,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-29,0
1282,4,-28,0
1447,2,4,-26
1277,1910,0,0
255,5,2,0
1448,4,-30,0
1282,4,-29,0
1282,4,-7,0
1282,4,-8,0
1277,4269,0,0
255,5,4,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1273,5929,0,0
1432,0,0,0
1418,5,0,0
278,5,7,0
1421,5,0,0
1448,4,-33,0
1282,4,-25,0
1282,4,-26,0
1282,4,-4,0
1277,4583,0,0
255,5,4,0
1448,4,-34,0
1282,4,-27,0
1282,4,-28,0
1282,4,-29,0
1282,4,-30,0
1282,4,-31,0
1282,4,-32,0
1282,4,-33,0
1447,2,4,-15
1277,2368,0,0
255,5,8,0
1418,5,0,0
255,5,7,0
1421,5,0,0
155,4,-27,0
155,4,-27,16
1421,5,0,0
1421,5,0,0
1448,4,-29,0
1282,4,-27,0
1447,2,4,5
1277,1642,0,0
255,5,2,0
157,0,4,-29
153,4,-28,0
1418,5,0,0
1421,5,0,0
155,4,-29,0
1273,5970,0,0
1432,0,0,0
1420,4,-29,0
1432,0,0,0
157,0,4,-29
433,0,4,-25
98,5997,0,0
278,5,2,0
1421,5,0,0
1448,4,-31,0
1282,4,-29,0
1447,2,4,-26
1277,1928,0,0
255,5,2,0
1448,4,-32,0
1282,4,-18,0
1282,4,-19,0
1282,4,-20,0
1282,4,-21,0
1282,4,-22,0
1282,4,-23,0
1282,4,-24,0
1282,4,-30,0
1282,4,-31,0
1447,2,4,-15
1277,2533,0,0
255,5,10,0
1418,5,0,0
255,5,2,0
1273,5968,0,0
1432,0,0,0
1418,5,0,0
278,5,2,0
1447,2,4,-30
1277,4049,0,0
1421,5,0,0
1421,5,0,0
140,0,1024,0
301,0,1024,0
153,4,-31,0
1448,4,-32,0
1282,4,-31,0
1277,308,0,0
255,5,2,0
157,1,4,-32
153,4,-30,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1447,2,4,-31
1277,4038,0,0
157,1,4,-30
153,4,-31,1
1421,5,0,0
1448,4,-32,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1282,4,-14,0
1282,4,-15,0
1447,2,4,-31
1277,3946,0,0
255,5,8,0
1418,5,0,0
1279,0,0,0
157,0,4,-31
295,0,4,-30
138,1,0,0
1415,0,0,0
153,4,-29,1
157,3,4,11
1282,4,-29,0
1282,4,-30,0
1417,3,0,0
1417,3,1,0
1273,6059,0,0
1418,5,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
255,5,2,0
255,5,7,0
255,5,2,0
255,5,7,0
255,5,2,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
1448,4,-1,0
1277,1,0,0
255,5,1,0
1448,4,-2,0
1282,4,-1,0
1281,0,0,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-1,0
1277,15,0,0
255,5,1,0
140,0,1024,0
301,0,512,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,308,0,0
255,5,2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-3,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-1,0
1277,30,0,0
255,5,1,0
140,0,1024,0
301,0,16,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,308,0,0
255,5,2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-3,0
1277,590,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
278,5,9,0
1447,2,4,-9
1277,3462,0,0
1421,5,0,0
1447,2,4,-10
1277,4038,0,0
157,1,4,2
153,4,-10,1
278,5,2,0
1448,4,-12,0
1447,2,4,-10
1277,3508,0,0
255,5,1,0
1282,4,-11,0
1282,4,-12,0
1417,4,-9,0
1417,4,-8,0
255,5,2,0
1421,5,0,0
1448,4,-11,0
1447,2,4,-10
1277,3482,0,0
255,5,1,0
157,1,4,-11
153,4,-7,1
1418,5,0,0
278,5,3,0
1448,4,-13,0
1447,2,4,-10
1277,3546,0,0
255,5,1,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
255,5,3,0
278,5,3,0
1448,4,-13,0
1447,2,4,-10
1277,3546,0,0
255,5,1,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1417,4,-3,0
1417,4,-2,0
1417,4,-1,0
255,5,3,0
278,5,2,0
278,5,2,0
1448,4,-14,0
1282,4,-1,0
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1277,5326,0,0
255,5,10,0
1282,4,-13,0
1282,4,-14,0
1417,4,-12,0
1417,4,-11,0
255,5,2,0
1421,5,0,0
1448,4,-13,0
1282,4,-11,0
1277,604,0,0
255,5,2,0
1418,5,0,0
140,2,1,0
157,3,4,3
1282,4,-12,0
1417,3,0,0
1273,6207,0,0
255,5,2,0
1418,5,0,0
255,5,9,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1421,5,0,0
1448,4,-1,0
1279,2,0,0
1277,6063,0,0
255,5,2,0
157,0,4,-1
1418,5,0,0
140,9,1,0
*/
jmp("begin");
label("func_g_ptr_addr()");
push(ebp);
mov(ebp,esp);
mov(eax,64);
add(eax,7);
mov(ebx,1024);
mul(ebx,eax);
mov(edx,ptr[ebp+2]);
mov(ptr[edx+0],ebx);
jmp("func_g_ptr_addr()::ret");
label("func_g_ptr_addr()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_g_mem_addr()");
push(ebp);
mov(ebp,esp);
mov(eax,64);
add(eax,7);
mov(ebx,1024);
mul(ebx,eax);
add(ebx,8);
mov(edx,ptr[ebp+2]);
mov(ptr[edx+0],ebx);
jmp("func_g_mem_addr()::ret");
label("func_g_mem_addr()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_g_arr_addr()");
push(ebp);
mov(ebp,esp);
mov(eax,64);
add(eax,7);
mov(ebx,1024);
mul(ebx,eax);
add(ebx,16);
mov(edx,ptr[ebp+2]);
mov(ptr[edx+0],ebx);
jmp("func_g_arr_addr()::ret");
label("func_g_arr_addr()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_CatmullRomEx(int,int,int,int,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(eax,ptr[ebp+6]);
mov(ptr[ebp-1],eax);
dec(esp);
mov(eax,ptr[ebp+5]);
sub(eax,ptr[ebp+7]);
mov(ptr[ebp-2],eax);
dec(esp);
mov(eax,2);
mul(eax,ptr[ebp+7]);
push(eax);
mov(eax,5);
mul(eax,ptr[ebp+6]);
pop(ebx);
sub(ebx,eax);
push(ebx);
mov(eax,4);
mul(eax,ptr[ebp+5]);
pop(ebx);
add(ebx,eax);
sub(ebx,ptr[ebp+4]);
mov(ptr[ebp-3],ebx);
dec(esp);
mov(eax,ptr[ebp+6]);
sub(eax,ptr[ebp+5]);
mov(ebx,3);
mul(ebx,eax);
add(ebx,ptr[ebp+4]);
sub(ebx,ptr[ebp+7]);
mov(ptr[ebp-4],ebx);
push(eax);
mov(eax,ptr[ebp-4]);
mul(eax,ptr[ebp+3]);
div(eax,ptr[ebp+2]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-4],ebx);
mov(ebx,ptr[ebp-3]);
add(ptr[ebp-4],ebx);
push(eax);
mov(eax,ptr[ebp-4]);
mul(eax,ptr[ebp+3]);
div(eax,ptr[ebp+2]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-4],ebx);
mov(ebx,ptr[ebp-2]);
add(ptr[ebp-4],ebx);
push(eax);
mov(eax,ptr[ebp-4]);
mul(eax,ptr[ebp+3]);
div(eax,ptr[ebp+2]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-4],ebx);
mov(eax,ptr[ebp-4]);
div(eax,2);
mov(ebx,ptr[ebp-1]);
add(ebx,eax);
mov(edx,ptr[ebp+8]);
mov(ptr[edx+0],ebx);
jmp("func_CatmullRomEx(int,int,int,int,int,int)::ret");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_CatmullRomEx(int,int,int,int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
push(ptr[ebp+11]);
push(ptr[ebp+10]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
sub(esp,2);
push(ptr[ebp+5]);
push(ptr[ebp+4]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
dec(esp);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-7]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
push(ptr[ebp+7]);
push(ptr[ebp+6]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-8]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
call("func_hypot(vec2i)");
add(esp,3);
mov(eax,ptr[ebp-8]);
mov(ptr[ebp-5],eax);
inc(esp);
add(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-9]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
add(esp,2);
dec(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
call("func_hypot(vec2i)");
add(esp,3);
mov(eax,ptr[ebp-9]);
mov(ptr[ebp-8],eax);
inc(esp);
jz("if_1000::end",ptr[ebp-8]);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-10]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-5]);
call("func_mul(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-12]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-8]);
call("func_div(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-14]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
call("func_add(vec2i,vec2i)");
add(esp,5);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
add(esp,2);
add(esp,2);
add(esp,2);
jmp("if_1000::end");
label("if_1000::end");
inc(esp);
add(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-9]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp+7]);
push(ptr[ebp+6]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
add(esp,2);
dec(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
call("func_hypot(vec2i)");
add(esp,3);
mov(eax,ptr[ebp-9]);
mov(ptr[ebp-8],eax);
inc(esp);
jz("if_1001::end",ptr[ebp-8]);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-10]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-5]);
call("func_mul(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-12]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-8]);
call("func_div(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-14]);
push(ptr[ebp+7]);
push(ptr[ebp+6]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
call("func_add(vec2i,vec2i)");
add(esp,5);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,2);
add(esp,2);
add(esp,2);
jmp("if_1001::end");
label("if_1001::end");
inc(esp);
add(esp,2);
dec(esp);
dec(esp);
sub(esp,2);
pushlea(ptr[ebp-6]);
push(ptr[ebp-2]);
push(ptr[ebp+8]);
push(ptr[ebp+6]);
push(ptr[ebp-4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_CatmullRomEx(int,int,int,int,int,int)");
add(esp,7);
pushlea(ptr[ebp-7]);
push(ptr[ebp-1]);
push(ptr[ebp+9]);
push(ptr[ebp+7]);
push(ptr[ebp-3]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_CatmullRomEx(int,int,int,int,int,int)");
add(esp,7);
pushlea(ptr[ebp-9]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+12]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)::ret");
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
add(esp,2);
add(esp,2);
label("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_alloc(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-2]);
call("func_g_ptr_addr()");
add(esp,1);
mov(eax,ptr[ebp-2]);
mov(ptr[ebp-1],eax);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ebp-1]);
call("func_get_int(int)");
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
not(eax,ptr[ebp-2]);
jz("if_1002::end",eax);
dec(esp);
mov(eax,64);
add(eax,8);
mov(ebx,1024);
mul(ebx,eax);
mov(ptr[ebp-3],ebx);
mov(ebx,ptr[ebp-3]);
mov(ptr[ebp-2],ebx);
inc(esp);
jmp("if_1002::end");
label("if_1002::end");
dec(esp);
dec(esp);
mov(eax,ptr[ebp-2]);
add(eax,ptr[ebp+2]);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-3]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_alloc(int)::ret");
inc(esp);
inc(esp);
label("func_alloc(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vec2i::mag()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+0]);
push(ptr[ecx+1]);
call("func_hypot(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_vec2i::mag()::ret");
inc(esp);
inc(esp);
label("func_vec2i::mag()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vec2i::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
inc(esp);
label("func_vec2i::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vec2i(int,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
lea(ecx,ptr[ebp-2]);
call("func_vec2i::`ctor()");
mov(ebx,ptr[ebp+3]);
mov(ptr[ebp-2],ebx);
mov(ebx,ptr[ebp+2]);
mov(ptr[ebp-1],ebx);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_vec2i(int,int)::ret");
add(esp,2);
label("func_vec2i(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_add(int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
pushlea(ptr[ebp-1]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
add(esp,3);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-1]);
pop(ptr[edx+0]);
jmp("func_add(int,int)::ret");
inc(esp);
label("func_add(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_hypot(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
pushlea(ptr[ebp-1]);
push(ptr[ebp+2]);
push(ptr[ebp+3]);
call("func_hypot(int,int)");
add(esp,3);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-1]);
pop(ptr[edx+0]);
jmp("func_hypot(vec2i)::ret");
inc(esp);
label("func_hypot(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_sub(vec2i,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp+4]);
sub(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
mov(eax,ptr[ebp+5]);
sub(eax,ptr[ebp+3]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+6]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_sub(vec2i,vec2i)::ret");
add(esp,2);
inc(esp);
inc(esp);
label("func_sub(vec2i,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_add(vec2i,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp+4]);
add(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
mov(eax,ptr[ebp+5]);
add(eax,ptr[ebp+3]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+6]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_add(vec2i,vec2i)::ret");
add(esp,2);
inc(esp);
inc(esp);
label("func_add(vec2i,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_mul(vec2i,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp+3]);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
mov(eax,ptr[ebp+4]);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_mul(vec2i,int)::ret");
add(esp,2);
inc(esp);
inc(esp);
label("func_mul(vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_div(vec2i,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp+3]);
div(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
mov(eax,ptr[ebp+4]);
div(eax,ptr[ebp+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_div(vec2i,int)::ret");
add(esp,2);
inc(esp);
inc(esp);
label("func_div(vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_get_int(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],0);
mov(eax,ptr[ebp+2]);
mov(ptr[ebp-1],ptr[eax]);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-1]);
pop(ptr[edx+0]);
jmp("func_get_int(int)::ret");
inc(esp);
label("func_get_int(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_set_int(int,int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+3]);
mov(ptr[eax],ptr[ebp+2]);
mov(eax,ptr[ebp+3]);
add(eax,1);
mov(edx,ptr[ebp+4]);
mov(ptr[edx+0],eax);
jmp("func_set_int(int,int)::ret");
label("func_set_int(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_setebx(int)");
push(ebp);
mov(ebp,esp);
mov(ebx,ptr[ebp+2]);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],0);
jmp("func_setebx(int)::ret");
label("func_setebx(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_hypot(int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],0);
mov(eax,ptr[ebp+3]);
mov(ebx,ptr[ebp+2]);
hypot(eax,ebx);
mov(ptr[ebp-1],eax);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-1]);
pop(ptr[edx+0]);
jmp("func_hypot(int,int)::ret");
inc(esp);
label("func_hypot(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_sqrt(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],0);
sqrt(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-1]);
pop(ptr[edx+0]);
jmp("func_sqrt(int)::ret");
inc(esp);
label("func_sqrt(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_QapAssert(int)");
push(ebp);
mov(ebp,esp);
not(eax,ptr[ebp+2]);
jz("if_1003::end",eax);
label("Run-time error!");
mov(err,-1);
jmp("if_1003::end");
label("if_1003::end");
label("func_QapAssert(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_QapAssert(int,int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+3]);
neq(eax,ptr[ebp+2]);
jz("if_1004::end",eax);
label("Run-time error!");
mov(err,-1);
jmp("if_1004::end");
label("if_1004::end");
label("func_QapAssert(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_min(int,int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+3]);
less(eax,ptr[ebp+2]);
jz("if_1005::end",eax);
mov(edx,ptr[ebp+4]);
push(ptr[ebp+3]);
pop(ptr[edx+0]);
jmp("func_min(int,int)::ret");
jmp("if_1005::end");
label("if_1005::end");
mov(edx,ptr[ebp+4]);
push(ptr[ebp+2]);
pop(ptr[edx+0]);
jmp("func_min(int,int)::ret");
label("func_min(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_max(int,int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+3]);
more(eax,ptr[ebp+2]);
jz("if_1006::end",eax);
mov(edx,ptr[ebp+4]);
push(ptr[ebp+3]);
pop(ptr[edx+0]);
jmp("func_max(int,int)::ret");
jmp("if_1006::end");
label("if_1006::end");
mov(edx,ptr[ebp+4]);
push(ptr[ebp+2]);
pop(ptr[edx+0]);
jmp("func_max(int,int)::ret");
label("func_max(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_clamp(int,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-1]);
push(ptr[ebp+4]);
push(ptr[ebp+2]);
call("func_max(int,int)");
add(esp,3);
pushlea(ptr[ebp-2]);
push(ptr[ebp-1]);
push(ptr[ebp+3]);
call("func_min(int,int)");
add(esp,3);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_clamp(int,int,int)::ret");
inc(esp);
inc(esp);
label("func_clamp(int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_qap_vertex::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
lea(ecx,ptr[ecx+1]);
call("func_vec2i::`ctor()");
mov(ecx,ptr[ebp-1]);
inc(esp);
label("func_qap_vertex::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_qap_vertex(int,vec2i)");
push(ebp);
mov(ebp,esp);
sub(esp,3);
lea(ecx,ptr[ebp-3]);
call("func_qap_vertex::`ctor()");
mov(ebx,ptr[ebp+4]);
mov(ptr[ebp-3],ebx);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_qap_vertex(int,vec2i)::ret");
add(esp,3);
label("func_qap_vertex(int,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::reserve(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,3);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_alloc(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(ebx,ptr[ebp-3]);
mov(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
mov(ptr[ecx+1],0);
mov(ebx,ptr[ebp+2]);
mov(ptr[ecx+2],ebx);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],0);
jmp("func_vector_qap_vertex::reserve(int)::ret");
inc(esp);
label("func_vector_qap_vertex::reserve(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::sys_add(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+0]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(ebx,ptr[ebp-2]);
mov(ptr[ecx+0],ebx);
inc(esp);
mov(edx,ptr[ebp+3]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_qap_vertex::sys_add(int)::ret");
inc(esp);
label("func_vector_qap_vertex::sys_add(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::sys_add(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
mov(edx,ptr[ebp+4]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_qap_vertex::sys_add(vec2i)::ret");
inc(esp);
label("func_vector_qap_vertex::sys_add(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::add(int,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
less(eax,ptr[ecx+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(ptr[ecx+1]);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_qap_vertex::add(int,vec2i)::ret");
inc(esp);
label("func_vector_qap_vertex::add(int,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::add(qap_vertex)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
less(eax,ptr[ecx+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(ptr[ecx+1]);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_qap_vertex::add(qap_vertex)::ret");
inc(esp);
label("func_vector_qap_vertex::add(qap_vertex)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::get_vec2i(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp+2]);
add(eax,1);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-3]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-6]);
push(ptr[ebp-2]);
push(ptr[ebp-4]);
call("func_vec2i(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_vector_qap_vertex::get_vec2i(int)::ret");
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::get_vec2i(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::get(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
sub(esp,2);
sub(esp,3);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp+2]);
add(eax,1);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-5]);
push(ptr[ebp-3]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::get_vec2i(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-8]);
push(ptr[ebp-2]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
call("func_qap_vertex(int,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::get(int)::ret");
add(esp,3);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::get(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
sub(esp,3);
mov(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mul(eax,3);
mov(ebx,ptr[ecx+0]);
add(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-5]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::get(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::at(int)::ret");
add(esp,3);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::to_vector_int()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,3);
lea(ecx,ptr[ebp-4]);
call("func_vector_int::`ctor()");
mov(ecx,ptr[ebp-1]);
mov(ebx,ptr[ecx+0]);
mov(ptr[ebp-4],ebx);
push(eax);
mov(eax,ptr[ecx+1]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-3],ebx);
push(eax);
mov(eax,ptr[ecx+2]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-2],ebx);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::to_vector_int()::ret");
add(esp,3);
inc(esp);
label("func_vector_qap_vertex::to_vector_int()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::front()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
more(eax,0);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
sub(esp,3);
pushlea(ptr[ebp-4]);
push(0);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::front()::ret");
add(esp,3);
inc(esp);
label("func_vector_qap_vertex::front()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::back()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
more(eax,0);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
sub(esp,3);
mov(eax,ptr[ecx+1]);
sub(eax,1);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-5]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::back()::ret");
add(esp,3);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::back()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::clone()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,3);
lea(ecx,ptr[ebp-4]);
call("func_vector_qap_vertex::`ctor()");
mov(ecx,ptr[ebp-1]);
dec(esp);
pushlea(ptr[ebp-5]);
push(ptr[ecx+2]);
lea(ecx,ptr[ebp-4]);
call("func_vector_qap_vertex::reserve(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
mov(ptr[ebp-5],0);
jmp("for_8000::condition");
label("for_8000::continue");
inc(ptr[ebp-5]);
label("for_8000::condition");
mov(eax,ptr[ebp-5]);
less(eax,ptr[ecx+1]);
jz("for_8000::break",eax);
sub(esp,3);
dec(esp);
pushlea(ptr[ebp-8]);
push(ptr[ebp-5]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-9]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
lea(ecx,ptr[ebp-4]);
call("func_vector_qap_vertex::add(qap_vertex)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
add(esp,3);
jmp("for_8000::continue");
label("for_8000::break");
inc(esp);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::clone()::ret");
add(esp,3);
inc(esp);
label("func_vector_qap_vertex::clone()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::is_equal(vector_qap_vertex)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
push(ptr[ecx+1]);
call("func_QapAssert(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
dec(esp);
mov(ptr[ebp-2],0);
jmp("for_8001::condition");
label("for_8001::continue");
inc(ptr[ebp-2]);
label("for_8001::condition");
mov(eax,ptr[ebp-2]);
less(eax,ptr[ecx+1]);
jz("for_8001::break",eax);
sub(esp,3);
sub(esp,3);
pushlea(ptr[ebp-8]);
push(ptr[ebp-2]);
lea(ecx,ptr[ebp+2]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,3);
sub(esp,3);
sub(esp,3);
pushlea(ptr[ebp-11]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
add(esp,3);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-5]);
push(ptr[ebp-8]);
call("func_QapAssert(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-4]);
push(ptr[ebp-7]);
call("func_QapAssert(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-3]);
push(ptr[ebp-6]);
call("func_QapAssert(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,3);
add(esp,3);
jmp("for_8001::continue");
label("for_8001::break");
inc(esp);
inc(esp);
label("func_vector_qap_vertex::is_equal(vector_qap_vertex)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::addr_at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mul(eax,3);
mov(ebx,ptr[ecx+0]);
add(ebx,eax);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],ebx);
jmp("func_vector_qap_vertex::addr_at(int)::ret");
inc(esp);
label("func_vector_qap_vertex::addr_at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::add(vector_qap_vertex)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ecx+1]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(0);
lea(ecx,ptr[ebp+2]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+3]);
mul(eax,3);
mov(ptr[ebp-4],eax);
mov(edi,ptr[ebp-2]);
mov(esi,ptr[ebp-3]);
mov(ecx,ptr[ebp-4]);
rep_movsd_inc();
mov(ecx,ptr[ebp-1]);
mov(ebx,ptr[ebp+3]);
add(ptr[ecx+1],ebx);
push(eax);
mov(eax,ptr[ebp+3]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::add(vector_qap_vertex)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ecx+1]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(0);
lea(ecx,ptr[ebp+4]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+2]);
mov(ptr[ebp-4],eax);
dec(esp);
mov(eax,ptr[ebp+3]);
mov(ptr[ebp-5],eax);
dec(esp);
mov(eax,ptr[ebp+5]);
mov(ptr[ebp-6],eax);
mov(edi,ptr[ebp-2]);
mov(esi,ptr[ebp-3]);
mov(eax,ptr[ebp-4]);
mov(ebx,ptr[ebp-5]);
mov(ecx,ptr[ebp-6]);
movsd_inc();
addsd_inc(eax);
addsd_inc(ebx);
loop(1452);
mov(ecx,ptr[ebp-1]);
mov(ebx,ptr[ebp+5]);
add(ptr[ecx+1],ebx);
push(eax);
mov(eax,ptr[ebp+5]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ecx+1]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(0);
lea(ecx,ptr[ebp+5]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+2]);
mov(ptr[ebp-4],eax);
dec(esp);
mov(eax,ptr[ebp+3]);
mov(ptr[ebp-5],eax);
dec(esp);
mov(eax,ptr[ebp+6]);
mov(ptr[ebp-6],eax);
mov(edi,ptr[ebp-2]);
mov(esi,ptr[ebp-3]);
mov(ebx,ptr[ebp-4]);
mov(edx,ptr[ebp-5]);
mov(ecx,ptr[ebp-6]);
inc(esi);
mov(eax,ptr[ebp+4]);
stosd_inc();
addsd_inc(ebx);
addsd_inc(edx);
loop(1516);
mov(ecx,ptr[ebp-1]);
mov(ebx,ptr[ebp+6]);
add(ptr[ecx+1],ebx);
push(eax);
mov(eax,ptr[ebp+6]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
mov(ptr[ecx+2],0);
inc(esp);
label("func_vector_qap_vertex::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::reserve(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,1);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_alloc(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(ebx,ptr[ebp-3]);
mov(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
mov(ptr[ecx+1],0);
mov(ebx,ptr[ebp+2]);
mov(ptr[ecx+2],ebx);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],0);
jmp("func_vector_int::reserve(int)::ret");
inc(esp);
label("func_vector_int::reserve(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::add(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
less(eax,ptr[ecx+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+0]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(ebx,ptr[ebp-2]);
mov(ptr[ecx+0],ebx);
inc(esp);
inc(ptr[ecx+1]);
mov(edx,ptr[ebp+3]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_int::add(int)::ret");
inc(esp);
label("func_vector_int::add(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::get(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_vector_int::get(int)::ret");
inc(esp);
inc(esp);
label("func_vector_int::get(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+0]);
add(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_int::get(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
jmp("func_vector_int::at(int)::ret");
inc(esp);
inc(esp);
inc(esp);
label("func_vector_int::at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::front()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
more(eax,0);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(0);
mov(ecx,ptr[ebp-1]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_vector_int::front()::ret");
inc(esp);
inc(esp);
label("func_vector_int::front()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::back()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
more(eax,0);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
sub(eax,1);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
jmp("func_vector_int::back()::ret");
inc(esp);
inc(esp);
inc(esp);
label("func_vector_int::back()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::addr_at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mul(eax,1);
mov(ebx,ptr[ecx+0]);
add(ebx,eax);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],ebx);
jmp("func_vector_int::addr_at(int)::ret");
inc(esp);
label("func_vector_int::addr_at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::add_mega_fast(vector_int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
mov(eax,ptr[ebp+3]);
sub(eax,ptr[ebp+4]);
mov(ptr[ebp-2],eax);
dec(esp);
mov(eax,ptr[ebp+4]);
mov(ptr[ebp-3],eax);
mov(edx,ptr[ebp+2]);
mov(eax,ptr[ecx+0]);
jmp("for_8002::condition");
label("for_8002::continue");
dec(ptr[ebp-3]);
label("for_8002::condition");
jz("for_8002::break",ptr[ebp-3]);
mov(ebx,ptr[ebp-2]);
mov(ebx,ptr[ebx]);
add(ebx,edx);
mov(ptr[eax],ebx);
inc(eax);
inc(ptr[ebp-2]);
jmp("for_8002::continue");
label("for_8002::break");
mov(ebx,ptr[ebp+4]);
add(ptr[ecx+1],ebx);
mov(ebx,ptr[ebp+4]);
add(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_int::add_mega_fast(vector_int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
mov(ptr[ecx+2],0);
inc(esp);
label("func_vector_int::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::sys_add(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+0]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(ebx,ptr[ebp-2]);
mov(ptr[ecx+0],ebx);
inc(esp);
mov(edx,ptr[ebp+3]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_vec2i::sys_add(int)::ret");
inc(esp);
label("func_vector_vec2i::sys_add(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::add(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_vec2i::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_vector_vec2i::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(ptr[ecx+1]);
mov(edx,ptr[ebp+4]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_vec2i::add(vec2i)::ret");
inc(esp);
label("func_vector_vec2i::add(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::get(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp+2]);
add(eax,1);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-3]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-6]);
push(ptr[ebp-2]);
push(ptr[ebp-4]);
call("func_vec2i(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_vector_vec2i::get(int)::ret");
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_vec2i::get(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::addr_at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mul(eax,2);
mov(ebx,ptr[ecx+0]);
add(ebx,eax);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],ebx);
jmp("func_vector_vec2i::addr_at(int)::ret");
inc(esp);
label("func_vector_vec2i::addr_at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mul(eax,2);
mov(ebx,ptr[ecx+0]);
add(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-4]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_vec2i::get(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_vector_vec2i::at(int)::ret");
add(esp,2);
inc(esp);
inc(esp);
label("func_vector_vec2i::at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::CatmullRom(vector_vec2i,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+4]);
nless(eax,2);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+4]);
mov(ptr[ebp-2],eax);
sub(esp,2);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp-2]);
sub(eax,1);
mov(ptr[ebp-5],eax);
mov(eax,ptr[ebp+2]);
sub(eax,1);
mov(ptr[ebp-6],eax);
pushlea(ptr[ebp-7]);
push(0);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
call("func_clamp(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-9]);
push(ptr[ebp-7]);
lea(ecx,ptr[ebp+3]);
call("func_vector_vec2i::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
sub(esp,2);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp-2]);
sub(eax,1);
mov(ptr[ebp-7],eax);
mov(eax,ptr[ebp+2]);
add(eax,0);
mov(ptr[ebp-8],eax);
pushlea(ptr[ebp-9]);
push(0);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
call("func_clamp(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-11]);
push(ptr[ebp-9]);
lea(ecx,ptr[ebp+3]);
call("func_vector_vec2i::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
sub(esp,2);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp-2]);
sub(eax,1);
mov(ptr[ebp-9],eax);
mov(eax,ptr[ebp+2]);
add(eax,1);
mov(ptr[ebp-10],eax);
pushlea(ptr[ebp-11]);
push(0);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
call("func_clamp(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
lea(ecx,ptr[ebp+3]);
call("func_vector_vec2i::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
sub(esp,2);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp-2]);
sub(eax,1);
mov(ptr[ebp-11],eax);
mov(eax,ptr[ebp+2]);
add(eax,2);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-13]);
push(0);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
call("func_clamp(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-15]);
push(ptr[ebp-13]);
lea(ecx,ptr[ebp+3]);
call("func_vector_vec2i::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
pop(ptr[ebp-10]);
pop(ptr[ebp-9]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-13]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
call("func_sub(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
pushlea(ptr[ebp-14]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
call("func_hypot(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(eax,ptr[ebp-14]);
div(eax,32);
mov(ptr[ebp-11],eax);
inc(esp);
add(esp,2);
dec(esp);
mov(eax,ptr[ebp-11]);
mov(ptr[ebp-12],eax);
dec(esp);
mov(ptr[ebp-13],0);
jmp("for_8003::condition");
label("for_8003::continue");
inc(ptr[ebp-13]);
label("for_8003::condition");
mov(eax,ptr[ebp-13]);
less(eax,ptr[ebp-11]);
jz("for_8003::break",eax);
dec(esp);
mov(eax,ptr[ebp-13]);
mul(eax,ptr[ebp-12]);
div(eax,ptr[ebp-11]);
mov(ptr[ebp-14],eax);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-16]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-14]);
push(ptr[ebp-12]);
call("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,11);
pushlea(ptr[ebp-17]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
mov(ecx,ptr[ebp-1]);
call("func_vector_vec2i::add(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
inc(esp);
jmp("for_8003::continue");
label("for_8003::break");
inc(esp);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-14]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-12]);
push(ptr[ebp-12]);
call("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,11);
pushlea(ptr[ebp-15]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
mov(ecx,ptr[ebp-1]);
call("func_vector_vec2i::add(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_vec2i::CatmullRom(vector_vec2i,int)::ret");
inc(esp);
inc(esp);
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,2);
inc(esp);
inc(esp);
label("func_vector_vec2i::CatmullRom(vector_vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
inc(esp);
label("func_vector_vec2i::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::AddTris(int,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
mov(edx,ptr[ebp+5]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::AddTris(int,int,int)::ret");
inc(esp);
label("func_t_out_dev::AddTris(int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::AddVertex(qap_vertex)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(qap_vertex)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(edx,ptr[ebp+5]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::AddVertex(qap_vertex)::ret");
inc(esp);
label("func_t_out_dev::AddVertex(qap_vertex)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::AddVertex(int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_vec2i(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
pushlea(ptr[ebp-4]);
push(ptr[ecx+6]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(int,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
add(esp,2);
mov(edx,ptr[ebp+4]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::AddVertex(int,int)::ret");
inc(esp);
label("func_t_out_dev::AddVertex(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::AddVertex(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+6]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(int,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(edx,ptr[ebp+4]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::AddVertex(vec2i)::ret");
inc(esp);
label("func_t_out_dev::AddVertex(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::AddVertexAndRetVID(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+6]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(int,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(eax,ptr[ecx+1]);
sub(eax,1);
mov(edx,ptr[ebp+4]);
mov(ptr[edx+0],eax);
jmp("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret");
inc(esp);
label("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::add(t_out_dev)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+6]);
mod(eax,3);
mov(ebx,0);
eq(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+7]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ecx+1]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add_mega_fast(vector_int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(vector_qap_vertex)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(edx,ptr[ebp+9]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::add(t_out_dev)::ret");
inc(esp);
label("func_t_out_dev::add(t_out_dev)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::add_wo(t_out_dev,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+8]);
mod(eax,3);
mov(ebx,0);
eq(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
mov(ptr[ebp-2],eax);
dec(esp);
mov(ptr[ebp-3],0);
jmp("for_8004::condition");
label("for_8004::continue");
inc(ptr[ebp-3]);
label("for_8004::condition");
mov(eax,ptr[ebp-3]);
less(eax,ptr[ebp+5]);
jz("for_8004::break",eax);
sub(esp,3);
sub(esp,3);
pushlea(ptr[ebp-9]);
push(ptr[ebp-3]);
lea(ecx,ptr[ebp+4]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
add(esp,3);
sub(esp,2);
pushlea(ptr[ebp-8]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-7]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(qap_vertex)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
add(esp,3);
jmp("for_8004::continue");
label("for_8004::break");
inc(esp);
dec(esp);
mov(ptr[ebp-3],0);
jmp("for_8005::condition");
label("for_8005::continue");
inc(ptr[ebp-3]);
label("for_8005::condition");
mov(eax,ptr[ebp-3]);
less(eax,ptr[ebp+8]);
jz("for_8005::break",eax);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(ptr[ebp-3]);
lea(ecx,ptr[ebp+7]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-2]);
add(eax,ptr[ebp-4]);
mov(ptr[ebp-5],eax);
pushlea(ptr[ebp-6]);
push(ptr[ebp-5]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
jmp("for_8005::continue");
label("for_8005::break");
inc(esp);
mov(edx,ptr[ebp+11]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::add_wo(t_out_dev,vec2i)::ret");
inc(esp);
inc(esp);
label("func_t_out_dev::add_wo(t_out_dev,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,1024);
mul(eax,16);
mul(eax,4);
mov(ebx,ptr[ecx+1]);
less(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+8]);
mod(eax,3);
mov(ebx,0);
eq(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
push(ptr[ebp+7]);
push(ptr[ecx+1]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add_mega_fast(vector_int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,6);
inc(esp);
mov(edx,ptr[ebp+11]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret");
inc(esp);
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::add_with_color(t_out_dev,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,1024);
mul(eax,16);
mul(eax,4);
mov(ebx,ptr[ecx+1]);
less(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+8]);
mod(eax,3);
mov(ebx,0);
eq(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
push(ptr[ebp+7]);
push(ptr[ecx+1]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add_mega_fast(vector_int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ebp+4]);
push(ptr[ecx+6]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,7);
inc(esp);
mov(edx,ptr[ebp+11]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::add_with_color(t_out_dev,vec2i)::ret");
inc(esp);
label("func_t_out_dev::add_with_color(t_out_dev,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::add_wc(t_out_dev,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+8]);
mod(eax,3);
mov(ebx,0);
eq(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
mov(ptr[ebp-2],eax);
dec(esp);
mov(ptr[ebp-3],0);
jmp("for_8006::condition");
label("for_8006::continue");
inc(ptr[ebp-3]);
label("for_8006::condition");
mov(eax,ptr[ebp-3]);
less(eax,ptr[ebp+5]);
jz("for_8006::break",eax);
sub(esp,3);
sub(esp,3);
pushlea(ptr[ebp-9]);
push(ptr[ebp-3]);
lea(ecx,ptr[ebp+4]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
add(esp,3);
mov(ebx,ptr[ecx+6]);
mov(ptr[ebp-6],ebx);
sub(esp,2);
pushlea(ptr[ebp-8]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-7]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(qap_vertex)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
add(esp,3);
jmp("for_8006::continue");
label("for_8006::break");
inc(esp);
dec(esp);
mov(ptr[ebp-3],0);
jmp("for_8007::condition");
label("for_8007::continue");
inc(ptr[ebp-3]);
label("for_8007::condition");
mov(eax,ptr[ebp-3]);
less(eax,ptr[ebp+8]);
jz("for_8007::break",eax);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(ptr[ebp-3]);
lea(ecx,ptr[ebp+7]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-2]);
add(eax,ptr[ebp-4]);
mov(ptr[ebp-5],eax);
pushlea(ptr[ebp-6]);
push(ptr[ebp-5]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
jmp("for_8007::continue");
label("for_8007::break");
inc(esp);
mov(edx,ptr[ebp+11]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::add_wc(t_out_dev,vec2i)::ret");
inc(esp);
inc(esp);
label("func_t_out_dev::add_wc(t_out_dev,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::GenGeomQuad(int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,7);
pushlea(ptr[ebp-8]);
push(0);
push(0);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_t_out_dev::GenGeomQuad(int,int)::ret");
add(esp,7);
inc(esp);
label("func_t_out_dev::GenGeomQuad(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::GenGeomQuad(vec2i,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,7);
pushlea(ptr[ebp-8]);
push(ptr[ebp+4]);
push(ptr[ebp+5]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
mov(edx,ptr[ebp+6]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_t_out_dev::GenGeomQuad(vec2i,int,int)::ret");
add(esp,7);
inc(esp);
label("func_t_out_dev::GenGeomQuad(vec2i,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::GenGeomQuad(int,int,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,7);
sub(esp,7);
pushlea(ptr[ebp-15]);
push(1);
call("func_new_geom(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
pop(ptr[ebp-2]);
add(esp,7);
mov(ebx,ptr[ecx+6]);
mov(ptr[ebp-2],ebx);
dec(esp);
mov(eax,ptr[ebp+3]);
div(eax,2);
mov(ptr[ebp-9],eax);
dec(esp);
mov(eax,ptr[ebp+2]);
div(eax,2);
mov(ptr[ebp-10],eax);
dec(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+5]);
sub(eax,ptr[ebp-9]);
mov(ptr[ebp-11],eax);
mov(eax,ptr[ebp+4]);
sub(eax,ptr[ebp-10]);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+5]);
add(eax,ptr[ebp-9]);
mov(ptr[ebp-11],eax);
mov(eax,ptr[ebp+4]);
sub(eax,ptr[ebp-10]);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+5]);
add(eax,ptr[ebp-9]);
mov(ptr[ebp-11],eax);
mov(eax,ptr[ebp+4]);
add(eax,ptr[ebp-10]);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+5]);
sub(eax,ptr[ebp-9]);
mov(ptr[ebp-11],eax);
mov(eax,ptr[ebp+4]);
add(eax,ptr[ebp-10]);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-11]);
push(1);
push(0);
push(3);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddTris(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
dec(esp);
pushlea(ptr[ebp-11]);
push(3);
push(2);
push(1);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddTris(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(edx,ptr[ebp+6]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret");
inc(esp);
inc(esp);
add(esp,7);
inc(esp);
label("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,7);
sub(esp,7);
pushlea(ptr[ebp-15]);
push(1);
call("func_new_geom(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
pop(ptr[ebp-2]);
add(esp,7);
mov(ebx,ptr[ecx+6]);
mov(ptr[ebp-2],ebx);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-12]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
call("func_sub(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
pop(ptr[ebp-10]);
pop(ptr[ebp-9]);
add(esp,2);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-14]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
call("func_ort(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
pushlea(ptr[ebp-16]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp+2]);
call("func_set_mag(vec2i,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
pop(ptr[ebp-12]);
pop(ptr[ebp-11]);
add(esp,2);
add(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-16]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
pop(ptr[ebp-14]);
pop(ptr[ebp-13]);
add(esp,2);
sub(esp,2);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-16]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(1);
call("func_mul(vec2i,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-18]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
pushlea(ptr[ebp-19]);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
add(esp,2);
dec(esp);
sub(esp,2);
sub(esp,2);
dec(esp);
inv(eax,1);
mov(ptr[ebp-15],eax);
pushlea(ptr[ebp-17]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-15]);
call("func_mul(vec2i,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-19]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
pushlea(ptr[ebp-20]);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
add(esp,2);
inc(esp);
dec(esp);
sub(esp,2);
sub(esp,2);
dec(esp);
inv(eax,1);
mov(ptr[ebp-15],eax);
pushlea(ptr[ebp-17]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-15]);
call("func_mul(vec2i,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-19]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
pushlea(ptr[ebp-20]);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
add(esp,2);
inc(esp);
sub(esp,2);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-16]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(1);
call("func_mul(vec2i,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-18]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
pushlea(ptr[ebp-19]);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-15]);
push(1);
push(0);
push(3);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddTris(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
dec(esp);
pushlea(ptr[ebp-15]);
push(3);
push(2);
push(1);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddTris(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(edx,ptr[ebp+7]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)::ret");
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,7);
inc(esp);
label("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::`ctor()");
mov(ecx,ptr[ebp-1]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::`ctor()");
mov(ecx,ptr[ebp-1]);
mov(ptr[ecx+6],0);
inc(esp);
label("func_t_out_dev::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_ort(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
sub(esp,2);
inv(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp+3]);
push(ptr[ebp-1]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_ort(vec2i)::ret");
add(esp,2);
inc(esp);
label("func_ort(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_set_mag(vec2i,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
dec(esp);
sub(esp,2);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-3]);
lea(ecx,ptr[ebp+3]);
call("func_vec2i::mag()");
add(esp,1);
pushlea(ptr[ebp-5]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
call("func_div(vec2i,int)");
add(esp,4);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_set_mag(vec2i,int)::ret");
add(esp,2);
inc(esp);
add(esp,2);
label("func_set_mag(vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_new_geom(int)");
push(ebp);
mov(ebp,esp);
sub(esp,7);
lea(ecx,ptr[ebp-7]);
call("func_t_out_dev::`ctor()");
push(eax);
mov(eax,255);
shl(eax,24);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-1],ebx);
dec(esp);
dec(esp);
mov(eax,4);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-8],eax);
pushlea(ptr[ebp-9]);
push(ptr[ebp-8]);
lea(ecx,ptr[ebp-7]);
call("func_vector_qap_vertex::reserve(int)");
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,6);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-8],eax);
pushlea(ptr[ebp-9]);
push(ptr[ebp-8]);
lea(ecx,ptr[ebp-4]);
call("func_vector_int::reserve(int)");
add(esp,2);
inc(esp);
inc(esp);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_new_geom(int)::ret");
add(esp,7);
label("func_new_geom(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_input::kb_on_down(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+6]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-2]);
and(eax,ptr[ebp-3]);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],eax);
jmp("func_t_input::kb_on_down(int)::ret");
inc(esp);
inc(esp);
inc(esp);
label("func_t_input::kb_on_down(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_input::kb_on_up(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
not(eax,ptr[ebp-2]);
push(eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+6]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pop(eax);
and(eax,ptr[ebp-3]);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],eax);
jmp("func_t_input::kb_on_up(int)::ret");
inc(esp);
inc(esp);
inc(esp);
label("func_t_input::kb_on_up(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_input::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
lea(ecx,ptr[ecx+0]);
call("func_vec2i::`ctor()");
mov(ecx,ptr[ebp-1]);
mov(ptr[ecx+2],0);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::`ctor()");
mov(ecx,ptr[ebp-1]);
lea(ecx,ptr[ecx+6]);
call("func_vector_int::`ctor()");
mov(ecx,ptr[ebp-1]);
inc(esp);
label("func_t_input::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_int()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ecx+0]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
inc(ptr[ecx+0]);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_t_dev::read_int()::ret");
inc(esp);
inc(esp);
label("func_t_dev::read_int()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_vec2i()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
sub(esp,2);
pushlea(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
pushlea(ptr[ebp-3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
pushlea(ptr[ebp-5]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
call("func_vec2i(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_t_dev::read_vec2i()::ret");
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
label("func_t_dev::read_vec2i()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_vector_int()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,3);
lea(ecx,ptr[ebp-4]);
call("func_vector_int::`ctor()");
mov(ecx,ptr[ebp-1]);
dec(esp);
pushlea(ptr[ebp-5]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
mov(ebx,ptr[ebp-5]);
mov(ptr[ebp-3],ebx);
inc(esp);
mov(ebx,ptr[ebp-3]);
add(ptr[ecx+0],ebx);
mov(ebx,ptr[ecx+0]);
mov(ptr[ebp-4],ebx);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_t_dev::read_vector_int()::ret");
add(esp,3);
inc(esp);
label("func_t_dev::read_vector_int()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_IA()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,3);
pushlea(ptr[ebp-4]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_vector_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_t_dev::read_IA()::ret");
add(esp,3);
inc(esp);
label("func_t_dev::read_IA()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_VA()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,3);
lea(ecx,ptr[ebp-4]);
call("func_vector_qap_vertex::`ctor()");
mov(ecx,ptr[ebp-1]);
dec(esp);
pushlea(ptr[ebp-5]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
mov(ebx,ptr[ebp-5]);
mov(ptr[ebp-3],ebx);
inc(esp);
push(eax);
mov(eax,ptr[ebp-3]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
mov(ebx,ptr[ecx+0]);
mov(ptr[ebp-4],ebx);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_t_dev::read_VA()::ret");
add(esp,3);
inc(esp);
label("func_t_dev::read_VA()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_geom()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,7);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::`ctor()");
mov(ecx,ptr[ebp-1]);
sub(esp,3);
pushlea(ptr[ebp-11]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_VA()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
add(esp,3);
sub(esp,3);
pushlea(ptr[ebp-11]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_IA()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,3);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_t_dev::read_geom()::ret");
add(esp,7);
inc(esp);
label("func_t_dev::read_geom()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_vector_vec2i()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,2);
lea(ecx,ptr[ebp-3]);
call("func_vector_vec2i::`ctor()");
mov(ecx,ptr[ebp-1]);
dec(esp);
pushlea(ptr[ebp-4]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
mov(ebx,ptr[ebp-4]);
mov(ptr[ebp-2],ebx);
inc(esp);
push(eax);
mov(eax,ptr[ebp-2]);
mul(eax,2);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
mov(ebx,ptr[ecx+0]);
mov(ptr[ebp-3],ebx);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_t_dev::read_vector_vec2i()::ret");
add(esp,2);
inc(esp);
label("func_t_dev::read_vector_vec2i()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+0]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(ebx,ptr[ebp-2]);
mov(ptr[ecx+0],ebx);
inc(esp);
mov(edx,ptr[ebp+3]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_t_dev::write(int)::ret");
inc(esp);
label("func_t_dev::write(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(int,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_t_dev::write(int,int,int)::ret");
inc(esp);
label("func_t_dev::write(int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
mov(edx,ptr[ebp+4]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_t_dev::write(vec2i)::ret");
inc(esp);
label("func_t_dev::write(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(int,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_t_dev::write(int,vec2i)::ret");
inc(esp);
label("func_t_dev::write(int,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(qap_vertex)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_t_dev::write(qap_vertex)::ret");
inc(esp);
label("func_t_dev::write(qap_vertex)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(vector_vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+3]);
mul(eax,2);
mov(ptr[ebp-2],eax);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(0);
lea(ecx,ptr[ebp+2]);
call("func_vector_vec2i::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
mov(esi,ptr[ebp-3]);
mov(edi,ptr[ecx+0]);
push(ecx);
mov(ecx,ptr[ebp-2]);
rep_movsd_inc();
pop(ecx);
mov(ebx,ptr[ebp-2]);
add(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
inc(esp);
label("func_t_dev::write(vector_vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(t_out_dev)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+3]);
mul(eax,3);
mov(ptr[ebp-2],eax);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(0);
lea(ecx,ptr[ebp+2]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
mov(esi,ptr[ebp-3]);
mov(edi,ptr[ecx+0]);
push(ecx);
mov(ecx,ptr[ebp-2]);
rep_movsd_inc();
pop(ecx);
push(eax);
mov(eax,ptr[ebp+3]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+6]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(0);
lea(ecx,ptr[ebp+5]);
call("func_vector_int::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+6]);
mov(ptr[ebp-3],eax);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
mod(eax,3);
mov(ptr[ebp-4],eax);
pushlea(ptr[ebp-5]);
push(0);
push(ptr[ebp-4]);
call("func_QapAssert(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
mov(esi,ptr[ebp-2]);
mov(edi,ptr[ecx+0]);
push(ecx);
mov(ecx,ptr[ebp-3]);
rep_movsd_inc();
pop(ecx);
mov(ebx,ptr[ebp+6]);
add(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
inc(esp);
label("func_t_dev::write(t_out_dev)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
inc(esp);
label("func_t_dev::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_mem::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
inc(esp);
label("func_t_mem::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_g_obj_addr()");
push(ebp);
mov(ebp,esp);
mov(eax,64);
add(eax,7);
mov(ebx,1024);
mul(ebx,eax);
add(ebx,512);
mov(edx,ptr[ebp+2]);
mov(ptr[edx+0],ebx);
jmp("func_g_obj_addr()::ret");
label("func_g_obj_addr()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_get_obj_pos(t_input,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
dec(esp);
sub(esp,2);
sub(esp,2);
inv(eax,0);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-5]);
push(ptr[ebp-3]);
push(0);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-7]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
add(esp,2);
add(esp,2);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
call("func_g_obj_addr()");
add(esp,1);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,2);
mov(ptr[ebp-4],eax);
pushlea(ptr[ebp-5]);
push(ptr[ebp-4]);
call("func_get_int(int)");
add(esp,2);
jz("if_1007::else",ptr[ebp-5]);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,0);
mov(ptr[ebp-6],eax);
pushlea(ptr[ebp-7]);
push(ptr[ebp-6]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-7]);
mov(ptr[ebp-2],ebx);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,1);
mov(ptr[ebp-6],eax);
pushlea(ptr[ebp-7]);
push(ptr[ebp-6]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-7]);
mov(ptr[ebp-1],ebx);
inc(esp);
inc(esp);
jmp("if_1007::end");
label("if_1007::else");
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,2);
mov(ptr[ebp-6],eax);
pushlea(ptr[ebp-7]);
push(ptr[ebp-6]);
push(1);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
label("if_1007::end");
inc(esp);
inc(esp);
dec(esp);
mov(ptr[ebp-4],0);
dec(esp);
mov(ptr[ebp-5],0);
dec(esp);
mov(ptr[ebp-6],0);
dec(esp);
mov(ptr[ebp-7],0);
mov(ptr[ebp-4],37);
mov(ptr[ebp-5],39);
mov(ptr[ebp-6],38);
mov(ptr[ebp-7],40);
dec(esp);
mov(eax,2);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-8],eax);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-4]);
lea(ecx,ptr[ebp+6]);
call("func_vector_int::at(int)");
add(esp,2);
jz("if_1008::end",ptr[ebp-9]);
mov(ebx,ptr[ebp-8]);
sub(ptr[ebp-2],ebx);
jmp("if_1008::end");
label("if_1008::end");
inc(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-5]);
lea(ecx,ptr[ebp+6]);
call("func_vector_int::at(int)");
add(esp,2);
jz("if_1009::end",ptr[ebp-9]);
mov(ebx,ptr[ebp-8]);
add(ptr[ebp-2],ebx);
jmp("if_1009::end");
label("if_1009::end");
inc(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-6]);
lea(ecx,ptr[ebp+6]);
call("func_vector_int::at(int)");
add(esp,2);
jz("if_1010::end",ptr[ebp-9]);
mov(ebx,ptr[ebp-8]);
add(ptr[ebp-1],ebx);
jmp("if_1010::end");
label("if_1010::end");
inc(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-7]);
lea(ecx,ptr[ebp+6]);
call("func_vector_int::at(int)");
add(esp,2);
jz("if_1011::end",ptr[ebp-9]);
mov(ebx,ptr[ebp-8]);
sub(ptr[ebp-1],ebx);
jmp("if_1011::end");
label("if_1011::end");
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,0);
mov(ptr[ebp-9],eax);
pushlea(ptr[ebp-10]);
push(ptr[ebp-9]);
push(ptr[ebp-2]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,1);
mov(ptr[ebp-9],eax);
pushlea(ptr[ebp-10]);
push(ptr[ebp-9]);
push(ptr[ebp-1]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(edx,ptr[ebp+12]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_get_obj_pos(t_input,int)::ret");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
add(esp,2);
label("func_get_obj_pos(t_input,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_set_vec2i(int,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
pushlea(ptr[ebp-1]);
push(ptr[ebp+4]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+4]);
add(eax,1);
mov(ptr[ebp-1],eax);
pushlea(ptr[ebp-2]);
push(ptr[ebp-1]);
push(ptr[ebp+3]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(edx,ptr[ebp+5]);
mov(ptr[edx+0],0);
jmp("func_set_vec2i(int,vec2i)::ret");
label("func_set_vec2i(int,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_get_points(int,int,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-4]);
push(450);
push(50);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-6]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
add(esp,2);
add(esp,2);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-6]);
push(650);
push(150);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-8]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,2);
add(esp,2);
mov(ebx,ptr[ebp+4]);
mov(ptr[ebp-4],ebx);
mov(ebx,ptr[ebp+3]);
mov(ptr[ebp-3],ebx);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-8]);
push(300);
push(500);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-10]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
add(esp,2);
add(esp,2);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-10]);
push(390);
push(550);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-12]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
add(esp,2);
add(esp,2);
sub(esp,2);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::`ctor()");
dec(esp);
pushlea(ptr[ebp-11]);
push(1024);
call("func_alloc(int)");
add(esp,2);
mov(ebx,ptr[ebp-11]);
mov(ptr[ebp-10],ebx);
inc(esp);
mov(ptr[ebp-9],0);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-12]);
push(0);
push(0);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-11]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
dec(esp);
pushlea(ptr[ebp-11]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
dec(esp);
pushlea(ptr[ebp-11]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
dec(esp);
pushlea(ptr[ebp-11]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
sub(esp,2);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-12]);
push(450);
push(550);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-14]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-15]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
add(esp,2);
add(esp,2);
sub(esp,2);
lea(ecx,ptr[ebp-12]);
call("func_vec2i::`ctor()");
dec(esp);
mov(ptr[ebp-13],0);
jmp("for_8008::condition");
label("for_8008::continue");
inc(ptr[ebp-13]);
label("for_8008::condition");
mov(eax,ptr[ebp-13]);
less(eax,ptr[ebp-9]);
jz("for_8008::break",eax);
mov(eax,ptr[ebp-13]);
neq(eax,2);
jz("if_1012::end",eax);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-15]);
push(ptr[ebp-13]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::at(int)");
add(esp,2);
pushlea(ptr[ebp-17]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
call("func_add(vec2i,vec2i)");
add(esp,5);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
pop(ptr[ebp-12]);
pop(ptr[ebp-11]);
add(esp,2);
add(esp,2);
jmp("if_1012::end");
label("if_1012::end");
jmp("for_8008::continue");
label("for_8008::break");
inc(esp);
sub(esp,2);
pushlea(ptr[ebp-14]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-9]);
call("func_div(vec2i,int)");
add(esp,4);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
pop(ptr[ebp-12]);
pop(ptr[ebp-11]);
add(esp,2);
dec(esp);
mov(ptr[ebp-13],0);
jmp("for_8009::condition");
label("for_8009::continue");
inc(ptr[ebp-13]);
label("for_8009::condition");
mov(eax,ptr[ebp-13]);
less(eax,ptr[ebp-9]);
jz("for_8009::break",eax);
mov(eax,ptr[ebp-13]);
neq(eax,2);
jz("if_1013::end",eax);
dec(esp);
sub(esp,2);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-14]);
push(ptr[ebp-13]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::addr_at(int)");
add(esp,2);
pushlea(ptr[ebp-16]);
push(ptr[ebp-13]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::at(int)");
add(esp,2);
pushlea(ptr[ebp-18]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-19]);
push(ptr[ebp-14]);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
call("func_set_vec2i(int,vec2i)");
add(esp,4);
inc(esp);
add(esp,2);
add(esp,2);
inc(esp);
jmp("if_1013::end");
label("if_1013::end");
jmp("for_8009::continue");
label("for_8009::break");
inc(esp);
add(esp,2);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_get_points(int,int,int)::ret");
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,2);
label("func_get_points(int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_GenGeomCatmullRom(vector_vec2i,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
lea(ecx,ptr[ebp-2]);
call("func_vector_vec2i::`ctor()");
dec(esp);
dec(esp);
mov(eax,1024);
mul(eax,16);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-3]);
call("func_alloc(int)");
add(esp,2);
mov(ebx,ptr[ebp-4]);
mov(ptr[ebp-2],ebx);
inc(esp);
inc(esp);
mov(ptr[ebp-1],0);
dec(esp);
mov(ptr[ebp-3],0);
jmp("for_8010::condition");
label("for_8010::continue");
inc(ptr[ebp-3]);
label("for_8010::condition");
mov(eax,ptr[ebp-3]);
add(eax,1);
less(eax,ptr[ebp+4]);
jz("for_8010::break",eax);
dec(esp);
pushlea(ptr[ebp-4]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp-3]);
lea(ecx,ptr[ebp-2]);
call("func_vector_vec2i::CatmullRom(vector_vec2i,int)");
add(esp,4);
inc(esp);
jmp("for_8010::continue");
label("for_8010::break");
inc(esp);
sub(esp,7);
dec(esp);
sub(esp,7);
mov(eax,1024);
mul(eax,4);
mov(ptr[ebp-10],eax);
pushlea(ptr[ebp-17]);
push(ptr[ebp-10]);
call("func_new_geom(int)");
add(esp,2);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
pop(ptr[ebp-9]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,7);
inc(esp);
dec(esp);
mov(eax,ptr[ebp-1]);
mov(ptr[ebp-10],eax);
dec(esp);
mov(ptr[ebp-11],1);
jmp("for_8011::condition");
label("for_8011::continue");
inc(ptr[ebp-11]);
label("for_8011::condition");
mov(eax,ptr[ebp-11]);
less(eax,ptr[ebp-10]);
jz("for_8011::break",eax);
dec(esp);
sub(esp,2);
dec(esp);
sub(esp,2);
dec(esp);
sub(esp,7);
dec(esp);
mov(eax,ptr[ebp-11]);
sub(eax,1);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-14]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-2]);
call("func_vector_vec2i::at(int)");
add(esp,2);
mov(eax,ptr[ebp-11]);
sub(eax,0);
mov(ptr[ebp-15],eax);
pushlea(ptr[ebp-17]);
push(ptr[ebp-15]);
lea(ecx,ptr[ebp-2]);
call("func_vector_vec2i::at(int)");
add(esp,2);
mov(eax,ptr[ebp+2]);
mul(eax,2);
mov(ptr[ebp-18],eax);
pushlea(ptr[ebp-25]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
lea(ecx,ptr[ebp-9]);
call("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)");
add(esp,6);
pushlea(ptr[ebp-26]);
push(ptr[ebp-19]);
push(ptr[ebp-20]);
push(ptr[ebp-21]);
push(ptr[ebp-22]);
push(ptr[ebp-23]);
push(ptr[ebp-24]);
push(ptr[ebp-25]);
lea(ecx,ptr[ebp-9]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
add(esp,7);
inc(esp);
add(esp,2);
inc(esp);
add(esp,2);
inc(esp);
jmp("for_8011::continue");
label("for_8011::break");
inc(esp);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_GenGeomCatmullRom(vector_vec2i,int)::ret");
inc(esp);
add(esp,7);
add(esp,2);
label("func_GenGeomCatmullRom(vector_vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_limit255(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-1]);
push(255);
push(ptr[ebp+2]);
call("func_min(int,int)");
add(esp,3);
pushlea(ptr[ebp-2]);
push(0);
push(ptr[ebp-1]);
call("func_max(int,int)");
add(esp,3);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_limit255(int)::ret");
inc(esp);
inc(esp);
label("func_limit255(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_sqrmag(int,int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+3]);
mul(eax,ptr[ebp+3]);
push(eax);
mov(eax,ptr[ebp+2]);
mul(eax,ptr[ebp+2]);
pop(ebx);
add(ebx,eax);
mov(edx,ptr[ebp+4]);
mov(ptr[edx+0],ebx);
jmp("func_sqrmag(int,int)::ret");
label("func_sqrmag(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_sqr(int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+2]);
mul(eax,ptr[ebp+2]);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],eax);
jmp("func_sqr(int)::ret");
label("func_sqr(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_gen_grid(vec2i,int)");
push(ebp);
mov(ebp,esp);
sub(esp,7);
dec(esp);
sub(esp,7);
mov(eax,64);
mul(eax,4);
mul(eax,16);
mul(eax,2);
mov(ptr[ebp-8],eax);
pushlea(ptr[ebp-15]);
push(ptr[ebp-8]);
call("func_new_geom(int)");
add(esp,2);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
add(esp,7);
inc(esp);
dec(esp);
mov(eax,1);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-8],eax);
dec(esp);
mov(ptr[ebp-9],16);
dec(esp);
mov(eax,ptr[ebp-9]);
div(eax,2);
mov(ptr[ebp-10],eax);
dec(esp);
mov(ptr[ebp-11],0);
jmp("for_8012::condition");
label("for_8012::continue");
inc(ptr[ebp-11]);
label("for_8012::condition");
mov(eax,ptr[ebp-11]);
less(eax,ptr[ebp-9]);
jz("for_8012::break",eax);
dec(esp);
mov(ptr[ebp-12],0);
jmp("for_8013::condition");
label("for_8013::continue");
inc(ptr[ebp-12]);
label("for_8013::condition");
mov(eax,ptr[ebp-12]);
less(eax,ptr[ebp-9]);
jz("for_8013::break",eax);
dec(esp);
mov(eax,ptr[ebp-12]);
mul(eax,255);
div(eax,ptr[ebp-9]);
shl(eax,16);
push(eax);
mov(eax,ptr[ebp-11]);
mul(eax,255);
div(eax,ptr[ebp-9]);
shl(eax,8);
pop(ebx);
add(ebx,eax);
mov(ptr[ebp-13],ebx);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-11]);
sub(eax,ptr[ebp-10]);
mov(ptr[ebp-15],eax);
mov(eax,ptr[ebp-12]);
sub(eax,ptr[ebp-10]);
mov(ptr[ebp-16],eax);
pushlea(ptr[ebp-17]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
call("func_sqrmag(int,int)");
add(esp,3);
pushlea(ptr[ebp-18]);
push(ptr[ebp-17]);
call("func_sqr(int)");
add(esp,2);
mov(eax,ptr[ebp-18]);
mul(eax,255);
push(eax);
mov(eax,ptr[ebp-10]);
mul(eax,ptr[ebp-10]);
mov(ptr[ebp-19],eax);
pushlea(ptr[ebp-20]);
push(ptr[ebp-19]);
call("func_sqr(int)");
add(esp,2);
pop(eax);
div(eax,ptr[ebp-20]);
mov(ebx,255);
sub(ebx,eax);
mov(ptr[ebp-21],ebx);
pushlea(ptr[ebp-22]);
push(ptr[ebp-21]);
call("func_limit255(int)");
add(esp,2);
mov(eax,ptr[ebp-22]);
mov(ptr[ebp-14],eax);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
mov(eax,0);
shl(eax,16);
push(eax);
mov(eax,ptr[ebp-14]);
shl(eax,8);
pop(ebx);
add(ebx,eax);
add(ebx,0);
mov(ptr[ebp-13],ebx);
push(eax);
mov(eax,ptr[ebp-14]);
shl(eax,24);
add(eax,ptr[ebp-13]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-1],ebx);
sub(esp,7);
dec(esp);
dec(esp);
sub(esp,2);
sub(esp,2);
sub(esp,2);
sub(esp,2);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-21]);
push(ptr[ebp-8]);
push(ptr[ebp-8]);
lea(ecx,ptr[ebp-7]);
call("func_t_out_dev::GenGeomQuad(int,int)");
add(esp,3);
mov(eax,ptr[ebp-10]);
mul(eax,ptr[ebp-8]);
mov(ptr[ebp-22],eax);
mov(eax,ptr[ebp-10]);
mul(eax,ptr[ebp-8]);
mov(ptr[ebp-23],eax);
pushlea(ptr[ebp-25]);
push(ptr[ebp-22]);
push(ptr[ebp-23]);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-27]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp-24]);
push(ptr[ebp-25]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-29]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-31]);
push(ptr[ebp-28]);
push(ptr[ebp-29]);
push(ptr[ebp-8]);
call("func_mul(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-33]);
push(ptr[ebp-26]);
push(ptr[ebp-27]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
call("func_add(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-34]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
push(ptr[ebp-20]);
push(ptr[ebp-21]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
lea(ecx,ptr[ebp-7]);
call("func_t_out_dev::add_wo(t_out_dev,vec2i)");
add(esp,10);
inc(esp);
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,2);
inc(esp);
inc(esp);
add(esp,7);
inc(esp);
inc(esp);
jmp("for_8013::continue");
label("for_8013::break");
inc(esp);
jmp("for_8012::continue");
label("for_8012::break");
inc(esp);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_gen_grid(vec2i,int)::ret");
inc(esp);
inc(esp);
inc(esp);
add(esp,7);
label("func_gen_grid(vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_get_grid(vec2i,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::`ctor()");
dec(esp);
dec(esp);
pushlea(ptr[ebp-2]);
call("func_g_mem_addr()");
add(esp,1);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-3]);
mov(ptr[ebp-1],ebx);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
add(esp,1);
not(eax,ptr[ebp-2]);
jz("if_1014::end",eax);
dec(esp);
mov(eax,ptr[ebp-1]);
mov(ptr[ebp-3],eax);
sub(esp,7);
dec(esp);
pushlea(ptr[ebp-10]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_gen_grid(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-11]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::write(t_out_dev)");
add(esp,8);
inc(esp);
add(esp,7);
dec(esp);
mov(eax,ptr[ebp-1]);
sub(eax,ptr[ebp-3]);
mov(ptr[ebp-4],eax);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
sub(eax,1);
mov(ptr[ebp-5],eax);
pushlea(ptr[ebp-6]);
push(ptr[ebp-5]);
push(ptr[ebp-4]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(ebx,ptr[ebp-3]);
mov(ptr[ebp-1],ebx);
inc(esp);
inc(esp);
jmp("if_1014::end");
label("if_1014::end");
inc(esp);
sub(esp,7);
pushlea(ptr[ebp-8]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::read_geom()");
add(esp,1);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_get_grid(vec2i,int)::ret");
add(esp,7);
inc(esp);
label("func_get_grid(vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_get_arr(vec2i,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::`ctor()");
dec(esp);
dec(esp);
pushlea(ptr[ebp-2]);
call("func_g_arr_addr()");
add(esp,1);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-3]);
mov(ptr[ebp-1],ebx);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
add(esp,1);
not(eax,ptr[ebp-2]);
jz("if_1015::end",eax);
dec(esp);
mov(eax,ptr[ebp-1]);
mov(ptr[ebp-3],eax);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-5]);
push(ptr[ebp+3]);
push(ptr[ebp+4]);
push(ptr[ebp+2]);
call("func_get_points(int,int,int)");
add(esp,4);
pushlea(ptr[ebp-6]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::write(vector_vec2i)");
add(esp,3);
inc(esp);
add(esp,2);
dec(esp);
mov(eax,ptr[ebp-1]);
sub(eax,ptr[ebp-3]);
mov(ptr[ebp-4],eax);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
sub(eax,1);
mov(ptr[ebp-5],eax);
pushlea(ptr[ebp-6]);
push(ptr[ebp-5]);
push(ptr[ebp-4]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(ebx,ptr[ebp-3]);
mov(ptr[ebp-1],ebx);
inc(esp);
inc(esp);
jmp("if_1015::end");
label("if_1015::end");
inc(esp);
sub(esp,2);
pushlea(ptr[ebp-3]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::read_vector_vec2i()");
add(esp,1);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_get_arr(vec2i,int)::ret");
add(esp,2);
inc(esp);
label("func_get_arr(vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_app::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
inv(eax,1);
mov(ptr[ecx+0],eax);
lea(ecx,ptr[ecx+1]);
call("func_vec2i::`ctor()");
mov(ecx,ptr[ebp-1]);
lea(ecx,ptr[ecx+3]);
call("func_vector_vec2i::`ctor()");
mov(ecx,ptr[ebp-1]);
lea(ecx,ptr[ecx+5]);
call("func_t_out_dev::`ctor()");
mov(ecx,ptr[ebp-1]);
inc(esp);
label("func_t_app::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_str::test_O2()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
mov(ptr[ebp-2],1024);
dec(esp);
mov(ptr[ebp-3],0);
dec(esp);
mov(eax,ptr[ebp-2]);
mul(eax,2);
mov(ptr[ebp-4],eax);
dec(esp);
mov(ptr[ebp-5],0);
jmp("for_8014::condition");
label("for_8014::continue");
inc(ptr[ebp-5]);
label("for_8014::condition");
mov(eax,ptr[ebp-5]);
less(eax,ptr[ebp-4]);
jz("for_8014::break",eax);
dec(esp);
mov(ptr[ebp-6],0);
jmp("for_8015::condition");
label("for_8015::continue");
inc(ptr[ebp-6]);
label("for_8015::condition");
mov(eax,ptr[ebp-6]);
less(eax,ptr[ebp-4]);
jz("for_8015::break",eax);
mov(eax,ptr[ebp-5]);
mul(eax,ptr[ebp-5]);
push(eax);
mov(eax,ptr[ebp-6]);
mul(eax,ptr[ebp-6]);
pop(ebx);
add(ebx,eax);
push(ebx);
mov(eax,ptr[ebp-2]);
mul(eax,ptr[ebp-2]);
pop(ebx);
more(ebx,eax);
jz("if_1016::end",ebx);
jmp("for_8015::continue");
jmp("if_1016::end");
label("if_1016::end");
inc(ptr[ebp-3]);
jmp("for_8015::continue");
label("for_8015::break");
inc(esp);
jmp("for_8014::continue");
label("for_8014::break");
inc(esp);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
jmp("func_t_str::test_O2()::ret");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_t_str::test_O2()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_str::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
inc(esp);
label("func_t_str::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_cr_test(t_input)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],257);
dec(esp);
mov(ptr[ebp-2],258);
dec(esp);
mov(ptr[ebp-3],259);
dec(esp);
mov(ptr[ebp-4],4);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-8]);
push(ptr[ebp+10]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
push(ptr[ebp+7]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
push(ptr[ebp-4]);
call("func_get_obj_pos(t_input,int)");
add(esp,11);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
add(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-10]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
push(ptr[ebp-4]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
add(esp,2);
sub(esp,7);
dec(esp);
sub(esp,7);
mov(eax,1024);
mul(eax,16);
mov(ptr[ebp-16],eax);
pushlea(ptr[ebp-23]);
push(ptr[ebp-16]);
call("func_new_geom(int)");
add(esp,2);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
push(ptr[ebp-20]);
push(ptr[ebp-21]);
push(ptr[ebp-22]);
push(ptr[ebp-23]);
pop(ptr[ebp-15]);
pop(ptr[ebp-14]);
pop(ptr[ebp-13]);
pop(ptr[ebp-12]);
pop(ptr[ebp-11]);
pop(ptr[ebp-10]);
pop(ptr[ebp-9]);
add(esp,7);
inc(esp);
mov(eax,255);
shl(eax,24);
push(eax);
mov(eax,128);
shl(eax,8);
pop(ebx);
add(ebx,eax);
mov(ptr[ebp-9],ebx);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-19]);
push(0);
push(0);
call("func_vec2i(int,int)");
add(esp,3);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
pop(ptr[ebp-17]);
pop(ptr[ebp-16]);
add(esp,2);
jz("if_1017::end",0);
sub(esp,7);
dec(esp);
dec(esp);
sub(esp,7);
mov(eax,30);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-25],eax);
mov(eax,30);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-26],eax);
pushlea(ptr[ebp-33]);
push(ptr[ebp-8]);
push(ptr[ebp-7]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
add(esp,5);
push(ptr[ebp-27]);
push(ptr[ebp-28]);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
pop(ptr[ebp-24]);
pop(ptr[ebp-23]);
pop(ptr[ebp-22]);
pop(ptr[ebp-21]);
pop(ptr[ebp-20]);
pop(ptr[ebp-19]);
pop(ptr[ebp-18]);
add(esp,7);
inc(esp);
inc(esp);
mov(eax,255);
shl(eax,24);
push(eax);
mov(eax,128);
shl(eax,8);
pop(ebx);
add(ebx,eax);
push(ebx);
mov(eax,255);
shl(eax,16);
pop(ebx);
add(ebx,eax);
mov(ptr[ebp-9],ebx);
sub(esp,7);
dec(esp);
dec(esp);
dec(esp);
sub(esp,7);
mov(eax,64);
mul(eax,ptr[ebp-4]);
mov(ebx,ptr[ebp-7]);
sub(ebx,eax);
mov(ptr[ebp-32],ebx);
mov(eax,100);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-33],eax);
mov(eax,10);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-34],eax);
pushlea(ptr[ebp-41]);
push(ptr[ebp-8]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
push(ptr[ebp-34]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
add(esp,5);
push(ptr[ebp-35]);
push(ptr[ebp-36]);
push(ptr[ebp-37]);
push(ptr[ebp-38]);
push(ptr[ebp-39]);
push(ptr[ebp-40]);
push(ptr[ebp-41]);
pop(ptr[ebp-31]);
pop(ptr[ebp-30]);
pop(ptr[ebp-29]);
pop(ptr[ebp-28]);
pop(ptr[ebp-27]);
pop(ptr[ebp-26]);
pop(ptr[ebp-25]);
add(esp,7);
inc(esp);
inc(esp);
inc(esp);
sub(esp,7);
dec(esp);
dec(esp);
dec(esp);
sub(esp,7);
mov(eax,200);
mul(eax,ptr[ebp-4]);
add(eax,ptr[ebp-8]);
mov(ptr[ebp-39],eax);
mov(eax,10);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-40],eax);
mov(eax,60);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-41],eax);
pushlea(ptr[ebp-48]);
push(ptr[ebp-39]);
push(ptr[ebp-7]);
push(ptr[ebp-40]);
push(ptr[ebp-41]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
add(esp,5);
push(ptr[ebp-42]);
push(ptr[ebp-43]);
push(ptr[ebp-44]);
push(ptr[ebp-45]);
push(ptr[ebp-46]);
push(ptr[ebp-47]);
push(ptr[ebp-48]);
pop(ptr[ebp-38]);
pop(ptr[ebp-37]);
pop(ptr[ebp-36]);
pop(ptr[ebp-35]);
pop(ptr[ebp-34]);
pop(ptr[ebp-33]);
pop(ptr[ebp-32]);
add(esp,7);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-39]);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
push(ptr[ebp-20]);
push(ptr[ebp-21]);
push(ptr[ebp-22]);
push(ptr[ebp-23]);
push(ptr[ebp-24]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
dec(esp);
pushlea(ptr[ebp-39]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
push(ptr[ebp-27]);
push(ptr[ebp-28]);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
dec(esp);
pushlea(ptr[ebp-39]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
push(ptr[ebp-34]);
push(ptr[ebp-35]);
push(ptr[ebp-36]);
push(ptr[ebp-37]);
push(ptr[ebp-38]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
sub(esp,7);
dec(esp);
pushlea(ptr[ebp-45]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
push(ptr[ebp-4]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)");
add(esp,6);
pushlea(ptr[ebp-46]);
push(ptr[ebp-39]);
push(ptr[ebp-40]);
push(ptr[ebp-41]);
push(ptr[ebp-42]);
push(ptr[ebp-43]);
push(ptr[ebp-44]);
push(ptr[ebp-45]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
add(esp,7);
add(esp,7);
add(esp,7);
add(esp,7);
jmp("if_1017::end");
label("if_1017::end");
sub(esp,7);
sub(esp,2);
sub(esp,7);
pushlea(ptr[ebp-26]);
push(0);
push(0);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-33]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
push(ptr[ebp-4]);
call("func_get_grid(vec2i,int)");
add(esp,4);
push(ptr[ebp-27]);
push(ptr[ebp-28]);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
pop(ptr[ebp-24]);
pop(ptr[ebp-23]);
pop(ptr[ebp-22]);
pop(ptr[ebp-21]);
pop(ptr[ebp-20]);
pop(ptr[ebp-19]);
pop(ptr[ebp-18]);
add(esp,7);
add(esp,2);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-28]);
push(0);
push(0);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-30]);
push(ptr[ebp-27]);
push(ptr[ebp-28]);
push(ptr[ebp-4]);
call("func_get_arr(vec2i,int)");
add(esp,4);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
pop(ptr[ebp-26]);
pop(ptr[ebp-25]);
add(esp,2);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-27]);
push(82);
lea(ecx,ptr[ebp+2]);
call("func_t_input::kb_on_down(int)");
add(esp,2);
jz("if_1018::end",ptr[ebp-27]);
dec(esp);
pushlea(ptr[ebp-28]);
push(0);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::addr_at(int)");
add(esp,2);
mov(ebx,ptr[ebp-28]);
mov(ptr[ebp-26],ebx);
inc(esp);
mov(ptr[ebp-25],0);
dec(esp);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::`ctor()");
dec(esp);
dec(esp);
pushlea(ptr[ebp-29]);
call("func_g_arr_addr()");
add(esp,1);
pushlea(ptr[ebp-30]);
push(ptr[ebp-29]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-30]);
mov(ptr[ebp-28],ebx);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-29]);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::read_int()");
add(esp,1);
inc(esp);
jz("if_1019::end",1);
dec(esp);
mov(eax,ptr[ebp-28]);
mov(ptr[ebp-29],eax);
dec(esp);
pushlea(ptr[ebp-30]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::write(vector_vec2i)");
add(esp,3);
inc(esp);
dec(esp);
mov(eax,ptr[ebp-28]);
sub(eax,ptr[ebp-29]);
mov(ptr[ebp-30],eax);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-29]);
sub(eax,1);
mov(ptr[ebp-31],eax);
pushlea(ptr[ebp-32]);
push(ptr[ebp-31]);
push(ptr[ebp-30]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(ebx,ptr[ebp-29]);
mov(ptr[ebp-28],ebx);
inc(esp);
inc(esp);
jmp("if_1019::end");
label("if_1019::end");
jmp("if_1018::end");
inc(esp);
label("if_1018::end");
inc(esp);
dec(esp);
pushlea(ptr[ebp-27]);
push(ptr[ebp-2]);
lea(ecx,ptr[ebp+2]);
call("func_t_input::kb_on_down(int)");
add(esp,2);
jz("if_1020::end",ptr[ebp-27]);
dec(esp);
pushlea(ptr[ebp-28]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
dec(esp);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::`ctor()");
dec(esp);
dec(esp);
pushlea(ptr[ebp-29]);
call("func_g_arr_addr()");
add(esp,1);
pushlea(ptr[ebp-30]);
push(ptr[ebp-29]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-30]);
mov(ptr[ebp-28],ebx);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-29]);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::read_int()");
add(esp,1);
inc(esp);
jz("if_1021::end",1);
dec(esp);
mov(eax,ptr[ebp-28]);
mov(ptr[ebp-29],eax);
dec(esp);
pushlea(ptr[ebp-30]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::write(vector_vec2i)");
add(esp,3);
inc(esp);
dec(esp);
mov(eax,ptr[ebp-28]);
sub(eax,ptr[ebp-29]);
mov(ptr[ebp-30],eax);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-29]);
sub(eax,1);
mov(ptr[ebp-31],eax);
pushlea(ptr[ebp-32]);
push(ptr[ebp-31]);
push(ptr[ebp-30]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(ebx,ptr[ebp-29]);
mov(ptr[ebp-28],ebx);
inc(esp);
inc(esp);
jmp("if_1021::end");
label("if_1021::end");
jmp("if_1020::end");
inc(esp);
label("if_1020::end");
inc(esp);
dec(esp);
pushlea(ptr[ebp-27]);
push(ptr[ebp-1]);
lea(ecx,ptr[ebp+5]);
call("func_vector_int::at(int)");
add(esp,2);
jz("if_1022::end",ptr[ebp-27]);
dec(esp);
mov(ptr[ebp-28],0);
dec(esp);
mov(ptr[ebp-29],0);
jmp("for_8016::condition");
label("for_8016::continue");
inc(ptr[ebp-29]);
label("for_8016::condition");
mov(eax,ptr[ebp-29]);
less(eax,ptr[ebp-25]);
jz("for_8016::break",eax);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-33]);
push(ptr[ebp-28]);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::at(int)");
add(esp,2);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
pop(ptr[ebp-31]);
pop(ptr[ebp-30]);
add(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-35]);
push(ptr[ebp-29]);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::at(int)");
add(esp,2);
push(ptr[ebp-34]);
push(ptr[ebp-35]);
pop(ptr[ebp-33]);
pop(ptr[ebp-32]);
add(esp,2);
dec(esp);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-36]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-37]);
push(ptr[ebp-35]);
push(ptr[ebp-36]);
call("func_hypot(vec2i)");
add(esp,3);
mov(eax,ptr[ebp-37]);
mov(ptr[ebp-34],eax);
inc(esp);
add(esp,2);
dec(esp);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-37]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-38]);
push(ptr[ebp-36]);
push(ptr[ebp-37]);
call("func_hypot(vec2i)");
add(esp,3);
mov(eax,ptr[ebp-38]);
mov(ptr[ebp-35],eax);
inc(esp);
add(esp,2);
mov(eax,ptr[ebp-35]);
less(eax,ptr[ebp-34]);
jz("if_1023::end",eax);
mov(ebx,ptr[ebp-29]);
mov(ptr[ebp-28],ebx);
jmp("if_1023::end");
label("if_1023::end");
inc(esp);
inc(esp);
add(esp,2);
add(esp,2);
jmp("for_8016::continue");
label("for_8016::break");
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-29]);
push(ptr[ebp-28]);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::addr_at(int)");
add(esp,2);
pushlea(ptr[ebp-30]);
push(ptr[ebp-29]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
call("func_set_vec2i(int,vec2i)");
add(esp,4);
inc(esp);
inc(esp);
inc(esp);
jmp("if_1022::end");
label("if_1022::end");
inc(esp);
sub(esp,7);
dec(esp);
pushlea(ptr[ebp-33]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
push(ptr[ebp-4]);
call("func_GenGeomCatmullRom(vector_vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-34]);
push(ptr[ebp-27]);
push(ptr[ebp-28]);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
add(esp,7);
dec(esp);
mov(ptr[ebp-27],0);
mov(ptr[ebp-27],16);
dec(esp);
dec(esp);
pushlea(ptr[ebp-29]);
push(ptr[ebp-27]);
lea(ecx,ptr[ebp+5]);
call("func_vector_int::at(int)");
add(esp,2);
mov(eax,ptr[ebp-29]);
mov(ptr[ebp-28],eax);
inc(esp);
dec(esp);
mov(ptr[ebp-29],0);
jmp("for_8017::condition");
label("for_8017::continue");
inc(ptr[ebp-29]);
label("for_8017::condition");
mov(eax,ptr[ebp-29]);
less(eax,ptr[ebp-25]);
jz("for_8017::break",eax);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-31]);
push(ptr[ebp-29]);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::at(int)");
add(esp,2);
pushlea(ptr[ebp-32]);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
push(ptr[ebp-20]);
push(ptr[ebp-21]);
push(ptr[ebp-22]);
push(ptr[ebp-23]);
push(ptr[ebp-24]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)");
add(esp,10);
inc(esp);
add(esp,2);
jmp("for_8017::continue");
label("for_8017::break");
inc(esp);
sub(esp,2);
lea(ecx,ptr[ebp-30]);
call("func_t_mem::`ctor()");
dec(esp);
dec(esp);
mov(eax,1024);
mul(eax,1024);
mov(ptr[ebp-31],eax);
pushlea(ptr[ebp-32]);
push(ptr[ebp-31]);
call("func_alloc(int)");
add(esp,2);
mov(ebx,ptr[ebp-32]);
mov(ptr[ebp-30],ebx);
inc(esp);
inc(esp);
dec(esp);
lea(ecx,ptr[ebp-31]);
call("func_t_dev::`ctor()");
mov(ebx,ptr[ebp-30]);
mov(ptr[ebp-31],ebx);
dec(esp);
pushlea(ptr[ebp-32]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
lea(ecx,ptr[ebp-31]);
call("func_t_dev::write(t_out_dev)");
add(esp,8);
inc(esp);
push(eax);
mov(eax,ptr[ebp-31]);
sub(eax,ptr[ebp-30]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-29],ebx);
mov(edx,ptr[ebp+11]);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_cr_test(t_input)::ret");
inc(esp);
add(esp,2);
inc(esp);
inc(esp);
add(esp,2);
add(esp,7);
add(esp,2);
add(esp,7);
add(esp,2);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_cr_test(t_input)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_main(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-1]);
call("func_g_ptr_addr()");
add(esp,1);
pushlea(ptr[ebp-2]);
push(ptr[ebp-1]);
push(0);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-1]);
call("func_g_mem_addr()");
add(esp,1);
mov(eax,1024);
mul(eax,512);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_alloc(int)");
add(esp,2);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-3]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-1]);
call("func_g_arr_addr()");
add(esp,1);
mov(eax,1024);
mul(eax,16);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_alloc(int)");
add(esp,2);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-3]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
sub(esp,9);
lea(ecx,ptr[ebp-9]);
call("func_t_input::`ctor()");
dec(esp);
lea(ecx,ptr[ebp-10]);
call("func_t_dev::`ctor()");
mov(ebx,ptr[ebp+2]);
mov(ptr[ebp-10],ebx);
sub(esp,2);
pushlea(ptr[ebp-12]);
lea(ecx,ptr[ebp-10]);
call("func_t_dev::read_vec2i()");
add(esp,1);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
pop(ptr[ebp-9]);
pop(ptr[ebp-8]);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-11]);
lea(ecx,ptr[ebp-10]);
call("func_t_dev::read_int()");
add(esp,1);
mov(ebx,ptr[ebp-11]);
mov(ptr[ebp-7],ebx);
inc(esp);
sub(esp,3);
pushlea(ptr[ebp-13]);
lea(ecx,ptr[ebp-10]);
call("func_t_dev::read_vector_int()");
add(esp,1);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
add(esp,3);
sub(esp,3);
pushlea(ptr[ebp-13]);
lea(ecx,ptr[ebp-10]);
call("func_t_dev::read_vector_int()");
add(esp,1);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
pop(ptr[ebp-3]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
add(esp,3);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-14]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
call("func_cr_test(t_input)");
add(esp,10);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
pop(ptr[ebp-12]);
pop(ptr[ebp-11]);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
call("func_setebx(int)");
add(esp,2);
inc(esp);
mov(ecx,1);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-12]);
pop(ptr[edx+0]);
jmp("func_main(int)::ret");
add(esp,2);
inc(esp);
add(esp,9);
label("func_main(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("begin");
dec(esp);
pushlea(ptr[ebp-1]);
push(ecx);
call("func_main(int)");
add(esp,2);
mov(eax,ptr[ebp-1]);
inc(esp);
mov(err,1);