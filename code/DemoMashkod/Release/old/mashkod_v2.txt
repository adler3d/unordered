/*
1181,2910,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
48,2,64,0
163,2,7,0
48,3,1024,0
207,3,2,0
65,5,6,2
61,5,0,3
1181,11,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
1212,6,-2,0
1185,1,0,0
163,7,1,0
65,2,6,-2
61,6,-1,2
1194,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-3,0
1190,6,-1,0
1185,279,0,0
163,7,2,0
65,2,6,-3
61,6,-2,2
1194,7,0,0
88,2,6,-2
6,45,2,0
1197,7,0,0
48,2,1024,0
209,2,128,0
61,6,-3,2
65,3,6,-3
61,6,-2,3
1194,7,0,0
1181,45,0,0
1208,0,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-2
180,2,6,2
61,6,-3,2
1212,6,-4,0
1190,6,-1,0
1190,6,-3,0
1185,295,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
65,5,6,3
1190,6,-2,0
1193,5,0,0
1181,64,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,4,0,0
1190,4,1,0
1185,323,0,0
65,4,6,-1
163,7,3,0
65,5,6,2
1190,6,-2,0
1193,5,0,0
1181,86,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
63,4,1,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
186,7,2,0
1211,4,6,-2
1185,90,0,0
65,3,6,3
61,6,-2,3
65,3,6,2
61,6,-1,3
65,5,6,4
1190,6,-1,0
1190,6,-2,0
1193,5,0,0
1193,5,1,0
1181,119,0,0
163,7,2,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1212,6,-1,0
1190,6,3,0
1190,6,2,0
1185,295,0,0
163,7,3,0
65,5,6,4
1190,6,-1,0
1193,5,0,0
1181,137,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1212,6,-1,0
1190,6,2,0
1190,6,3,0
1185,323,0,0
163,7,3,0
65,5,6,4
1190,6,-1,0
1193,5,0,0
1181,155,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
186,7,2,0
65,2,6,4
203,2,6,2
61,6,-1,2
65,2,6,5
203,2,6,3
61,6,-2,2
1212,6,-4,0
1190,6,-1,0
1190,6,-2,0
1185,102,0,0
163,7,3,0
65,5,6,6
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1181,185,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
186,7,2,0
65,2,6,4
180,2,6,2
61,6,-1,2
65,2,6,5
180,2,6,3
61,6,-2,2
1212,6,-4,0
1190,6,-1,0
1190,6,-2,0
1185,102,0,0
163,7,3,0
65,5,6,6
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1181,215,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
186,7,2,0
65,2,6,3
226,2,6,2
61,6,-1,2
65,2,6,4
226,2,6,2
61,6,-2,2
1212,6,-4,0
1190,6,-1,0
1190,6,-2,0
1185,102,0,0
163,7,3,0
65,5,6,5
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1181,245,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
186,7,2,0
65,2,6,3
249,2,6,2
61,6,-1,2
65,2,6,4
249,2,6,2
61,6,-2,2
1212,6,-4,0
1190,6,-1,0
1190,6,-2,0
1185,102,0,0
163,7,3,0
65,5,6,5
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1181,275,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
63,6,-1,0
65,2,6,2
64,6,-1,2
65,5,6,3
1190,6,-1,0
1193,5,0,0
1181,291,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1187,3,0,0
65,2,6,3
65,3,6,2
55,2,3,0
1191,3,0,0
65,2,6,3
163,2,1,0
65,5,6,4
61,5,0,2
1181,308,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
65,3,6,2
65,5,6,3
63,5,0,0
1181,319,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
63,6,-1,0
65,2,6,3
65,3,6,2
138,2,3,0
61,6,-1,2
65,5,6,4
1190,6,-1,0
1193,5,0,0
1181,337,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
88,2,6,2
6,349,2,0
1208,0,0,0
48,8,-1,0
1181,349,0,0
1208,0,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
65,2,6,3
341,2,6,2
6,365,2,0
65,5,6,4
1190,6,3,0
1193,5,0,0
1181,370,0,0
1181,365,0,0
1208,0,0,0
65,5,6,4
1190,6,2,0
1193,5,0,0
1181,370,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
65,2,6,3
364,2,6,2
6,385,2,0
65,5,6,4
1190,6,3,0
1193,5,0,0
1181,390,0,0
1181,385,0,0
1208,0,0,0
65,5,6,4
1190,6,2,0
1193,5,0,0
1181,390,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
1212,6,-1,0
1190,6,4,0
1190,6,2,0
1185,374,0,0
163,7,3,0
1212,6,-2,0
1190,6,-1,0
1190,6,3,0
1185,354,0,0
163,7,3,0
65,5,6,5
1190,6,-2,0
1193,5,0,0
1181,415,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
1211,4,4,1
1185,90,0,0
65,4,6,-1
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
186,7,3,0
1211,4,6,-3
1185,419,0,0
65,3,6,4
61,6,-3,3
1190,6,3,0
1190,6,2,0
1193,6,-2,0
1193,6,-1,0
65,5,6,5
1190,6,-1,0
1190,6,-2,0
1190,6,-3,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,454,0,0
163,7,3,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
48,2,3,0
226,2,6,2
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,15,0,0
65,4,6,-1
163,7,2,0
65,3,6,-3
61,4,0,3
1194,7,0,0
1194,7,0,0
63,4,1,0
65,3,6,2
61,4,2,3
65,5,6,3
63,5,0,0
1181,484,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,4,0,0
1190,6,2,0
1185,295,0,0
65,4,6,-1
163,7,3,0
65,3,6,-2
61,4,0,3
1194,7,0,0
65,5,6,3
1190,4,0,0
1193,5,0,0
1181,508,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,488,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
65,4,6,-1
1185,488,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
65,5,6,4
1190,4,0,0
1193,5,0,0
1181,538,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
341,2,4,2
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,341,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,4,0
65,4,6,-1
1185,488,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
1190,6,2,0
65,4,6,-1
1185,512,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1196,4,1,0
65,5,6,5
1190,4,0,0
1193,5,0,0
1181,582,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
341,2,4,2
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,341,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,488,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,4,0
1190,6,3,0
65,4,6,-1
1185,512,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1196,4,1,0
65,5,6,5
1190,4,0,0
1193,5,0,0
1181,626,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
1197,7,0,0
186,7,2,0
1212,6,-2,0
1190,6,2,0
1185,279,0,0
65,4,6,-1
163,7,2,0
65,2,6,2
163,2,1,0
61,6,-3,2
1212,6,-4,0
1190,6,-3,0
1185,279,0,0
65,4,6,-1
163,7,2,0
1212,6,-6,0
1190,6,-2,0
1190,6,-4,0
1185,102,0,0
65,4,6,-1
163,7,3,0
65,5,6,3
1190,6,-5,0
1190,6,-6,0
1193,5,0,0
1193,5,1,0
1181,669,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
186,7,2,0
186,7,3,0
1212,6,-2,0
1190,6,2,0
1185,279,0,0
65,4,6,-1
163,7,2,0
65,2,6,2
163,2,1,0
61,6,-3,2
1212,6,-5,0
1190,6,-3,0
65,4,6,-1
1185,630,0,0
65,4,6,-1
163,7,2,0
1212,6,-8,0
1190,6,-2,0
1190,6,-4,0
1190,6,-5,0
1185,433,0,0
65,4,6,-1
163,7,4,0
65,5,6,3
1190,6,-6,0
1190,6,-7,0
1190,6,-8,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,716,0,0
163,7,3,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
186,7,3,0
65,2,6,2
203,2,4,1
209,2,3,0
65,3,4,0
161,3,2,0
61,6,-2,3
1212,6,-5,0
1190,6,-2,0
65,4,6,-1
1185,673,0,0
65,4,6,-1
163,7,2,0
65,5,6,3
1190,6,-3,0
1190,6,-4,0
1190,6,-5,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,750,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
63,4,1,0
63,4,2,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
48,2,1,0
226,2,6,2
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,15,0,0
65,4,6,-1
163,7,2,0
65,3,6,-3
61,4,0,3
1194,7,0,0
1194,7,0,0
63,4,1,0
65,3,6,2
61,4,2,3
65,5,6,3
63,5,0,0
1181,793,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
341,2,4,2
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,341,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,4,0,0
1190,6,2,0
1185,295,0,0
65,4,6,-1
163,7,3,0
65,3,6,-2
61,4,0,3
1194,7,0,0
1196,4,1,0
65,5,6,3
1190,4,0,0
1193,5,0,0
1181,830,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,2,0
1185,279,0,0
65,4,6,-1
163,7,2,0
65,5,6,3
1190,6,-2,0
1193,5,0,0
1181,851,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,0
180,2,6,2
203,2,4,1
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
65,4,6,-1
1185,834,0,0
65,4,6,-1
163,7,2,0
65,5,6,3
1190,6,-3,0
1193,5,0,0
1181,879,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
347,2,0,0
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,341,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1189,0,0,0
65,4,6,-1
1185,855,0,0
65,4,6,-1
163,7,2,0
65,5,6,2
1190,6,-2,0
1193,5,0,0
1181,913,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
347,2,0,0
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,341,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,4,1
186,2,1,0
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
65,4,6,-1
1185,855,0,0
65,4,6,-1
163,7,2,0
65,5,6,2
1190,6,-3,0
1193,5,0,0
1181,952,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
63,4,1,0
63,4,2,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,4,0
1211,4,4,3
1185,797,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
1211,4,4,3
1185,797,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,2,0
1211,4,4,3
1185,797,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
65,5,6,5
63,5,0,0
1181,1002,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,4,0
1190,6,3,0
1190,6,2,0
1211,4,4,0
1185,586,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
65,5,6,5
63,5,0,0
1181,1025,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
186,7,2,0
1197,7,0,0
1212,6,-3,0
1190,6,3,0
1190,6,2,0
1185,102,0,0
65,4,6,-1
163,7,3,0
1212,6,-4,0
1190,4,6,0
1190,6,-2,0
1190,6,-3,0
1211,4,4,0
1185,542,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
65,5,6,4
63,5,0,0
1181,1056,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,4,6,0
1190,6,3,0
1190,6,2,0
1211,4,4,0
1185,542,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
65,5,6,4
63,5,0,0
1181,1079,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,4,6,0
1190,6,3,0
1190,6,2,0
1211,4,4,0
1185,542,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
65,2,4,1
186,2,1,0
65,5,6,4
61,5,0,2
1181,1104,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,6,6
255,2,3,0
48,3,0,0
276,3,2,0
61,6,-2,3
1212,6,-3,0
1190,6,-2,0
1185,341,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
65,2,4,1
61,6,-2,2
1197,7,0,0
63,6,-3,0
1181,1135,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,3
6,1158,2,0
186,7,3,0
1197,7,0,0
1212,6,-6,0
1190,6,-3,0
1211,4,6,2
1185,720,0,0
65,4,6,-1
163,7,2,0
1212,6,-7,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
1211,4,4,0
1185,586,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,3,0
1181,1133,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
63,6,-3,0
1181,1165,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,6
6,1191,2,0
1197,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-4,0
1190,6,-3,0
1211,4,6,5
1185,855,0,0
65,4,6,-1
163,7,2,0
65,2,6,-2
180,2,6,-4
61,6,-5,2
1212,6,-6,0
1190,6,-5,0
1211,4,4,3
1185,797,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1181,1163,0,0
1208,0,0,0
1194,7,0,0
65,5,6,9
63,5,0,0
1181,1198,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
65,2,4,1
61,6,-2,2
1197,7,0,0
1197,7,0,0
48,2,1024,0
209,2,16,0
65,3,6,-2
322,3,2,0
61,6,-3,3
1212,6,-4,0
1190,6,-3,0
1185,341,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
63,6,-3,0
1181,1229,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,5
6,1275,2,0
186,7,3,0
186,7,3,0
1212,6,-9,0
1190,6,-3,0
1211,4,6,4
1185,720,0,0
65,4,6,-1
163,7,2,0
1190,6,-7,0
1190,6,-8,0
1190,6,-9,0
1193,6,-6,0
1193,6,-5,0
1193,6,-4,0
163,7,3,0
186,7,2,0
1212,6,-8,0
1190,6,-4,0
1190,6,-5,0
1190,6,3,0
1190,6,2,0
65,4,6,-1
1185,189,0,0
65,4,6,-1
163,7,5,0
1190,6,-7,0
1190,6,-8,0
1193,6,-5,0
1193,6,-4,0
163,7,2,0
1197,7,0,0
1212,6,-7,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
65,4,6,-1
1185,1006,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,3,0
1181,1227,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,8
255,2,3,0
48,3,0,0
276,3,2,0
61,6,-3,3
1212,6,-4,0
1190,6,-3,0
1185,341,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
63,6,-3,0
1181,1296,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,8
6,1322,2,0
1197,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-4,0
1190,6,-3,0
1211,4,6,7
1185,855,0,0
65,4,6,-1
163,7,2,0
65,2,6,-2
180,2,6,-4
61,6,-5,2
1212,6,-6,0
1190,6,-5,0
1211,4,4,3
1185,797,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1181,1294,0,0
1208,0,0,0
1194,7,0,0
65,5,6,11
63,5,0,0
1181,1329,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
186,7,7,0
186,7,7,0
1212,6,-15,0
1189,1,0,0
1185,1507,0,0
65,4,6,-1
163,7,2,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1190,6,-12,0
1190,6,-13,0
1190,6,-14,0
1190,6,-15,0
1193,6,-8,0
1193,6,-7,0
1193,6,-6,0
1193,6,-5,0
1193,6,-4,0
1193,6,-3,0
1193,6,-2,0
163,7,7,0
65,3,4,6
61,6,-2,3
1197,7,0,0
65,2,6,3
232,2,2,0
61,6,-9,2
1197,7,0,0
65,2,6,2
232,2,2,0
61,6,-10,2
1197,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,5
203,2,6,-9
61,6,-11,2
65,2,6,4
203,2,6,-10
61,6,-12,2
1212,6,-13,0
1190,6,-11,0
1190,6,-12,0
1211,4,6,-8
1185,1029,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,5
180,2,6,-9
61,6,-11,2
65,2,6,4
203,2,6,-10
61,6,-12,2
1212,6,-13,0
1190,6,-11,0
1190,6,-12,0
1211,4,6,-8
1185,1029,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,5
180,2,6,-9
61,6,-11,2
65,2,6,4
180,2,6,-10
61,6,-12,2
1212,6,-13,0
1190,6,-11,0
1190,6,-12,0
1211,4,6,-8
1185,1029,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,5
203,2,6,-9
61,6,-11,2
65,2,6,4
180,2,6,-10
61,6,-12,2
1212,6,-13,0
1190,6,-11,0
1190,6,-12,0
1211,4,6,-8
1185,1029,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-11,0
1189,1,0,0
1189,0,0,0
1189,3,0,0
1211,4,6,-8
1185,969,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
1197,7,0,0
1212,6,-11,0
1189,3,0,0
1189,2,0,0
1189,1,0,0
1211,4,6,-8
1185,969,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
65,5,6,6
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
1190,6,-7,0
1190,6,-8,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1193,5,3,0
1193,5,4,0
1193,5,5,0
1193,5,6,0
1181,1486,0,0
1194,7,0,0
1194,7,0,0
163,7,7,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1211,4,4,0
1185,754,0,0
65,4,6,-1
1211,4,4,3
1185,956,0,0
65,4,6,-1
63,4,6,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
186,7,7,0
1211,4,6,-7
1185,1490,0,0
1197,7,0,0
1197,7,0,0
48,2,4,0
226,2,6,2
61,6,-8,2
1212,6,-9,0
1190,6,-8,0
1211,4,6,-7
1185,458,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
48,2,6,0
226,2,6,2
61,6,-8,2
1212,6,-9,0
1190,6,-8,0
1211,4,6,-4
1185,767,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
65,5,6,3
1190,6,-1,0
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
1190,6,-7,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1193,5,3,0
1193,5,4,0
1193,5,5,0
1193,5,6,0
1181,1554,0,0
163,7,7,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1211,4,4,0
1185,90,0,0
65,4,6,-1
63,4,2,0
1211,4,4,3
1185,956,0,0
65,4,6,-1
1211,4,4,6
1185,956,0,0
65,4,6,-1
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
1212,6,-3,0
1190,4,0,0
1185,279,0,0
65,4,6,-1
163,7,2,0
65,2,6,-3
61,6,-2,2
1194,7,0,0
1196,4,0,0
65,5,6,2
1190,6,-2,0
1193,5,0,0
1181,1600,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
186,7,2,0
1212,6,-2,0
65,4,6,-1
1185,1578,0,0
65,4,6,-1
163,7,1,0
1212,6,-3,0
65,4,6,-1
1185,1578,0,0
65,4,6,-1
163,7,1,0
1212,6,-5,0
1190,6,-2,0
1190,6,-3,0
1185,102,0,0
65,4,6,-1
163,7,3,0
65,5,6,2
1190,6,-4,0
1190,6,-5,0
1193,5,0,0
1193,5,1,0
1181,1638,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
186,7,3,0
1211,4,6,-4
1185,956,0,0
65,4,6,-1
1197,7,0,0
1212,6,-5,0
65,4,6,-1
1185,1578,0,0
65,4,6,-1
163,7,1,0
65,3,6,-5
61,6,-3,3
1194,7,0,0
65,3,6,-3
176,4,0,3
65,3,4,0
61,6,-4,3
65,5,6,2
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,1674,0,0
163,7,3,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,4,0,0
1190,6,2,0
1185,295,0,0
65,4,6,-1
163,7,3,0
65,3,6,-2
61,4,0,3
1194,7,0,0
65,5,6,3
1190,4,0,0
1193,5,0,0
1181,1698,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,4,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
65,5,6,5
1190,4,0,0
1193,5,0,0
1181,1736,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
65,5,6,4
1190,4,0,0
1193,5,0,0
1181,1766,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,4,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
65,5,6,5
1190,4,0,0
1193,5,0,0
1181,1804,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,4,0
1190,6,3,0
65,4,6,-1
1185,1740,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
65,5,6,5
1190,4,0,0
1193,5,0,0
1181,1835,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,3,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
63,6,-2,0
1181,1857,0,0
1208,0,0,0
1196,6,-2,0
1208,0,0,0
65,2,6,-2
341,2,6,3
6,1880,2,0
186,7,3,0
1197,7,0,0
1212,6,-5,0
1190,6,-2,0
1211,4,6,2
1185,720,0,0
65,4,6,-1
163,7,2,0
1212,6,-6,0
1190,6,-3,0
1190,6,-4,0
1190,6,-5,0
65,4,6,-1
1185,1808,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,3,0
1181,1855,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,6,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
63,6,-2,0
1181,1895,0,0
1208,0,0,0
1196,6,-2,0
1208,0,0,0
65,2,6,-2
341,2,6,6
6,1916,2,0
1197,7,0,0
1197,7,0,0
1212,6,-3,0
1190,6,-2,0
1211,4,6,5
1185,855,0,0
65,4,6,-1
163,7,2,0
1212,6,-4,0
1190,6,-3,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1181,1893,0,0
1208,0,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1189,6,0,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
48,2,8,0
209,2,3,0
48,3,255,0
552,3,2,0
61,6,-2,3
1197,7,0,0
94,2,1,0
61,6,-3,2
1197,7,0,0
48,2,8,0
209,2,2,0
48,3,255,0
552,3,2,0
65,2,6,-2
161,2,3,0
61,6,-4,2
1197,7,0,0
48,2,8,0
209,2,1,0
48,3,255,0
552,3,2,0
65,2,6,-2
161,2,3,0
61,6,-5,2
1197,7,0,0
48,2,8,0
209,2,0,0
48,3,255,0
552,3,2,0
65,2,6,-2
161,2,3,0
61,6,-6,2
1197,7,0,0
65,2,6,-2
61,6,-7,2
1197,7,0,0
186,7,2,0
186,7,2,0
1197,7,0,0
94,2,30,0
61,6,-8,2
1212,6,-10,0
1190,6,-8,0
1189,0,0,0
1185,102,0,0
65,4,6,-1
163,7,3,0
1212,6,-12,0
1190,6,3,0
1190,6,2,0
1190,6,-9,0
1190,6,-10,0
1185,189,0,0
65,4,6,-1
163,7,5,0
1212,6,-13,0
1190,6,-7,0
1190,6,-11,0
1190,6,-12,0
65,4,6,-1
1185,1770,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
1194,7,0,0
186,7,2,0
186,7,2,0
1197,7,0,0
1212,6,-9,0
1189,0,0,0
1189,30,0,0
1185,102,0,0
65,4,6,-1
163,7,3,0
1212,6,-11,0
1190,6,3,0
1190,6,2,0
1190,6,-8,0
1190,6,-9,0
1185,189,0,0
65,4,6,-1
163,7,5,0
1212,6,-12,0
1190,6,-7,0
1190,6,-10,0
1190,6,-11,0
65,4,6,-1
1185,1770,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
186,7,2,0
186,7,2,0
1197,7,0,0
1212,6,-9,0
1189,30,0,0
1189,0,0,0
1185,102,0,0
65,4,6,-1
163,7,3,0
1212,6,-11,0
1190,6,3,0
1190,6,2,0
1190,6,-8,0
1190,6,-9,0
1185,189,0,0
65,4,6,-1
163,7,5,0
1212,6,-12,0
1190,6,-7,0
1190,6,-10,0
1190,6,-11,0
65,4,6,-1
1185,1770,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
186,7,2,0
1190,6,3,0
1190,6,2,0
1193,6,-9,0
1193,6,-8,0
178,6,-9,60
1197,7,0,0
186,7,2,0
186,7,2,0
1197,7,0,0
94,2,30,0
61,6,-10,2
1212,6,-12,0
1190,6,-10,0
1189,0,0,0
1185,102,0,0
65,4,6,-1
163,7,3,0
1212,6,-14,0
1190,6,-8,0
1190,6,-9,0
1190,6,-11,0
1190,6,-12,0
1185,189,0,0
65,4,6,-1
163,7,5,0
1212,6,-15,0
1190,6,-7,0
1190,6,-13,0
1190,6,-14,0
65,4,6,-1
1185,1770,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
1194,7,0,0
186,7,2,0
186,7,2,0
1197,7,0,0
1212,6,-11,0
1189,0,0,0
1189,30,0,0
1185,102,0,0
65,4,6,-1
163,7,3,0
1212,6,-13,0
1190,6,-8,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1185,189,0,0
65,4,6,-1
163,7,5,0
1212,6,-14,0
1190,6,-7,0
1190,6,-12,0
1190,6,-13,0
65,4,6,-1
1185,1770,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
186,7,2,0
186,7,2,0
1197,7,0,0
1212,6,-11,0
1189,30,0,0
1189,0,0,0
1185,102,0,0
65,4,6,-1
163,7,3,0
1212,6,-13,0
1190,6,-8,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1185,189,0,0
65,4,6,-1
163,7,5,0
1212,6,-14,0
1190,6,-5,0
1190,6,-12,0
1190,6,-13,0
65,4,6,-1
1185,1770,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
1197,7,0,0
48,2,2,0
209,2,3,0
61,6,-10,2
1197,7,0,0
1212,6,-11,0
1190,6,-10,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
63,6,-11,0
1181,2171,0,0
1208,0,0,0
1196,6,-11,0
1208,0,0,0
65,2,6,-11
341,2,6,-10
6,2184,2,0
1197,7,0,0
1212,6,-12,0
1190,6,-11,0
65,4,6,-1
1185,1678,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1181,2169,0,0
1208,0,0,0
1194,7,0,0
1194,7,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
63,4,1,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
48,2,64,0
163,2,7,0
48,3,1024,0
207,3,2,0
163,3,512,0
65,5,6,2
61,5,0,3
1181,2233,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
186,7,2,0
1197,7,0,0
186,7,2,0
94,2,200,0
61,6,-3,2
1212,6,-5,0
1190,6,-3,0
1189,30,0,0
1185,102,0,0
163,7,3,0
1190,6,-4,0
1190,6,-5,0
1193,6,-2,0
1193,6,-1,0
163,7,2,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-4,0
1185,2222,0,0
163,7,1,0
65,2,6,-4
61,6,-3,2
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,2,0
61,6,-4,2
1212,6,-5,0
1190,6,-4,0
1185,279,0,0
163,7,2,0
21,2301,6,-5
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,0,0
61,6,-6,2
1212,6,-7,0
1190,6,-6,0
1185,279,0,0
163,7,2,0
65,3,6,-7
61,6,-2,3
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,1,0
61,6,-6,2
1212,6,-7,0
1190,6,-6,0
1185,279,0,0
163,7,2,0
65,3,6,-7
61,6,-1,3
1194,7,0,0
1194,7,0,0
1181,2314,0,0
1208,0,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,2,0
61,6,-6,2
1212,6,-7,0
1190,6,-6,0
1189,1,0,0
1185,295,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
63,6,-4,0
1197,7,0,0
63,6,-5,0
1197,7,0,0
63,6,-6,0
1197,7,0,0
63,6,-7,0
63,6,-4,37
63,6,-5,39
63,6,-6,38
63,6,-7,40
1197,7,0,0
63,6,-8,2
1197,7,0,0
1212,6,-9,0
1190,6,-4,0
1211,4,6,5
1185,855,0,0
163,7,2,0
21,2341,6,-9
65,3,6,-8
199,6,-2,3
1181,2341,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
1212,6,-9,0
1190,6,-5,0
1211,4,6,5
1185,855,0,0
163,7,2,0
21,2353,6,-9
65,3,6,-8
176,6,-2,3
1181,2353,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
1212,6,-9,0
1190,6,-6,0
1211,4,6,5
1185,855,0,0
163,7,2,0
21,2365,6,-9
65,3,6,-8
176,6,-1,3
1181,2365,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
1212,6,-9,0
1190,6,-7,0
1211,4,6,5
1185,855,0,0
163,7,2,0
21,2377,6,-9
65,3,6,-8
199,6,-1,3
1181,2377,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,0,0
61,6,-9,2
1212,6,-10,0
1190,6,-9,0
1190,6,-2,0
1185,295,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,1,0
61,6,-9,2
1212,6,-10,0
1190,6,-9,0
1190,6,-1,0
1185,295,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
65,5,6,11
1190,6,-1,0
1190,6,-2,0
1193,5,0,0
1193,5,1,0
1181,2416,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
163,7,2,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
186,7,2,0
186,7,2,0
1212,6,-4,0
1190,6,10,0
1190,6,9,0
1190,6,8,0
1190,6,7,0
1190,6,6,0
1190,6,5,0
1190,6,4,0
1190,6,3,0
1190,6,2,0
1185,2237,0,0
163,7,10,0
1190,6,-3,0
1190,6,-4,0
1193,6,-2,0
1193,6,-1,0
163,7,2,0
1197,7,0,0
48,2,64,0
163,2,8,0
48,3,1024,0
207,3,2,0
61,6,-3,3
1197,7,0,0
1211,4,6,-4
1185,2199,0,0
65,3,6,-3
61,6,-4,3
186,7,2,0
1190,6,3,0
1190,6,2,0
1193,6,-6,0
1193,6,-5,0
186,7,7,0
186,7,7,0
1212,6,-20,0
1189,1024,0,0
1185,1507,0,0
163,7,2,0
1190,6,-14,0
1190,6,-15,0
1190,6,-16,0
1190,6,-17,0
1190,6,-18,0
1190,6,-19,0
1190,6,-20,0
1193,6,-13,0
1193,6,-12,0
1193,6,-11,0
1193,6,-10,0
1193,6,-9,0
1193,6,-8,0
1193,6,-7,0
163,7,7,0
48,2,255,0
554,2,24,0
1187,2,0,0
48,2,128,0
554,2,8,0
1191,3,0,0
161,3,2,0
61,6,-7,3
8,2742,1,0
186,7,7,0
186,7,7,0
1212,6,-27,0
1190,6,-6,0
1190,6,-5,0
1189,30,0,0
1189,30,0,0
1211,4,6,-13
1185,1333,0,0
163,7,5,0
1190,6,-21,0
1190,6,-22,0
1190,6,-23,0
1190,6,-24,0
1190,6,-25,0
1190,6,-26,0
1190,6,-27,0
1193,6,-20,0
1193,6,-19,0
1193,6,-18,0
1193,6,-17,0
1193,6,-16,0
1193,6,-15,0
1193,6,-14,0
163,7,7,0
48,2,255,0
554,2,24,0
1187,2,0,0
48,2,128,0
554,2,8,0
1191,3,0,0
161,3,2,0
1187,3,0,0
48,2,255,0
554,2,16,0
1191,3,0,0
161,3,2,0
61,6,-7,3
186,7,7,0
1197,7,0,0
186,7,7,0
65,2,6,-5
186,2,64,0
61,6,-28,2
1212,6,-35,0
1190,6,-6,0
1190,6,-28,0
1189,100,0,0
1189,10,0,0
1211,4,6,-13
1185,1333,0,0
163,7,5,0
1190,6,-29,0
1190,6,-30,0
1190,6,-31,0
1190,6,-32,0
1190,6,-33,0
1190,6,-34,0
1190,6,-35,0
1193,6,-27,0
1193,6,-26,0
1193,6,-25,0
1193,6,-24,0
1193,6,-23,0
1193,6,-22,0
1193,6,-21,0
163,7,7,0
1194,7,0,0
186,7,7,0
1197,7,0,0
186,7,7,0
48,2,200,0
180,2,6,-6
61,6,-35,2
1212,6,-42,0
1190,6,-35,0
1190,6,-5,0
1189,10,0,0
1189,60,0,0
1211,4,6,-13
1185,1333,0,0
163,7,5,0
1190,6,-36,0
1190,6,-37,0
1190,6,-38,0
1190,6,-39,0
1190,6,-40,0
1190,6,-41,0
1190,6,-42,0
1193,6,-34,0
1193,6,-33,0
1193,6,-32,0
1193,6,-31,0
1193,6,-30,0
1193,6,-29,0
1193,6,-28,0
163,7,7,0
1194,7,0,0
186,7,2,0
186,7,2,0
1212,6,-38,0
1189,0,0,0
1189,0,0,0
1185,102,0,0
163,7,3,0
1190,6,-37,0
1190,6,-38,0
1193,6,-36,0
1193,6,-35,0
163,7,2,0
1197,7,0,0
1212,6,-37,0
1190,6,-14,0
1190,6,-15,0
1190,6,-16,0
1190,6,-17,0
1190,6,-18,0
1190,6,-19,0
1190,6,-20,0
1190,6,-35,0
1190,6,-36,0
1211,4,6,-13
1185,1202,0,0
163,7,10,0
1194,7,0,0
1197,7,0,0
1212,6,-37,0
1190,6,-21,0
1190,6,-22,0
1190,6,-23,0
1190,6,-24,0
1190,6,-25,0
1190,6,-26,0
1190,6,-27,0
1190,6,-35,0
1190,6,-36,0
1211,4,6,-13
1185,1202,0,0
163,7,10,0
1194,7,0,0
1197,7,0,0
1212,6,-37,0
1190,6,-28,0
1190,6,-29,0
1190,6,-30,0
1190,6,-31,0
1190,6,-32,0
1190,6,-33,0
1190,6,-34,0
1190,6,-35,0
1190,6,-36,0
1211,4,6,-13
1185,1202,0,0
163,7,10,0
1194,7,0,0
8,2723,1,0
1197,7,0,0
63,6,-37,0
1181,2649,0,0
1208,0,0,0
1196,6,-37,0
1208,0,0,0
65,2,6,-37
324,2,16,0
6,2720,2,0
1187,2,0,0
48,2,255,0
554,2,24,0
1187,2,0,0
65,2,6,-37
209,2,7,0
48,3,128,0
161,3,2,0
554,3,8,0
1191,2,0,0
161,2,3,0
46,3,2,0
1191,2,0,0
61,6,-7,3
1197,7,0,0
65,2,6,-2
180,2,6,-6
1187,2,0,0
48,2,16,0
226,2,6,-37
1191,3,0,0
161,3,2,0
61,6,-38,3
1197,7,0,0
63,6,-39,0
1181,2681,0,0
1208,0,0,0
1196,6,-39,0
1208,0,0,0
65,2,6,-39
324,2,8,0
6,2716,2,0
1197,7,0,0
186,7,7,0
1197,7,0,0
48,2,16,0
226,2,6,-39
65,3,6,-1
161,3,2,0
61,6,-40,3
1212,6,-47,0
1190,6,-38,0
1190,6,-40,0
1189,10,0,0
1189,10,0,0
1211,4,6,-13
1185,1333,0,0
163,7,5,0
1212,6,-48,0
1190,6,-41,0
1190,6,-42,0
1190,6,-43,0
1190,6,-44,0
1190,6,-45,0
1190,6,-46,0
1190,6,-47,0
1211,4,6,-13
1185,1108,0,0
163,7,8,0
1194,7,0,0
163,7,7,0
1194,7,0,0
1181,2679,0,0
1208,0,0,0
1194,7,0,0
1181,2647,0,0
1194,7,0,0
1208,0,0,0
1194,7,0,0
1181,2723,0,0
1208,0,0,0
1197,7,0,0
1212,6,-37,0
1190,6,-7,0
1190,6,-8,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1190,6,-12,0
1190,6,-13,0
1211,4,6,-4
1185,1839,0,0
163,7,8,0
1194,7,0,0
163,7,2,0
163,7,7,0
163,7,7,0
163,7,7,0
1181,2780,0,0
1208,0,0,0
186,7,7,0
1212,6,-20,0
1190,6,-6,0
1190,6,-5,0
1189,30,0,0
1189,30,0,0
1211,4,6,-13
1185,1333,0,0
163,7,5,0
1190,6,-14,0
1190,6,-15,0
1190,6,-16,0
1190,6,-17,0
1190,6,-18,0
1190,6,-19,0
1190,6,-20,0
1193,6,-13,0
1193,6,-12,0
1193,6,-11,0
1193,6,-10,0
1193,6,-9,0
1193,6,-8,0
1193,6,-7,0
163,7,7,0
1197,7,0,0
1212,6,-14,0
1190,6,-7,0
1190,6,-8,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1190,6,-12,0
1190,6,-13,0
1211,4,6,-4
1185,1839,0,0
163,7,8,0
1194,7,0,0
1208,0,0,0
186,7,2,0
1211,4,6,-15
1185,2210,0,0
65,3,6,-3
61,6,-15,3
1187,2,0,0
65,2,6,-4
203,2,6,-15
46,3,2,0
1191,2,0,0
61,6,-14,3
65,5,6,11
1190,6,-14,0
1190,6,-15,0
1193,5,0,0
1193,5,1,0
1181,2804,0,0
163,7,2,0
163,7,7,0
163,7,2,0
1194,7,0,0
1194,7,0,0
163,7,2,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
1212,6,-1,0
1185,1,0,0
163,7,1,0
1212,6,-2,0
1190,6,-1,0
1189,0,0,0
1185,295,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
186,7,9,0
1211,4,6,-9
1185,1558,0,0
1197,7,0,0
1211,4,6,-10
1185,2199,0,0
65,3,6,2
61,6,-10,3
186,7,2,0
1212,6,-12,0
1211,4,6,-10
1185,1604,0,0
163,7,1,0
1190,6,-11,0
1190,6,-12,0
1193,6,-9,0
1193,6,-8,0
163,7,2,0
1197,7,0,0
1212,6,-11,0
1211,4,6,-10
1185,1578,0,0
163,7,1,0
65,3,6,-11
61,6,-7,3
1194,7,0,0
186,7,3,0
1212,6,-13,0
1211,4,6,-10
1185,1642,0,0
163,7,1,0
1190,6,-11,0
1190,6,-12,0
1190,6,-13,0
1193,6,-6,0
1193,6,-5,0
1193,6,-4,0
163,7,3,0
186,7,3,0
1212,6,-13,0
1211,4,6,-10
1185,1642,0,0
163,7,1,0
1190,6,-11,0
1190,6,-12,0
1190,6,-13,0
1193,6,-3,0
1193,6,-2,0
1193,6,-1,0
163,7,3,0
186,7,2,0
186,7,2,0
1212,6,-14,0
1190,6,-1,0
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
1190,6,-7,0
1190,6,-8,0
1190,6,-9,0
1185,2420,0,0
163,7,10,0
1190,6,-13,0
1190,6,-14,0
1193,6,-12,0
1193,6,-11,0
163,7,2,0
1197,7,0,0
1212,6,-13,0
1190,6,-11,0
1185,312,0,0
163,7,2,0
1194,7,0,0
48,4,1,0
65,5,6,3
1190,6,-12,0
1193,5,0,0
1181,2906,0,0
163,7,2,0
1194,7,0,0
163,7,9,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1197,7,0,0
1212,6,-1,0
1187,4,0,0
1185,2808,0,0
163,7,2,0
65,2,6,-1
1194,7,0,0
48,8,1,0
*/
jmp("begin")
label("func_g_ptr_addr()")  //1
push(ebp)
mov(ebp,esp)
mov(eax,64)
add(eax,7)
mov(ebx,1024)
mul(ebx,eax)
mov(edx,ptr[ebp+2])
mov(ptr[edx+0],ebx)
jmp("func_g_ptr_addr()::ret")
label("func_g_ptr_addr()::ret")  //11
mov(esp,ebp)
pop(ebp)
ret()
label("func_alloc(int)")  //15
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-2])
call("func_g_ptr_addr()")
add(esp,1)
mov(eax,ptr[ebp-2])
mov(ptr[ebp-1],eax)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ebp-1])
call("func_get_int(int)")
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
not(eax,ptr[ebp-2])
jz("if_1000::end",eax)
dec(esp)
mov(eax,1024)
mul(eax,128)
mov(ptr[ebp-3],eax)
mov(ebx,ptr[ebp-3])
mov(ptr[ebp-2],ebx)
inc(esp)
jmp("if_1000::end")
label("if_1000::end")  //45
dec(esp)
dec(esp)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp+2])
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-3])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_alloc(int)::ret")
inc(esp)
inc(esp)
label("func_alloc(int)::ret")  //64
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i::mag()")  //68
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ecx+1])
call("func_hypot(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vec2i::mag()::ret")
inc(esp)
inc(esp)
label("func_vec2i::mag()::ret")  //86
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i::`ctor()")  //90
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
inc(esp)
label("func_vec2i::`ctor()::ret")  //98
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i(int,int)")  //102
push(ebp)
mov(ebp,esp)
sub(esp,2)
lea(ecx,ptr[ebp-2])
call("func_vec2i::`ctor()")
mov(ebx,ptr[ebp+3])
mov(ptr[ebp-2],ebx)
mov(ebx,ptr[ebp+2])
mov(ptr[ebp-1],ebx)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
push(ptr[ebp-2])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_vec2i(int,int)::ret")
add(esp,2)
label("func_vec2i(int,int)::ret")  //119
mov(esp,ebp)
pop(ebp)
ret()
label("func_add(int,int)")  //123
push(ebp)
mov(ebp,esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_set_int(int,int)")
add(esp,3)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_add(int,int)::ret")
inc(esp)
label("func_add(int,int)::ret")  //137
mov(esp,ebp)
pop(ebp)
ret()
label("func_hypot(vec2i)")  //141
push(ebp)
mov(ebp,esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+2])
push(ptr[ebp+3])
call("func_hypot(int,int)")
add(esp,3)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_hypot(vec2i)::ret")
inc(esp)
label("func_hypot(vec2i)::ret")  //155
mov(esp,ebp)
pop(ebp)
ret()
label("func_sub(vec2i,vec2i)")  //159
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp+3])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+6])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_sub(vec2i,vec2i)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_sub(vec2i,vec2i)::ret")  //185
mov(esp,ebp)
pop(ebp)
ret()
label("func_add(vec2i,vec2i)")  //189
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp+3])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+6])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_add(vec2i,vec2i)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_add(vec2i,vec2i)::ret")  //215
mov(esp,ebp)
pop(ebp)
ret()
label("func_mul(vec2i,int)")  //219
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+3])
mul(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+4])
mul(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_mul(vec2i,int)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_mul(vec2i,int)::ret")  //245
mov(esp,ebp)
pop(ebp)
ret()
label("func_div(vec2i,int)")  //249
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+3])
div(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+4])
div(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_div(vec2i,int)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_div(vec2i,int)::ret")  //275
mov(esp,ebp)
pop(ebp)
ret()
label("func_get_int(int)")  //279
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],0)
mov(eax,ptr[ebp+2])
mov(ptr[ebp-1],ptr[eax])
mov(edx,ptr[ebp+3])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_get_int(int)::ret")
inc(esp)
label("func_get_int(int)::ret")  //291
mov(esp,ebp)
pop(ebp)
ret()
label("func_set_int(int,int)")  //295
push(ebp)
mov(ebp,esp)
push(ebx)
mov(eax,ptr[ebp+3])
mov(ebx,ptr[ebp+2])
mov(ptr[eax],ebx)
pop(ebx)
mov(eax,ptr[ebp+3])
add(eax,1)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],eax)
jmp("func_set_int(int,int)::ret")
label("func_set_int(int,int)::ret")  //308
mov(esp,ebp)
pop(ebp)
ret()
label("func_setebx(int)")  //312
push(ebp)
mov(ebp,esp)
mov(ebx,ptr[ebp+2])
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],0)
jmp("func_setebx(int)::ret")
label("func_setebx(int)::ret")  //319
mov(esp,ebp)
pop(ebp)
ret()
label("func_hypot(int,int)")  //323
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],0)
mov(eax,ptr[ebp+3])
mov(ebx,ptr[ebp+2])
hypot(eax,ebx)
mov(ptr[ebp-1],eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_hypot(int,int)::ret")
inc(esp)
label("func_hypot(int,int)::ret")  //337
mov(esp,ebp)
pop(ebp)
ret()
label("func_QapAssert(int)")  //341
push(ebp)
mov(ebp,esp)
not(eax,ptr[ebp+2])
jz("if_1001::end",eax)
label("Run-time error!")  //346
mov(err,-1)
jmp("if_1001::end")
label("if_1001::end")  //349
label("func_QapAssert(int)::ret")  //350
mov(esp,ebp)
pop(ebp)
ret()
label("func_min(int,int)")  //354
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
less(eax,ptr[ebp+2])
jz("if_1002::end",eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp+3])
pop(ptr[edx+0])
jmp("func_min(int,int)::ret")
jmp("if_1002::end")
label("if_1002::end")  //365
mov(edx,ptr[ebp+4])
push(ptr[ebp+2])
pop(ptr[edx+0])
jmp("func_min(int,int)::ret")
label("func_min(int,int)::ret")  //370
mov(esp,ebp)
pop(ebp)
ret()
label("func_max(int,int)")  //374
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
more(eax,ptr[ebp+2])
jz("if_1003::end",eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp+3])
pop(ptr[edx+0])
jmp("func_max(int,int)::ret")
jmp("if_1003::end")
label("if_1003::end")  //385
mov(edx,ptr[ebp+4])
push(ptr[ebp+2])
pop(ptr[edx+0])
jmp("func_max(int,int)::ret")
label("func_max(int,int)::ret")  //390
mov(esp,ebp)
pop(ebp)
ret()
label("func_clamp(int,int,int)")  //394
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+4])
push(ptr[ebp+2])
call("func_max(int,int)")
add(esp,3)
pushlea(ptr[ebp-2])
push(ptr[ebp-1])
push(ptr[ebp+3])
call("func_min(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_clamp(int,int,int)::ret")
inc(esp)
inc(esp)
label("func_clamp(int,int,int)::ret")  //415
mov(esp,ebp)
pop(ebp)
ret()
label("func_qap_vertex::`ctor()")  //419
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
lea(ecx,ptr[ecx+1])
call("func_vec2i::`ctor()")
mov(ecx,ptr[ebp-1])
inc(esp)
label("func_qap_vertex::`ctor()::ret")  //429
mov(esp,ebp)
pop(ebp)
ret()
label("func_qap_vertex(int,vec2i)")  //433
push(ebp)
mov(ebp,esp)
sub(esp,3)
lea(ecx,ptr[ebp-3])
call("func_qap_vertex::`ctor()")
mov(ebx,ptr[ebp+4])
mov(ptr[ebp-3],ebx)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
mov(edx,ptr[ebp+5])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_qap_vertex(int,vec2i)::ret")
add(esp,3)
label("func_qap_vertex(int,vec2i)::ret")  //454
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::reserve(int)")  //458
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,3)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_alloc(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(ebx,ptr[ebp-3])
mov(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
mov(ptr[ecx+1],0)
mov(ebx,ptr[ebp+2])
mov(ptr[ecx+2],ebx)
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],0)
jmp("func_vector_qap_vertex::reserve(int)::ret")
inc(esp)
label("func_vector_qap_vertex::reserve(int)::ret")  //484
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::sys_add(int)")  //488
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::sys_add(int)::ret")
inc(esp)
label("func_vector_qap_vertex::sys_add(int)::ret")  //508
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::sys_add(vec2i)")  //512
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+4])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::sys_add(vec2i)::ret")
inc(esp)
label("func_vector_qap_vertex::sys_add(vec2i)::ret")  //538
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add(int,vec2i)")  //542
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
less(eax,ptr[ecx+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::add(int,vec2i)::ret")
inc(esp)
label("func_vector_qap_vertex::add(int,vec2i)::ret")  //582
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add(qap_vertex)")  //586
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
less(eax,ptr[ecx+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::add(qap_vertex)::ret")
inc(esp)
label("func_vector_qap_vertex::add(qap_vertex)::ret")  //626
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::get_vec2i(int)")  //630
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
dec(esp)
sub(esp,2)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp+2])
add(eax,1)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-6])
push(ptr[ebp-2])
push(ptr[ebp-4])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+3])
push(ptr[ebp-5])
push(ptr[ebp-6])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_vector_qap_vertex::get_vec2i(int)::ret")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::get_vec2i(int)::ret")  //669
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::get(int)")  //673
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
sub(esp,2)
sub(esp,3)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp+2])
add(eax,1)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::get_vec2i(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-8])
push(ptr[ebp-2])
push(ptr[ebp-4])
push(ptr[ebp-5])
call("func_qap_vertex(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
mov(edx,ptr[ebp+3])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::get(int)::ret")
add(esp,3)
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::get(int)::ret")  //716
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::at(int)")  //720
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
sub(esp,3)
mov(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mul(eax,3)
mov(ebx,ptr[ecx+0])
add(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::get(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::at(int)::ret")
add(esp,3)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::at(int)::ret")  //750
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::`ctor()")  //754
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
mov(ptr[ecx+2],0)
inc(esp)
label("func_vector_qap_vertex::`ctor()::ret")  //763
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::reserve(int)")  //767
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,1)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_alloc(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(ebx,ptr[ebp-3])
mov(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
mov(ptr[ecx+1],0)
mov(ebx,ptr[ebp+2])
mov(ptr[ecx+2],ebx)
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],0)
jmp("func_vector_int::reserve(int)::ret")
inc(esp)
label("func_vector_int::reserve(int)::ret")  //793
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::add(int)")  //797
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
less(eax,ptr[ecx+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_int::add(int)::ret")
inc(esp)
label("func_vector_int::add(int)::ret")  //830
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::get(int)")  //834
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vector_int::get(int)::ret")
inc(esp)
inc(esp)
label("func_vector_int::get(int)::ret")  //851
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::at(int)")  //855
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+0])
add(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_int::get(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-3])
pop(ptr[edx+0])
jmp("func_vector_int::at(int)::ret")
inc(esp)
inc(esp)
inc(esp)
label("func_vector_int::at(int)::ret")  //879
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::front()")  //883
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(0)
mov(ecx,ptr[ebp-1])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vector_int::front()::ret")
inc(esp)
inc(esp)
label("func_vector_int::front()::ret")  //913
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::back()")  //917
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
sub(eax,1)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-3])
pop(ptr[edx+0])
jmp("func_vector_int::back()::ret")
inc(esp)
inc(esp)
inc(esp)
label("func_vector_int::back()::ret")  //952
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::`ctor()")  //956
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
mov(ptr[ecx+2],0)
inc(esp)
label("func_vector_int::`ctor()::ret")  //965
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddTris(int,int,int)")  //969
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddTris(int,int,int)::ret")
inc(esp)
label("func_t_out_dev::AddTris(int,int,int)::ret")  //1002
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(qap_vertex)")  //1006
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+5])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(qap_vertex)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(qap_vertex)::ret")  //1025
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(int,int)")  //1029
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-4])
push(ptr[ecx+6])
push(ptr[ebp-2])
push(ptr[ebp-3])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(int,int)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(int,int)::ret")  //1056
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(vec2i)")  //1060
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+6])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(vec2i)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(vec2i)::ret")  //1079
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertexAndRetVID(vec2i)")  //1083
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+6])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(eax,ptr[ecx+1])
sub(eax,1)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],eax)
jmp("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret")
inc(esp)
label("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret")  //1104
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add(t_out_dev)")  //1108
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+6])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8000::condition")
label("for_8000::continue")  //1133
inc(ptr[ebp-3])
label("for_8000::condition")  //1135
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+3])
jz("for_8000::break",eax)
sub(esp,3)
dec(esp)
pushlea(ptr[ebp-6])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+2])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-7])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8000::continue")
label("for_8000::break")  //1158
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8001::condition")
label("for_8001::continue")  //1163
inc(ptr[ebp-3])
label("for_8001::condition")  //1165
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+6])
jz("for_8001::break",eax)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-4])
mov(ptr[ebp-5],eax)
pushlea(ptr[ebp-6])
push(ptr[ebp-5])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
jmp("for_8001::continue")
label("for_8001::break")  //1191
inc(esp)
mov(edx,ptr[ebp+9])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add(t_out_dev)::ret")
inc(esp)
inc(esp)
label("func_t_out_dev::add(t_out_dev)::ret")  //1198
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")  //1202
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
mov(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
dec(esp)
dec(esp)
mov(eax,1024)
mul(eax,16)
mov(ebx,ptr[ebp-2])
less(ebx,eax)
mov(ptr[ebp-3],ebx)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8002::condition")
label("for_8002::continue")  //1227
inc(ptr[ebp-3])
label("for_8002::condition")  //1229
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+5])
jz("for_8002::break",eax)
sub(esp,3)
sub(esp,3)
pushlea(ptr[ebp-9])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+4])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,3)
sub(esp,2)
pushlea(ptr[ebp-8])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp+3])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-7])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
mov(ecx,ptr[ebp-1])
call("func_t_out_dev::AddVertex(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8002::continue")
label("for_8002::break")  //1275
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+8])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-3],ebx)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8003::condition")
label("for_8003::continue")  //1294
inc(ptr[ebp-3])
label("for_8003::condition")  //1296
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+8])
jz("for_8003::break",eax)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+7])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-4])
mov(ptr[ebp-5],eax)
pushlea(ptr[ebp-6])
push(ptr[ebp-5])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
jmp("for_8003::continue")
label("for_8003::break")  //1322
inc(esp)
mov(edx,ptr[ebp+11])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret")
inc(esp)
inc(esp)
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret")  //1329
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::GenGeomQuad(int,int,int,int)")  //1333
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,7)
sub(esp,7)
pushlea(ptr[ebp-15])
push(1)
call("func_new_geom(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-15])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
pop(ptr[ebp-2])
add(esp,7)
mov(ebx,ptr[ecx+6])
mov(ptr[ebp-2],ebx)
dec(esp)
mov(eax,ptr[ebp+3])
div(eax,2)
mov(ptr[ebp-9],eax)
dec(esp)
mov(eax,ptr[ebp+2])
div(eax,2)
mov(ptr[ebp-10],eax)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-11])
push(1)
push(0)
push(3)
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddTris(int,int,int)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
dec(esp)
pushlea(ptr[ebp-11])
push(3)
push(2)
push(1)
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddTris(int,int,int)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+6])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
pop(ptr[edx+5])
pop(ptr[edx+6])
jmp("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret")
inc(esp)
inc(esp)
add(esp,7)
inc(esp)
label("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret")  //1486
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::`ctor()")  //1490
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::`ctor()")
mov(ecx,ptr[ebp-1])
lea(ecx,ptr[ecx+3])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
mov(ptr[ecx+6],0)
inc(esp)
label("func_t_out_dev::`ctor()::ret")  //1503
mov(esp,ebp)
pop(ebp)
ret()
label("func_new_geom(int)")  //1507
push(ebp)
mov(ebp,esp)
sub(esp,7)
lea(ecx,ptr[ebp-7])
call("func_t_out_dev::`ctor()")
dec(esp)
dec(esp)
mov(eax,4)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-9])
push(ptr[ebp-8])
lea(ecx,ptr[ebp-7])
call("func_vector_qap_vertex::reserve(int)")
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,6)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-9])
push(ptr[ebp-8])
lea(ecx,ptr[ebp-4])
call("func_vector_int::reserve(int)")
add(esp,2)
inc(esp)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
pop(ptr[edx+5])
pop(ptr[edx+6])
jmp("func_new_geom(int)::ret")
add(esp,7)
label("func_new_geom(int)::ret")  //1554
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_input::`ctor()")  //1558
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
lea(ecx,ptr[ecx+0])
call("func_vec2i::`ctor()")
mov(ecx,ptr[ebp-1])
mov(ptr[ecx+2],0)
lea(ecx,ptr[ecx+3])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
lea(ecx,ptr[ecx+6])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
inc(esp)
label("func_t_input::`ctor()::ret")  //1574
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_int()")  //1578
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ecx+0])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
inc(ptr[ecx+0])
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_t_dev::read_int()::ret")
inc(esp)
inc(esp)
label("func_t_dev::read_int()::ret")  //1600
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_vec2i()")  //1604
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
sub(esp,2)
pushlea(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
pushlea(ptr[ebp-3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
push(ptr[ebp-3])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+2])
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_t_dev::read_vec2i()::ret")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
label("func_t_dev::read_vec2i()::ret")  //1638
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_vector_int()")  //1642
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,3)
lea(ecx,ptr[ebp-4])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
dec(esp)
pushlea(ptr[ebp-5])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
mov(ebx,ptr[ebp-5])
mov(ptr[ebp-3],ebx)
inc(esp)
mov(ebx,ptr[ebp-3])
add(ptr[ecx+0],ebx)
mov(ebx,ptr[ecx+0])
mov(ptr[ebp-4],ebx)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_t_dev::read_vector_int()::ret")
add(esp,3)
inc(esp)
label("func_t_dev::read_vector_int()::ret")  //1674
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int)")  //1678
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int)::ret")
inc(esp)
label("func_t_dev::write(int)::ret")  //1698
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int,int,int)")  //1702
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int,int,int)::ret")
inc(esp)
label("func_t_dev::write(int,int,int)::ret")  //1736
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(vec2i)")  //1740
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+4])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(vec2i)::ret")
inc(esp)
label("func_t_dev::write(vec2i)::ret")  //1766
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int,vec2i)")  //1770
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int,vec2i)::ret")
inc(esp)
label("func_t_dev::write(int,vec2i)::ret")  //1804
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(qap_vertex)")  //1808
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(qap_vertex)::ret")
inc(esp)
label("func_t_dev::write(qap_vertex)::ret")  //1835
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(t_out_dev)")  //1839
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-2],0)
jmp("for_8004::condition")
label("for_8004::continue")  //1855
inc(ptr[ebp-2])
label("for_8004::condition")  //1857
mov(eax,ptr[ebp-2])
less(eax,ptr[ebp+3])
jz("for_8004::break",eax)
sub(esp,3)
dec(esp)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
lea(ecx,ptr[ebp+2])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-6])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8004::continue")
label("for_8004::break")  //1880
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+6])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-2],0)
jmp("for_8005::condition")
label("for_8005::continue")  //1893
inc(ptr[ebp-2])
label("for_8005::condition")  //1895
mov(eax,ptr[ebp-2])
less(eax,ptr[ebp+6])
jz("for_8005::break",eax)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
jmp("for_8005::continue")
label("for_8005::break")  //1916
inc(esp)
inc(esp)
label("func_t_dev::write(t_out_dev)::ret")  //1919
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write_def(vec2i)")  //1923
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(6)
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(eax,8)
mul(eax,3)
mov(ebx,255)
shl(ebx,eax)
mov(ptr[ebp-2],ebx)
dec(esp)
inv(eax,1)
mov(ptr[ebp-3],eax)
dec(esp)
mov(eax,8)
mul(eax,2)
mov(ebx,255)
shl(ebx,eax)
mov(eax,ptr[ebp-2])
add(eax,ebx)
mov(ptr[ebp-4],eax)
dec(esp)
mov(eax,8)
mul(eax,1)
mov(ebx,255)
shl(ebx,eax)
mov(eax,ptr[ebp-2])
add(eax,ebx)
mov(ptr[ebp-5],eax)
dec(esp)
mov(eax,8)
mul(eax,0)
mov(ebx,255)
shl(ebx,eax)
mov(eax,ptr[ebp-2])
add(eax,ebx)
mov(ptr[ebp-6],eax)
dec(esp)
mov(eax,ptr[ebp-2])
mov(ptr[ebp-7],eax)
dec(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
inv(eax,30)
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-10])
push(ptr[ebp-8])
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-12])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-9])
push(ptr[ebp-10])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-13])
push(ptr[ebp-7])
push(ptr[ebp-11])
push(ptr[ebp-12])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
inc(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-9])
push(0)
push(30)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-11])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-8])
push(ptr[ebp-9])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-12])
push(ptr[ebp-7])
push(ptr[ebp-10])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-9])
push(30)
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-11])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-8])
push(ptr[ebp-9])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-12])
push(ptr[ebp-7])
push(ptr[ebp-10])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
add(ptr[ebp-9],60)
dec(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
inv(eax,30)
mov(ptr[ebp-10],eax)
pushlea(ptr[ebp-12])
push(ptr[ebp-10])
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-14])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-11])
push(ptr[ebp-12])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-15])
push(ptr[ebp-7])
push(ptr[ebp-13])
push(ptr[ebp-14])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
inc(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
push(0)
push(30)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-13])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-14])
push(ptr[ebp-7])
push(ptr[ebp-12])
push(ptr[ebp-13])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
push(30)
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-13])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-14])
push(ptr[ebp-5])
push(ptr[ebp-12])
push(ptr[ebp-13])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
dec(esp)
mov(eax,2)
mul(eax,3)
mov(ptr[ebp-10],eax)
dec(esp)
pushlea(ptr[ebp-11])
push(ptr[ebp-10])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-11],0)
jmp("for_8006::condition")
label("for_8006::continue")  //2169
inc(ptr[ebp-11])
label("for_8006::condition")  //2171
mov(eax,ptr[ebp-11])
less(eax,ptr[ebp-10])
jz("for_8006::break",eax)
dec(esp)
pushlea(ptr[ebp-12])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
jmp("for_8006::continue")
label("for_8006::break")  //2184
inc(esp)
inc(esp)
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
label("func_t_dev::write_def(vec2i)::ret")  //2195
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::`ctor()")  //2199
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
inc(esp)
label("func_t_dev::`ctor()::ret")  //2206
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_mem::`ctor()")  //2210
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
inc(esp)
label("func_t_mem::`ctor()::ret")  //2218
mov(esp,ebp)
pop(ebp)
ret()
label("func_g_obj_addr()")  //2222
push(ebp)
mov(ebp,esp)
mov(eax,64)
add(eax,7)
mov(ebx,1024)
mul(ebx,eax)
add(ebx,512)
mov(edx,ptr[ebp+2])
mov(ptr[edx+0],ebx)
jmp("func_g_obj_addr()::ret")
label("func_g_obj_addr()::ret")  //2233
mov(esp,ebp)
pop(ebp)
ret()
label("func_get_obj_pos(t_input)")  //2237
push(ebp)
mov(ebp,esp)
sub(esp,2)
dec(esp)
sub(esp,2)
inv(eax,200)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-3])
push(30)
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
call("func_g_obj_addr()")
add(esp,1)
mov(eax,ptr[ebp-4])
mov(ptr[ebp-3],eax)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,2)
mov(ptr[ebp-4],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-4])
call("func_get_int(int)")
add(esp,2)
jz("if_1004::else",ptr[ebp-5])
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,0)
mov(ptr[ebp-6],eax)
pushlea(ptr[ebp-7])
push(ptr[ebp-6])
call("func_get_int(int)")
add(esp,2)
mov(ebx,ptr[ebp-7])
mov(ptr[ebp-2],ebx)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,1)
mov(ptr[ebp-6],eax)
pushlea(ptr[ebp-7])
push(ptr[ebp-6])
call("func_get_int(int)")
add(esp,2)
mov(ebx,ptr[ebp-7])
mov(ptr[ebp-1],ebx)
inc(esp)
inc(esp)
jmp("if_1004::end")
label("if_1004::else")  //2301
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,2)
mov(ptr[ebp-6],eax)
pushlea(ptr[ebp-7])
push(ptr[ebp-6])
push(1)
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
label("if_1004::end")  //2314
inc(esp)
inc(esp)
dec(esp)
mov(ptr[ebp-4],0)
dec(esp)
mov(ptr[ebp-5],0)
dec(esp)
mov(ptr[ebp-6],0)
dec(esp)
mov(ptr[ebp-7],0)
mov(ptr[ebp-4],37)
mov(ptr[ebp-5],39)
mov(ptr[ebp-6],38)
mov(ptr[ebp-7],40)
dec(esp)
mov(ptr[ebp-8],2)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-4])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1005::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
sub(ptr[ebp-2],ebx)
jmp("if_1005::end")
label("if_1005::end")  //2341
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-5])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1006::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
add(ptr[ebp-2],ebx)
jmp("if_1006::end")
label("if_1006::end")  //2353
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-6])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1007::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
add(ptr[ebp-1],ebx)
jmp("if_1007::end")
label("if_1007::end")  //2365
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-7])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1008::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
sub(ptr[ebp-1],ebx)
jmp("if_1008::end")
label("if_1008::end")  //2377
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,0)
mov(ptr[ebp-9],eax)
pushlea(ptr[ebp-10])
push(ptr[ebp-9])
push(ptr[ebp-2])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,1)
mov(ptr[ebp-9],eax)
pushlea(ptr[ebp-10])
push(ptr[ebp-9])
push(ptr[ebp-1])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
mov(edx,ptr[ebp+11])
push(ptr[ebp-1])
push(ptr[ebp-2])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_get_obj_pos(t_input)::ret")
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
add(esp,2)
label("func_get_obj_pos(t_input)::ret")  //2416
mov(esp,ebp)
pop(ebp)
ret()
label("func_cr_test(t_input)")  //2420
push(ebp)
mov(ebp,esp)
sub(esp,2)
sub(esp,2)
pushlea(ptr[ebp-4])
push(ptr[ebp+10])
push(ptr[ebp+9])
push(ptr[ebp+8])
push(ptr[ebp+7])
push(ptr[ebp+6])
push(ptr[ebp+5])
push(ptr[ebp+4])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_get_obj_pos(t_input)")
add(esp,10)
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,2)
dec(esp)
mov(eax,64)
add(eax,8)
mov(ebx,1024)
mul(ebx,eax)
mov(ptr[ebp-3],ebx)
dec(esp)
lea(ecx,ptr[ebp-4])
call("func_t_dev::`ctor()")
mov(ebx,ptr[ebp-3])
mov(ptr[ebp-4],ebx)
sub(esp,2)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
sub(esp,7)
sub(esp,7)
pushlea(ptr[ebp-20])
push(1024)
call("func_new_geom(int)")
add(esp,2)
push(ptr[ebp-14])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-20])
pop(ptr[ebp-13])
pop(ptr[ebp-12])
pop(ptr[ebp-11])
pop(ptr[ebp-10])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
add(esp,7)
mov(eax,255)
shl(eax,24)
push(eax)
mov(eax,128)
shl(eax,8)
pop(ebx)
add(ebx,eax)
mov(ptr[ebp-7],ebx)
jz("if_1009::else",1)
sub(esp,7)
sub(esp,7)
pushlea(ptr[ebp-27])
push(ptr[ebp-6])
push(ptr[ebp-5])
push(30)
push(30)
lea(ecx,ptr[ebp-13])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-21])
push(ptr[ebp-22])
push(ptr[ebp-23])
push(ptr[ebp-24])
push(ptr[ebp-25])
push(ptr[ebp-26])
push(ptr[ebp-27])
pop(ptr[ebp-20])
pop(ptr[ebp-19])
pop(ptr[ebp-18])
pop(ptr[ebp-17])
pop(ptr[ebp-16])
pop(ptr[ebp-15])
pop(ptr[ebp-14])
add(esp,7)
mov(eax,255)
shl(eax,24)
push(eax)
mov(eax,128)
shl(eax,8)
pop(ebx)
add(ebx,eax)
push(ebx)
mov(eax,255)
shl(eax,16)
pop(ebx)
add(ebx,eax)
mov(ptr[ebp-7],ebx)
sub(esp,7)
dec(esp)
sub(esp,7)
mov(eax,ptr[ebp-5])
sub(eax,64)
mov(ptr[ebp-28],eax)
pushlea(ptr[ebp-35])
push(ptr[ebp-6])
push(ptr[ebp-28])
push(100)
push(10)
lea(ecx,ptr[ebp-13])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-29])
push(ptr[ebp-30])
push(ptr[ebp-31])
push(ptr[ebp-32])
push(ptr[ebp-33])
push(ptr[ebp-34])
push(ptr[ebp-35])
pop(ptr[ebp-27])
pop(ptr[ebp-26])
pop(ptr[ebp-25])
pop(ptr[ebp-24])
pop(ptr[ebp-23])
pop(ptr[ebp-22])
pop(ptr[ebp-21])
add(esp,7)
inc(esp)
sub(esp,7)
dec(esp)
sub(esp,7)
mov(eax,200)
add(eax,ptr[ebp-6])
mov(ptr[ebp-35],eax)
pushlea(ptr[ebp-42])
push(ptr[ebp-35])
push(ptr[ebp-5])
push(10)
push(60)
lea(ecx,ptr[ebp-13])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-36])
push(ptr[ebp-37])
push(ptr[ebp-38])
push(ptr[ebp-39])
push(ptr[ebp-40])
push(ptr[ebp-41])
push(ptr[ebp-42])
pop(ptr[ebp-34])
pop(ptr[ebp-33])
pop(ptr[ebp-32])
pop(ptr[ebp-31])
pop(ptr[ebp-30])
pop(ptr[ebp-29])
pop(ptr[ebp-28])
add(esp,7)
inc(esp)
sub(esp,2)
sub(esp,2)
pushlea(ptr[ebp-38])
push(0)
push(0)
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-37])
push(ptr[ebp-38])
pop(ptr[ebp-36])
pop(ptr[ebp-35])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-37])
push(ptr[ebp-14])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-20])
push(ptr[ebp-35])
push(ptr[ebp-36])
lea(ecx,ptr[ebp-13])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
dec(esp)
pushlea(ptr[ebp-37])
push(ptr[ebp-21])
push(ptr[ebp-22])
push(ptr[ebp-23])
push(ptr[ebp-24])
push(ptr[ebp-25])
push(ptr[ebp-26])
push(ptr[ebp-27])
push(ptr[ebp-35])
push(ptr[ebp-36])
lea(ecx,ptr[ebp-13])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
dec(esp)
pushlea(ptr[ebp-37])
push(ptr[ebp-28])
push(ptr[ebp-29])
push(ptr[ebp-30])
push(ptr[ebp-31])
push(ptr[ebp-32])
push(ptr[ebp-33])
push(ptr[ebp-34])
push(ptr[ebp-35])
push(ptr[ebp-36])
lea(ecx,ptr[ebp-13])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
jz("if_1010::end",1)
dec(esp)
mov(ptr[ebp-37],0)
jmp("for_8007::condition")
label("for_8007::continue")  //2647
inc(ptr[ebp-37])
label("for_8007::condition")  //2649
mov(eax,ptr[ebp-37])
less(eax,16)
jz("for_8007::break",eax)
push(eax)
mov(eax,255)
shl(eax,24)
push(eax)
mov(eax,ptr[ebp-37])
mul(eax,7)
mov(ebx,128)
add(ebx,eax)
shl(ebx,8)
pop(eax)
add(eax,ebx)
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-7],ebx)
dec(esp)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-6])
push(eax)
mov(eax,16)
mul(eax,ptr[ebp-37])
pop(ebx)
add(ebx,eax)
mov(ptr[ebp-38],ebx)
dec(esp)
mov(ptr[ebp-39],0)
jmp("for_8008::condition")
label("for_8008::continue")  //2679
inc(ptr[ebp-39])
label("for_8008::condition")  //2681
mov(eax,ptr[ebp-39])
less(eax,8)
jz("for_8008::break",eax)
dec(esp)
sub(esp,7)
dec(esp)
mov(eax,16)
mul(eax,ptr[ebp-39])
mov(ebx,ptr[ebp-1])
add(ebx,eax)
mov(ptr[ebp-40],ebx)
pushlea(ptr[ebp-47])
push(ptr[ebp-38])
push(ptr[ebp-40])
push(10)
push(10)
lea(ecx,ptr[ebp-13])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
pushlea(ptr[ebp-48])
push(ptr[ebp-41])
push(ptr[ebp-42])
push(ptr[ebp-43])
push(ptr[ebp-44])
push(ptr[ebp-45])
push(ptr[ebp-46])
push(ptr[ebp-47])
lea(ecx,ptr[ebp-13])
call("func_t_out_dev::add(t_out_dev)")
add(esp,8)
inc(esp)
add(esp,7)
inc(esp)
jmp("for_8008::continue")
label("for_8008::break")  //2716
inc(esp)
jmp("for_8007::continue")
inc(esp)
label("for_8007::break")  //2720
inc(esp)
jmp("if_1010::end")
label("if_1010::end")  //2723
dec(esp)
pushlea(ptr[ebp-37])
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
lea(ecx,ptr[ebp-4])
call("func_t_dev::write(t_out_dev)")
add(esp,8)
inc(esp)
add(esp,2)
add(esp,7)
add(esp,7)
add(esp,7)
jmp("if_1009::end")
label("if_1009::else")  //2742
sub(esp,7)
pushlea(ptr[ebp-20])
push(ptr[ebp-6])
push(ptr[ebp-5])
push(30)
push(30)
lea(ecx,ptr[ebp-13])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-14])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-20])
pop(ptr[ebp-13])
pop(ptr[ebp-12])
pop(ptr[ebp-11])
pop(ptr[ebp-10])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
add(esp,7)
dec(esp)
pushlea(ptr[ebp-14])
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
lea(ecx,ptr[ebp-4])
call("func_t_dev::write(t_out_dev)")
add(esp,8)
inc(esp)
label("if_1009::end")  //2780
sub(esp,2)
lea(ecx,ptr[ebp-15])
call("func_t_mem::`ctor()")
mov(ebx,ptr[ebp-3])
mov(ptr[ebp-15],ebx)
push(eax)
mov(eax,ptr[ebp-4])
sub(eax,ptr[ebp-15])
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-14],ebx)
mov(edx,ptr[ebp+11])
push(ptr[ebp-14])
push(ptr[ebp-15])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_cr_test(t_input)::ret")
add(esp,2)
add(esp,7)
add(esp,2)
inc(esp)
inc(esp)
add(esp,2)
label("func_cr_test(t_input)::ret")  //2804
mov(esp,ebp)
pop(ebp)
ret()
label("func_main(int)")  //2808
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-1])
call("func_g_ptr_addr()")
add(esp,1)
pushlea(ptr[ebp-2])
push(ptr[ebp-1])
push(0)
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
sub(esp,9)
lea(ecx,ptr[ebp-9])
call("func_t_input::`ctor()")
dec(esp)
lea(ecx,ptr[ebp-10])
call("func_t_dev::`ctor()")
mov(ebx,ptr[ebp+2])
mov(ptr[ebp-10],ebx)
sub(esp,2)
pushlea(ptr[ebp-12])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_vec2i()")
add(esp,1)
push(ptr[ebp-11])
push(ptr[ebp-12])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_int()")
add(esp,1)
mov(ebx,ptr[ebp-11])
mov(ptr[ebp-7],ebx)
inc(esp)
sub(esp,3)
pushlea(ptr[ebp-13])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_vector_int()")
add(esp,1)
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,3)
sub(esp,3)
pushlea(ptr[ebp-13])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_vector_int()")
add(esp,1)
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
pop(ptr[ebp-3])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,3)
sub(esp,2)
sub(esp,2)
pushlea(ptr[ebp-14])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
call("func_cr_test(t_input)")
add(esp,10)
push(ptr[ebp-13])
push(ptr[ebp-14])
pop(ptr[ebp-12])
pop(ptr[ebp-11])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
call("func_setebx(int)")
add(esp,2)
inc(esp)
mov(ecx,1)
mov(edx,ptr[ebp+3])
push(ptr[ebp-12])
pop(ptr[edx+0])
jmp("func_main(int)::ret")
add(esp,2)
inc(esp)
add(esp,9)
label("func_main(int)::ret")  //2906
mov(esp,ebp)
pop(ebp)
ret()
label("begin")  //2910
dec(esp)
pushlea(ptr[ebp-1])
push(ecx)
call("func_main(int)")
add(esp,2)
mov(eax,ptr[ebp-1])
inc(esp)
mov(err,1)