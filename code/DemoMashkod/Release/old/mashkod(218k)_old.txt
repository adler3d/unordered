/*
1181,4205,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
48,0,64,0
163,0,7,0
48,1,1024,0
207,1,0,0
65,3,4,2
61,3,0,1
1181,11,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
48,0,64,0
163,0,7,0
48,1,1024,0
207,1,0,0
163,1,8,0
65,3,4,2
61,3,0,1
1181,26,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
1197,5,0,0
1216,4,-2,0
1185,1,0,0
163,5,1,0
65,0,4,-2
61,4,-1,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
1216,4,-3,0
1190,4,-1,0
1185,296,0,0
163,5,2,0
65,0,4,-3
61,4,-2,0
1194,5,0,0
88,0,4,-2
6,62,0,0
1197,5,0,0
48,0,64,0
163,0,8,0
48,1,1024,0
207,1,0,0
61,4,-3,1
65,1,4,-3
61,4,-2,1
1194,5,0,0
1181,62,0,0
1208,0,0,0
1197,5,0,0
1197,5,0,0
65,0,4,-2
180,0,4,2
61,4,-3,0
1216,4,-4,0
1190,4,-1,0
1190,4,-3,0
1185,312,0,0
163,5,3,0
1194,5,0,0
1194,5,0,0
65,3,4,3
1190,4,-2,0
1193,3,0,0
1181,81,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,2,0,0
1190,2,1,0
1185,337,0,0
65,2,4,-1
163,5,3,0
65,3,4,2
1190,4,-2,0
1193,3,0,0
1181,103,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
63,2,0,0
63,2,1,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
186,5,2,0
1215,2,4,-2
1185,107,0,0
65,1,4,3
61,4,-2,1
65,1,4,2
61,4,-1,1
65,3,4,4
1190,4,-1,0
1190,4,-2,0
1193,3,0,0
1193,3,1,0
1181,136,0,0
163,5,2,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
1216,4,-1,0
1190,4,3,0
1190,4,2,0
1185,312,0,0
163,5,3,0
65,3,4,4
1190,4,-1,0
1193,3,0,0
1181,154,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
1216,4,-1,0
1190,4,2,0
1190,4,3,0
1185,337,0,0
163,5,3,0
65,3,4,4
1190,4,-1,0
1193,3,0,0
1181,172,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
1197,5,0,0
186,5,2,0
65,0,4,4
203,0,4,2
61,4,-1,0
65,0,4,5
203,0,4,3
61,4,-2,0
1216,4,-4,0
1190,4,-1,0
1190,4,-2,0
1185,119,0,0
163,5,3,0
65,3,4,6
1190,4,-3,0
1190,4,-4,0
1193,3,0,0
1193,3,1,0
1181,202,0,0
163,5,2,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
1197,5,0,0
186,5,2,0
65,0,4,4
180,0,4,2
61,4,-1,0
65,0,4,5
180,0,4,3
61,4,-2,0
1216,4,-4,0
1190,4,-1,0
1190,4,-2,0
1185,119,0,0
163,5,3,0
65,3,4,6
1190,4,-3,0
1190,4,-4,0
1193,3,0,0
1193,3,1,0
1181,232,0,0
163,5,2,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
1197,5,0,0
186,5,2,0
65,0,4,3
226,0,4,2
61,4,-1,0
65,0,4,4
226,0,4,2
61,4,-2,0
1216,4,-4,0
1190,4,-1,0
1190,4,-2,0
1185,119,0,0
163,5,3,0
65,3,4,5
1190,4,-3,0
1190,4,-4,0
1193,3,0,0
1193,3,1,0
1181,262,0,0
163,5,2,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
1197,5,0,0
186,5,2,0
65,0,4,3
249,0,4,2
61,4,-1,0
65,0,4,4
249,0,4,2
61,4,-2,0
1216,4,-4,0
1190,4,-1,0
1190,4,-2,0
1185,119,0,0
163,5,3,0
65,3,4,5
1190,4,-3,0
1190,4,-4,0
1193,3,0,0
1193,3,1,0
1181,292,0,0
163,5,2,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
63,4,-1,0
65,0,4,2
64,4,-1,0
65,3,4,3
1190,4,-1,0
1193,3,0,0
1181,308,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
65,0,4,3
68,0,4,2
65,0,4,3
163,0,1,0
65,3,4,4
61,3,0,0
1181,322,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
65,1,4,2
65,3,4,3
63,3,0,0
1181,333,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
63,4,-1,0
65,0,4,3
65,1,4,2
138,0,1,0
61,4,-1,0
65,3,4,4
1190,4,-1,0
1193,3,0,0
1181,351,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
88,0,4,2
6,363,0,0
1208,0,0,0
48,9,-1,0
1181,363,0,0
1208,0,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
65,0,4,3
318,0,4,2
6,377,0,0
1208,0,0,0
48,9,-1,0
1181,377,0,0
1208,0,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
65,0,4,3
341,0,4,2
6,393,0,0
65,3,4,4
1190,4,3,0
1193,3,0,0
1181,398,0,0
1181,393,0,0
1208,0,0,0
65,3,4,4
1190,4,2,0
1193,3,0,0
1181,398,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
65,0,4,3
364,0,4,2
6,413,0,0
65,3,4,4
1190,4,3,0
1193,3,0,0
1181,418,0,0
1181,413,0,0
1208,0,0,0
65,3,4,4
1190,4,2,0
1193,3,0,0
1181,418,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
1197,5,0,0
1216,4,-1,0
1190,4,4,0
1190,4,2,0
1185,402,0,0
163,5,3,0
1216,4,-2,0
1190,4,-1,0
1190,4,3,0
1185,382,0,0
163,5,3,0
65,3,4,5
1190,4,-2,0
1193,3,0,0
1181,443,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
63,2,0,0
1215,2,2,1
1185,107,0,0
65,2,4,-1
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
186,5,3,0
1215,2,4,-3
1185,447,0,0
65,1,4,4
61,4,-3,1
1190,4,3,0
1190,4,2,0
1193,4,-2,0
1193,4,-1,0
65,3,4,5
1190,4,-1,0
1190,4,-2,0
1190,4,-3,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1181,482,0,0
163,5,3,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
48,0,3,0
226,0,4,2
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
1185,30,0,0
65,2,4,-1
163,5,2,0
65,1,4,-3
61,2,0,1
1194,5,0,0
1194,5,0,0
63,2,1,0
65,1,4,2
61,2,2,1
65,3,4,3
63,3,0,0
1181,512,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,2,0,0
1190,4,2,0
1185,312,0,0
65,2,4,-1
163,5,3,0
65,1,4,-2
61,2,0,1
1194,5,0,0
65,3,4,3
1190,2,0,0
1193,3,0,0
1181,536,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,4,2,0
65,2,4,-1
1185,516,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,3,0
65,2,4,-1
1185,516,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
65,3,4,4
1190,2,0,0
1193,3,0,0
1181,566,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
65,0,2,1
341,0,2,2
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,4,0
65,2,4,-1
1185,516,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,3,0
1190,4,2,0
65,2,4,-1
1185,540,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
1196,2,1,0
65,3,4,5
1190,2,0,0
1193,3,0,0
1181,610,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
65,0,2,1
341,0,2,2
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,2,0
65,2,4,-1
1185,516,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,4,0
1190,4,3,0
65,2,4,-1
1185,540,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
1196,2,1,0
65,3,4,5
1190,2,0,0
1193,3,0,0
1181,654,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
1197,5,0,0
186,5,2,0
1216,4,-2,0
1190,4,2,0
1185,296,0,0
65,2,4,-1
163,5,2,0
65,0,4,2
163,0,1,0
61,4,-3,0
1216,4,-4,0
1190,4,-3,0
1185,296,0,0
65,2,4,-1
163,5,2,0
1216,4,-6,0
1190,4,-2,0
1190,4,-4,0
1185,119,0,0
65,2,4,-1
163,5,3,0
65,3,4,3
1190,4,-5,0
1190,4,-6,0
1193,3,0,0
1193,3,1,0
1181,697,0,0
163,5,2,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
186,5,2,0
186,5,3,0
1216,4,-2,0
1190,4,2,0
1185,296,0,0
65,2,4,-1
163,5,2,0
65,0,4,2
163,0,1,0
61,4,-3,0
1216,4,-5,0
1190,4,-3,0
65,2,4,-1
1185,658,0,0
65,2,4,-1
163,5,2,0
1216,4,-8,0
1190,4,-2,0
1190,4,-4,0
1190,4,-5,0
1185,461,0,0
65,2,4,-1
163,5,4,0
65,3,4,3
1190,4,-6,0
1190,4,-7,0
1190,4,-8,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1181,744,0,0
163,5,3,0
163,5,2,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
186,5,3,0
65,0,4,2
203,0,2,1
209,0,3,0
65,1,2,0
161,1,0,0
61,4,-2,1
1216,4,-5,0
1190,4,-2,0
65,2,4,-1
1185,701,0,0
65,2,4,-1
163,5,2,0
65,3,4,3
1190,4,-3,0
1190,4,-4,0
1190,4,-5,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1181,778,0,0
163,5,3,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
186,5,3,0
1215,2,4,-4
1185,1468,0,0
65,2,4,-1
65,1,2,0
61,4,-4,1
1187,0,0,0
65,0,2,1
209,0,3,0
46,1,0,0
1191,0,0,0
61,4,-3,1
1187,0,0,0
65,0,2,2
209,0,3,0
46,1,0,0
1191,0,0,0
61,4,-2,1
65,3,4,2
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1181,815,0,0
163,5,3,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
65,0,2,1
347,0,0,0
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
186,5,3,0
1216,4,-4,0
1189,0,0,0
65,2,4,-1
1185,748,0,0
65,2,4,-1
163,5,2,0
65,3,4,2
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1181,853,0,0
163,5,3,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
65,0,2,1
347,0,0,0
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
186,5,3,0
65,0,2,1
186,0,1,0
61,4,-2,0
1216,4,-5,0
1190,4,-2,0
65,2,4,-1
1185,748,0,0
65,2,4,-1
163,5,2,0
65,3,4,2
1190,4,-3,0
1190,4,-4,0
1190,4,-5,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1181,896,0,0
163,5,3,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
186,5,3,0
1215,2,4,-4
1185,1210,0,0
65,2,4,-1
1197,5,0,0
1216,4,-5,0
1190,2,2,0
1215,2,4,-4
1185,486,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
63,4,-5,0
1181,922,0,0
1208,0,0,0
1196,4,-5,0
1208,0,0,0
65,0,4,-5
341,0,2,1
6,945,0,0
186,5,3,0
1197,5,0,0
1216,4,-8,0
1190,4,-5,0
65,2,4,-1
1185,748,0,0
65,2,4,-1
163,5,2,0
1216,4,-9,0
1190,4,-6,0
1190,4,-7,0
1190,4,-8,0
1215,2,4,-4
1185,614,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
163,5,3,0
1181,920,0,0
1208,0,0,0
1194,5,0,0
65,3,4,2
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1181,957,0,0
163,5,3,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,4,3,0
1190,2,1,0
1185,368,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
1197,5,0,0
63,4,-2,0
1181,979,0,0
1208,0,0,0
1196,4,-2,0
1208,0,0,0
65,0,4,-2
341,0,2,1
6,1040,0,0
186,5,3,0
186,5,3,0
1216,4,-8,0
1190,4,-2,0
1215,2,4,2
1185,748,0,0
65,2,4,-1
163,5,2,0
1190,4,-6,0
1190,4,-7,0
1190,4,-8,0
1193,4,-5,0
1193,4,-4,0
1193,4,-3,0
163,5,3,0
186,5,3,0
186,5,3,0
1216,4,-11,0
1190,4,-2,0
65,2,4,-1
1185,748,0,0
65,2,4,-1
163,5,2,0
1190,4,-9,0
1190,4,-10,0
1190,4,-11,0
1193,4,-8,0
1193,4,-7,0
1193,4,-6,0
163,5,3,0
1197,5,0,0
1216,4,-9,0
1190,4,-5,0
1190,4,-8,0
1185,368,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
1197,5,0,0
1216,4,-9,0
1190,4,-4,0
1190,4,-7,0
1185,368,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
1197,5,0,0
1216,4,-9,0
1190,4,-3,0
1190,4,-6,0
1185,368,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
163,5,3,0
163,5,3,0
1181,977,0,0
1208,0,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
65,0,4,2
203,0,2,1
209,0,3,0
65,1,2,0
161,1,0,0
65,3,4,3
61,3,0,1
1181,1061,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
1216,4,-3,0
1190,2,1,0
65,2,4,-1
1185,1047,0,0
65,2,4,-1
163,5,2,0
65,0,4,-3
61,4,-2,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
1216,4,-4,0
1189,0,0,0
1215,2,4,4
1185,1047,0,0
65,2,4,-1
163,5,2,0
65,0,4,-4
61,4,-3,0
1194,5,0,0
1197,5,0,0
65,0,4,2
61,4,-4,0
1197,5,0,0
65,0,4,3
61,4,-5,0
1197,5,0,0
65,0,4,5
61,4,-6,0
65,0,4,-2
65,1,4,-3
1181,1106,0,0
1208,0,0,0
1199,4,-6,0
1208,0,0,0
21,1119,4,-6
58,3,1,0
55,0,3,0
65,3,1,1
180,3,4,-4
61,0,1,3
65,3,1,2
180,3,4,-5
61,0,2,3
163,1,3,0
163,0,3,0
1181,1104,0,0
1208,0,0,0
65,1,4,5
176,2,1,1
1187,0,0,0
65,0,4,5
209,0,3,0
46,1,0,0
1191,0,0,0
176,2,0,1
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
1216,4,-3,0
1190,2,1,0
65,2,4,-1
1185,1047,0,0
65,2,4,-1
163,5,2,0
65,0,4,-3
61,4,-2,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
1216,4,-4,0
1189,0,0,0
1215,2,4,5
1185,1047,0,0
65,2,4,-1
163,5,2,0
65,0,4,-4
61,4,-3,0
1194,5,0,0
1197,5,0,0
65,0,4,2
61,4,-4,0
1197,5,0,0
65,0,4,3
61,4,-5,0
1197,5,0,0
65,0,4,6
61,4,-6,0
65,0,4,-2
65,1,4,-3
1181,1179,0,0
1208,0,0,0
1199,4,-6,0
1208,0,0,0
21,1191,4,-6
68,0,4,4
65,3,1,1
180,3,4,-4
61,0,1,3
65,3,1,2
180,3,4,-5
61,0,2,3
163,1,3,0
163,0,3,0
1181,1177,0,0
1208,0,0,0
65,1,4,6
176,2,1,1
1187,0,0,0
65,0,4,6
209,0,3,0
46,1,0,0
1191,0,0,0
176,2,0,1
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
63,2,0,0
63,2,1,0
63,2,2,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
48,0,1,0
226,0,4,2
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
1185,30,0,0
65,2,4,-1
163,5,2,0
65,1,4,-3
61,2,0,1
1194,5,0,0
1194,5,0,0
63,2,1,0
65,1,4,2
61,2,2,1
65,3,4,3
63,3,0,0
1181,1249,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
65,0,2,1
341,0,2,2
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,2,0,0
1190,4,2,0
1185,312,0,0
65,2,4,-1
163,5,3,0
65,1,4,-2
61,2,0,1
1194,5,0,0
1196,2,1,0
65,3,4,3
1190,2,0,0
1193,3,0,0
1181,1286,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,4,2,0
1185,296,0,0
65,2,4,-1
163,5,2,0
65,3,4,3
1190,4,-2,0
1193,3,0,0
1181,1307,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
65,0,2,0
180,0,4,2
203,0,2,1
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
65,2,4,-1
1185,1290,0,0
65,2,4,-1
163,5,2,0
65,3,4,3
1190,4,-3,0
1193,3,0,0
1181,1335,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
65,0,2,1
347,0,0,0
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1189,0,0,0
65,2,4,-1
1185,1311,0,0
65,2,4,-1
163,5,2,0
65,3,4,2
1190,4,-2,0
1193,3,0,0
1181,1369,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
65,0,2,1
347,0,0,0
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
65,0,2,1
186,0,1,0
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
65,2,4,-1
1185,1311,0,0
65,2,4,-1
163,5,2,0
65,3,4,2
1190,4,-3,0
1193,3,0,0
1181,1408,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
65,0,4,3
203,0,4,4
61,4,-2,0
1197,5,0,0
65,0,4,4
61,4,-3,0
65,3,4,2
65,0,2,0
1181,1429,0,0
1208,0,0,0
1199,4,-3,0
1208,0,0,0
21,1438,4,-3
65,1,4,-2
58,1,1,0
161,1,3,0
55,0,1,0
1194,0,0,0
1196,4,-2,0
1181,1427,0,0
1208,0,0,0
65,1,4,4
176,2,1,1
65,1,4,4
176,2,0,1
1194,5,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
65,0,4,2
203,0,2,1
209,0,1,0
65,1,2,0
161,1,0,0
65,3,4,3
61,3,0,1
1181,1464,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
63,2,0,0
63,2,1,0
63,2,2,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,4,4,0
1215,2,2,3
1185,1253,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,3,0
1215,2,2,3
1185,1253,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,2,0
1215,2,2,3
1185,1253,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
65,3,4,5
63,3,0,0
1181,1514,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,4,4,0
1190,4,3,0
1190,4,2,0
1215,2,2,0
1185,614,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
65,3,4,5
63,3,0,0
1181,1537,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
186,5,2,0
1197,5,0,0
1216,4,-3,0
1190,4,3,0
1190,4,2,0
1185,119,0,0
65,2,4,-1
163,5,3,0
1216,4,-4,0
1190,2,6,0
1190,4,-2,0
1190,4,-3,0
1215,2,2,0
1185,570,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
163,5,2,0
65,3,4,4
63,3,0,0
1181,1568,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,2,6,0
1190,4,3,0
1190,4,2,0
1215,2,2,0
1185,570,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
65,3,4,4
63,3,0,0
1181,1591,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,2,6,0
1190,4,3,0
1190,4,2,0
1215,2,2,0
1185,570,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
65,0,2,1
186,0,1,0
65,3,4,4
61,3,0,0
1181,1616,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
65,0,4,6
255,0,3,0
48,1,0,0
276,1,0,0
61,4,-2,1
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
65,0,2,1
61,4,-2,0
1197,5,0,0
63,4,-3,0
1181,1647,0,0
1208,0,0,0
1196,4,-3,0
1208,0,0,0
65,0,4,-3
341,0,4,3
6,1670,0,0
186,5,3,0
1197,5,0,0
1216,4,-6,0
1190,4,-3,0
1215,2,4,2
1185,748,0,0
65,2,4,-1
163,5,2,0
1216,4,-7,0
1190,4,-4,0
1190,4,-5,0
1190,4,-6,0
1215,2,2,0
1185,614,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
163,5,3,0
1181,1645,0,0
1208,0,0,0
1194,5,0,0
1197,5,0,0
63,4,-3,0
1181,1677,0,0
1208,0,0,0
1196,4,-3,0
1208,0,0,0
65,0,4,-3
341,0,4,6
6,1703,0,0
1197,5,0,0
1197,5,0,0
1197,5,0,0
1216,4,-4,0
1190,4,-3,0
1215,2,4,5
1185,1311,0,0
65,2,4,-1
163,5,2,0
65,0,4,-2
180,0,4,-4
61,4,-5,0
1216,4,-6,0
1190,4,-5,0
1215,2,2,3
1185,1253,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1181,1675,0,0
1208,0,0,0
1194,5,0,0
65,3,4,9
63,3,0,0
1181,1710,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
65,0,4,8
255,0,3,0
48,1,0,0
276,1,0,0
61,4,-2,1
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
65,0,2,1
61,4,-2,0
1197,5,0,0
63,4,-3,0
1181,1741,0,0
1208,0,0,0
1196,4,-3,0
1208,0,0,0
65,0,4,-3
341,0,4,5
6,1787,0,0
186,5,3,0
186,5,3,0
1216,4,-9,0
1190,4,-3,0
1215,2,4,4
1185,748,0,0
65,2,4,-1
163,5,2,0
1190,4,-7,0
1190,4,-8,0
1190,4,-9,0
1193,4,-6,0
1193,4,-5,0
1193,4,-4,0
163,5,3,0
186,5,2,0
1216,4,-8,0
1190,4,-4,0
1190,4,-5,0
1190,4,3,0
1190,4,2,0
65,2,4,-1
1185,206,0,0
65,2,4,-1
163,5,5,0
1190,4,-7,0
1190,4,-8,0
1193,4,-5,0
1193,4,-4,0
163,5,2,0
1197,5,0,0
1216,4,-7,0
1190,4,-4,0
1190,4,-5,0
1190,4,-6,0
1215,2,2,0
1185,614,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
163,5,3,0
1181,1739,0,0
1208,0,0,0
1194,5,0,0
1197,5,0,0
63,4,-3,0
1181,1794,0,0
1208,0,0,0
1196,4,-3,0
1208,0,0,0
65,0,4,-3
341,0,4,8
6,1820,0,0
1197,5,0,0
1197,5,0,0
1197,5,0,0
1216,4,-4,0
1190,4,-3,0
1215,2,4,7
1185,1311,0,0
65,2,4,-1
163,5,2,0
65,0,4,-2
180,0,4,-4
61,4,-5,0
1216,4,-6,0
1190,4,-5,0
1215,2,2,3
1185,1253,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1181,1792,0,0
1208,0,0,0
1194,5,0,0
65,3,4,11
63,3,0,0
1181,1827,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
65,0,4,8
255,0,3,0
48,1,0,0
276,1,0,0
61,4,-2,1
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
65,0,2,1
61,4,-2,0
1197,5,0,0
63,4,-3,0
1181,1858,0,0
1208,0,0,0
1196,4,-3,0
1208,0,0,0
65,0,4,-3
341,0,4,5
6,1906,0,0
186,5,3,0
186,5,3,0
1216,4,-9,0
1190,4,-3,0
1215,2,4,4
1185,748,0,0
65,2,4,-1
163,5,2,0
1190,4,-7,0
1190,4,-8,0
1190,4,-9,0
1193,4,-6,0
1193,4,-5,0
1193,4,-4,0
163,5,3,0
65,1,2,6
61,4,-6,1
186,5,2,0
1216,4,-8,0
1190,4,-4,0
1190,4,-5,0
1190,4,3,0
1190,4,2,0
65,2,4,-1
1185,206,0,0
65,2,4,-1
163,5,5,0
1190,4,-7,0
1190,4,-8,0
1193,4,-5,0
1193,4,-4,0
163,5,2,0
1197,5,0,0
1216,4,-7,0
1190,4,-4,0
1190,4,-5,0
1190,4,-6,0
1215,2,2,0
1185,614,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
163,5,3,0
1181,1856,0,0
1208,0,0,0
1194,5,0,0
1197,5,0,0
63,4,-3,0
1181,1913,0,0
1208,0,0,0
1196,4,-3,0
1208,0,0,0
65,0,4,-3
341,0,4,8
6,1939,0,0
1197,5,0,0
1197,5,0,0
1197,5,0,0
1216,4,-4,0
1190,4,-3,0
1215,2,4,7
1185,1311,0,0
65,2,4,-1
163,5,2,0
65,0,4,-2
180,0,4,-4
61,4,-5,0
1216,4,-6,0
1190,4,-5,0
1215,2,2,3
1185,1253,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1181,1911,0,0
1208,0,0,0
1194,5,0,0
65,3,4,11
63,3,0,0
1181,1946,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
48,0,1024,0
209,0,16,0
65,1,2,1
322,1,0,0
61,4,-2,1
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
65,0,4,8
255,0,3,0
48,1,0,0
276,1,0,0
61,4,-2,1
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,9,0
1190,4,8,0
1190,4,7,0
1190,2,1,0
1215,2,2,3
1185,1412,0,0
65,2,4,-1
163,5,5,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,6,0
1190,4,5,0
1190,4,4,0
1190,4,3,0
1190,4,2,0
1215,2,2,0
1185,1065,0,0
65,2,4,-1
163,5,6,0
1194,5,0,0
65,3,4,11
63,3,0,0
1181,2010,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
48,0,1024,0
209,0,16,0
65,1,2,1
322,1,0,0
61,4,-2,1
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
65,0,4,8
255,0,3,0
48,1,0,0
276,1,0,0
61,4,-2,1
1216,4,-3,0
1190,4,-2,0
1185,355,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,9,0
1190,4,8,0
1190,4,7,0
1190,2,1,0
1215,2,2,3
1185,1412,0,0
65,2,4,-1
163,5,5,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,6,0
1190,4,5,0
1190,4,4,0
1190,2,6,0
1190,4,3,0
1190,4,2,0
1215,2,2,0
1185,1138,0,0
65,2,4,-1
163,5,7,0
1194,5,0,0
65,3,4,11
63,3,0,0
1181,2075,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
186,5,7,0
186,5,7,0
1216,4,-15,0
1189,1,0,0
1185,2253,0,0
65,2,4,-1
163,5,2,0
1190,4,-9,0
1190,4,-10,0
1190,4,-11,0
1190,4,-12,0
1190,4,-13,0
1190,4,-14,0
1190,4,-15,0
1193,4,-8,0
1193,4,-7,0
1193,4,-6,0
1193,4,-5,0
1193,4,-4,0
1193,4,-3,0
1193,4,-2,0
163,5,7,0
65,1,2,6
61,4,-2,1
1197,5,0,0
65,0,4,3
232,0,2,0
61,4,-9,0
1197,5,0,0
65,0,4,2
232,0,2,0
61,4,-10,0
1197,5,0,0
1197,5,0,0
1197,5,0,0
65,0,4,5
203,0,4,-9
61,4,-11,0
65,0,4,4
203,0,4,-10
61,4,-12,0
1216,4,-13,0
1190,4,-11,0
1190,4,-12,0
1215,2,4,-8
1185,1541,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
1197,5,0,0
65,0,4,5
180,0,4,-9
61,4,-11,0
65,0,4,4
203,0,4,-10
61,4,-12,0
1216,4,-13,0
1190,4,-11,0
1190,4,-12,0
1215,2,4,-8
1185,1541,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
1197,5,0,0
65,0,4,5
180,0,4,-9
61,4,-11,0
65,0,4,4
180,0,4,-10
61,4,-12,0
1216,4,-13,0
1190,4,-11,0
1190,4,-12,0
1215,2,4,-8
1185,1541,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
1197,5,0,0
65,0,4,5
203,0,4,-9
61,4,-11,0
65,0,4,4
180,0,4,-10
61,4,-12,0
1216,4,-13,0
1190,4,-11,0
1190,4,-12,0
1215,2,4,-8
1185,1541,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1216,4,-11,0
1189,1,0,0
1189,0,0,0
1189,3,0,0
1215,2,4,-8
1185,1481,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
1197,5,0,0
1216,4,-11,0
1189,3,0,0
1189,2,0,0
1189,1,0,0
1215,2,4,-8
1185,1481,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
65,3,4,6
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1190,4,-5,0
1190,4,-6,0
1190,4,-7,0
1190,4,-8,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1193,3,3,0
1193,3,4,0
1193,3,5,0
1193,3,6,0
1181,2232,0,0
1194,5,0,0
1194,5,0,0
163,5,7,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1215,2,2,0
1185,1210,0,0
65,2,4,-1
1215,2,2,3
1185,1468,0,0
65,2,4,-1
63,2,6,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
186,5,7,0
1215,2,4,-7
1185,2236,0,0
1197,5,0,0
1197,5,0,0
48,0,4,0
226,0,4,2
61,4,-8,0
1216,4,-9,0
1190,4,-8,0
1215,2,4,-7
1185,486,0,0
163,5,2,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
48,0,6,0
226,0,4,2
61,4,-8,0
1216,4,-9,0
1190,4,-8,0
1215,2,4,-4
1185,1223,0,0
163,5,2,0
1194,5,0,0
1194,5,0,0
65,3,4,3
1190,4,-1,0
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1190,4,-5,0
1190,4,-6,0
1190,4,-7,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1193,3,3,0
1193,3,4,0
1193,3,5,0
1193,3,6,0
1181,2300,0,0
163,5,7,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1215,2,2,0
1185,107,0,0
65,2,4,-1
63,2,2,0
1215,2,2,3
1185,1468,0,0
65,2,4,-1
1215,2,2,6
1185,1468,0,0
65,2,4,-1
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
1216,4,-3,0
1190,2,0,0
1185,296,0,0
65,2,4,-1
163,5,2,0
65,0,4,-3
61,4,-2,0
1194,5,0,0
1196,2,0,0
65,3,4,2
1190,4,-2,0
1193,3,0,0
1181,2346,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1197,5,0,0
186,5,2,0
1216,4,-2,0
65,2,4,-1
1185,2324,0,0
65,2,4,-1
163,5,1,0
1216,4,-3,0
65,2,4,-1
1185,2324,0,0
65,2,4,-1
163,5,1,0
1216,4,-5,0
1190,4,-2,0
1190,4,-3,0
1185,119,0,0
65,2,4,-1
163,5,3,0
65,3,4,2
1190,4,-4,0
1190,4,-5,0
1193,3,0,0
1193,3,1,0
1181,2384,0,0
163,5,2,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
186,5,3,0
1215,2,4,-4
1185,1468,0,0
65,2,4,-1
1197,5,0,0
1216,4,-5,0
65,2,4,-1
1185,2324,0,0
65,2,4,-1
163,5,1,0
65,1,4,-5
61,4,-3,1
1194,5,0,0
65,1,4,-3
176,2,0,1
65,1,2,0
61,4,-4,1
65,3,4,2
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1181,2420,0,0
163,5,3,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
186,5,3,0
1216,4,-4,0
65,2,4,-1
1185,2388,0,0
65,2,4,-1
163,5,1,0
65,3,4,2
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1181,2445,0,0
163,5,3,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
186,5,3,0
1215,2,4,-4
1185,1210,0,0
65,2,4,-1
1197,5,0,0
1216,4,-5,0
65,2,4,-1
1185,2324,0,0
65,2,4,-1
163,5,1,0
65,1,4,-5
61,4,-3,1
1194,5,0,0
1187,0,0,0
65,0,4,-3
209,0,3,0
46,1,0,0
1191,0,0,0
176,2,0,1
65,1,2,0
61,4,-4,1
65,3,4,2
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1181,2485,0,0
163,5,3,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
186,5,7,0
1215,2,4,-8
1185,2236,0,0
65,2,4,-1
186,5,3,0
1216,4,-11,0
65,2,4,-1
1185,2449,0,0
65,2,4,-1
163,5,1,0
1190,4,-9,0
1190,4,-10,0
1190,4,-11,0
1193,4,-8,0
1193,4,-7,0
1193,4,-6,0
163,5,3,0
186,5,3,0
1216,4,-11,0
65,2,4,-1
1185,2424,0,0
65,2,4,-1
163,5,1,0
1190,4,-9,0
1190,4,-10,0
1190,4,-11,0
1193,4,-5,0
1193,4,-4,0
1193,4,-3,0
163,5,3,0
65,3,4,2
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1190,4,-5,0
1190,4,-6,0
1190,4,-7,0
1190,4,-8,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1193,3,3,0
1193,3,4,0
1193,3,5,0
1193,3,6,0
1181,2542,0,0
163,5,7,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,2,0,0
1190,4,2,0
1185,312,0,0
65,2,4,-1
163,5,3,0
65,1,4,-2
61,2,0,1
1194,5,0,0
65,3,4,3
1190,2,0,0
1193,3,0,0
1181,2566,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,4,4,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,3,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,2,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
65,3,4,5
1190,2,0,0
1193,3,0,0
1181,2604,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,4,2,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,3,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
65,3,4,4
1190,2,0,0
1193,3,0,0
1181,2634,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,4,4,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,2,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,3,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
65,3,4,5
1190,2,0,0
1193,3,0,0
1181,2672,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,4,2,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,4,0
1190,4,3,0
65,2,4,-1
1185,2608,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
65,3,4,5
1190,2,0,0
1193,3,0,0
1181,2703,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1190,4,3,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
1216,4,-3,0
1189,0,0,0
1215,2,4,2
1185,1047,0,0
65,2,4,-1
163,5,2,0
65,0,4,-3
61,4,-2,0
1194,5,0,0
1197,5,0,0
65,0,4,3
61,4,-3,0
65,0,4,-2
65,1,2,0
1181,2739,0,0
1208,0,0,0
1199,4,-3,0
1208,0,0,0
21,2750,4,-3
65,3,0,0
61,1,0,3
65,3,0,1
61,1,1,3
65,3,0,2
61,1,2,3
163,0,3,0
163,1,3,0
1181,2737,0,0
1208,0,0,0
1187,0,0,0
65,0,4,3
209,0,3,0
46,1,0,0
1191,0,0,0
176,2,0,1
1194,5,0,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1190,4,6,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
1216,4,-3,0
1189,0,0,0
1215,2,4,5
1185,1450,0,0
65,2,4,-1
163,5,2,0
65,0,4,-3
61,4,-2,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
65,0,4,6
255,0,3,0
61,4,-3,0
1216,4,-4,0
1189,0,0,0
1190,4,-3,0
1185,368,0,0
65,2,4,-1
163,5,3,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
65,0,4,6
232,0,3,0
61,4,-3,0
65,0,4,-2
65,1,2,0
1181,2800,0,0
1208,0,0,0
1199,4,-3,0
1208,0,0,0
21,2811,4,-3
65,3,0,0
61,1,0,3
65,3,0,1
61,1,1,3
65,3,0,2
61,1,2,3
163,0,3,0
163,1,3,0
1181,2798,0,0
1208,0,0,0
65,1,4,6
176,2,0,1
1194,5,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
1197,5,0,0
1216,4,-2,0
1189,6,0,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
48,0,8,0
209,0,3,0
48,1,255,0
552,1,0,0
61,4,-2,1
1197,5,0,0
94,0,1,0
61,4,-3,0
1197,5,0,0
48,0,8,0
209,0,2,0
48,1,255,0
552,1,0,0
65,0,4,-2
161,0,1,0
61,4,-4,0
1197,5,0,0
48,0,8,0
209,0,1,0
48,1,255,0
552,1,0,0
65,0,4,-2
161,0,1,0
61,4,-5,0
1197,5,0,0
48,0,8,0
209,0,0,0
48,1,255,0
552,1,0,0
65,0,4,-2
161,0,1,0
61,4,-6,0
1197,5,0,0
65,0,4,-2
61,4,-7,0
1197,5,0,0
186,5,2,0
186,5,2,0
1197,5,0,0
94,0,30,0
61,4,-8,0
1216,4,-10,0
1190,4,-8,0
1189,0,0,0
1185,119,0,0
65,2,4,-1
163,5,3,0
1216,4,-12,0
1190,4,3,0
1190,4,2,0
1190,4,-9,0
1190,4,-10,0
1185,206,0,0
65,2,4,-1
163,5,5,0
1216,4,-13,0
1190,4,-7,0
1190,4,-11,0
1190,4,-12,0
65,2,4,-1
1185,2638,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
163,5,2,0
163,5,2,0
1194,5,0,0
186,5,2,0
186,5,2,0
1197,5,0,0
1216,4,-9,0
1189,0,0,0
1189,30,0,0
1185,119,0,0
65,2,4,-1
163,5,3,0
1216,4,-11,0
1190,4,3,0
1190,4,2,0
1190,4,-8,0
1190,4,-9,0
1185,206,0,0
65,2,4,-1
163,5,5,0
1216,4,-12,0
1190,4,-7,0
1190,4,-10,0
1190,4,-11,0
65,2,4,-1
1185,2638,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
163,5,2,0
163,5,2,0
186,5,2,0
186,5,2,0
1197,5,0,0
1216,4,-9,0
1189,30,0,0
1189,0,0,0
1185,119,0,0
65,2,4,-1
163,5,3,0
1216,4,-11,0
1190,4,3,0
1190,4,2,0
1190,4,-8,0
1190,4,-9,0
1185,206,0,0
65,2,4,-1
163,5,5,0
1216,4,-12,0
1190,4,-7,0
1190,4,-10,0
1190,4,-11,0
65,2,4,-1
1185,2638,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
163,5,2,0
163,5,2,0
186,5,2,0
1190,4,3,0
1190,4,2,0
1193,4,-9,0
1193,4,-8,0
178,4,-9,60
1197,5,0,0
186,5,2,0
186,5,2,0
1197,5,0,0
94,0,30,0
61,4,-10,0
1216,4,-12,0
1190,4,-10,0
1189,0,0,0
1185,119,0,0
65,2,4,-1
163,5,3,0
1216,4,-14,0
1190,4,-8,0
1190,4,-9,0
1190,4,-11,0
1190,4,-12,0
1185,206,0,0
65,2,4,-1
163,5,5,0
1216,4,-15,0
1190,4,-7,0
1190,4,-13,0
1190,4,-14,0
65,2,4,-1
1185,2638,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
163,5,2,0
163,5,2,0
1194,5,0,0
186,5,2,0
186,5,2,0
1197,5,0,0
1216,4,-11,0
1189,0,0,0
1189,30,0,0
1185,119,0,0
65,2,4,-1
163,5,3,0
1216,4,-13,0
1190,4,-8,0
1190,4,-9,0
1190,4,-10,0
1190,4,-11,0
1185,206,0,0
65,2,4,-1
163,5,5,0
1216,4,-14,0
1190,4,-7,0
1190,4,-12,0
1190,4,-13,0
65,2,4,-1
1185,2638,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
163,5,2,0
163,5,2,0
186,5,2,0
186,5,2,0
1197,5,0,0
1216,4,-11,0
1189,30,0,0
1189,0,0,0
1185,119,0,0
65,2,4,-1
163,5,3,0
1216,4,-13,0
1190,4,-8,0
1190,4,-9,0
1190,4,-10,0
1190,4,-11,0
1185,206,0,0
65,2,4,-1
163,5,5,0
1216,4,-14,0
1190,4,-5,0
1190,4,-12,0
1190,4,-13,0
65,2,4,-1
1185,2638,0,0
65,2,4,-1
163,5,4,0
1194,5,0,0
163,5,2,0
163,5,2,0
1197,5,0,0
48,0,2,0
209,0,3,0
61,4,-10,0
1197,5,0,0
1216,4,-11,0
1190,4,-10,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1197,5,0,0
63,4,-11,0
1181,3069,0,0
1208,0,0,0
1196,4,-11,0
1208,0,0,0
65,0,4,-11
341,0,4,-10
6,3082,0,0
1197,5,0,0
1216,4,-12,0
1190,4,-11,0
65,2,4,-1
1185,2546,0,0
65,2,4,-1
163,5,2,0
1194,5,0,0
1181,3067,0,0
1208,0,0,0
1194,5,0,0
1194,5,0,0
163,5,2,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
63,2,0,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
61,4,-1,2
63,2,0,0
63,2,1,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
48,0,64,0
163,0,7,0
48,1,1024,0
207,1,0,0
163,1,512,0
65,3,4,2
61,3,0,1
1181,3131,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
186,5,2,0
1197,5,0,0
186,5,2,0
94,0,200,0
61,4,-3,0
1216,4,-5,0
1190,4,-3,0
1189,30,0,0
1185,119,0,0
163,5,3,0
1190,4,-4,0
1190,4,-5,0
1193,4,-2,0
1193,4,-1,0
163,5,2,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
1216,4,-4,0
1185,3120,0,0
163,5,1,0
65,0,4,-4
61,4,-3,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
65,0,4,-3
163,0,2,0
61,4,-4,0
1216,4,-5,0
1190,4,-4,0
1185,296,0,0
163,5,2,0
21,3199,4,-5
1197,5,0,0
1197,5,0,0
65,0,4,-3
163,0,0,0
61,4,-6,0
1216,4,-7,0
1190,4,-6,0
1185,296,0,0
163,5,2,0
65,1,4,-7
61,4,-2,1
1194,5,0,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
65,0,4,-3
163,0,1,0
61,4,-6,0
1216,4,-7,0
1190,4,-6,0
1185,296,0,0
163,5,2,0
65,1,4,-7
61,4,-1,1
1194,5,0,0
1194,5,0,0
1181,3212,0,0
1208,0,0,0
1197,5,0,0
1197,5,0,0
65,0,4,-3
163,0,2,0
61,4,-6,0
1216,4,-7,0
1190,4,-6,0
1189,1,0,0
1185,312,0,0
163,5,3,0
1194,5,0,0
1194,5,0,0
1208,0,0,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
63,4,-4,0
1197,5,0,0
63,4,-5,0
1197,5,0,0
63,4,-6,0
1197,5,0,0
63,4,-7,0
63,4,-4,37
63,4,-5,39
63,4,-6,38
63,4,-7,40
1197,5,0,0
63,4,-8,2
1197,5,0,0
1216,4,-9,0
1190,4,-4,0
1215,2,4,5
1185,1311,0,0
163,5,2,0
21,3239,4,-9
65,1,4,-8
199,4,-2,1
1181,3239,0,0
1208,0,0,0
1194,5,0,0
1197,5,0,0
1216,4,-9,0
1190,4,-5,0
1215,2,4,5
1185,1311,0,0
163,5,2,0
21,3251,4,-9
65,1,4,-8
176,4,-2,1
1181,3251,0,0
1208,0,0,0
1194,5,0,0
1197,5,0,0
1216,4,-9,0
1190,4,-6,0
1215,2,4,5
1185,1311,0,0
163,5,2,0
21,3263,4,-9
65,1,4,-8
176,4,-1,1
1181,3263,0,0
1208,0,0,0
1194,5,0,0
1197,5,0,0
1216,4,-9,0
1190,4,-7,0
1215,2,4,5
1185,1311,0,0
163,5,2,0
21,3275,4,-9
65,1,4,-8
199,4,-1,1
1181,3275,0,0
1208,0,0,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
65,0,4,-3
163,0,0,0
61,4,-9,0
1216,4,-10,0
1190,4,-9,0
1190,4,-2,0
1185,312,0,0
163,5,3,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
65,0,4,-3
163,0,1,0
61,4,-9,0
1216,4,-10,0
1190,4,-9,0
1190,4,-1,0
1185,312,0,0
163,5,3,0
1194,5,0,0
1194,5,0,0
65,3,4,11
1190,4,-1,0
1190,4,-2,0
1193,3,0,0
1193,3,1,0
1181,3314,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
163,5,2,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
186,5,7,0
1197,5,0,0
186,5,7,0
48,0,64,0
209,0,4,0
209,0,16,0
209,0,2,0
61,4,-8,0
1216,4,-15,0
1190,4,-8,0
1185,2253,0,0
163,5,2,0
1190,4,-9,0
1190,4,-10,0
1190,4,-11,0
1190,4,-12,0
1190,4,-13,0
1190,4,-14,0
1190,4,-15,0
1193,4,-7,0
1193,4,-6,0
1193,4,-5,0
1193,4,-4,0
1193,4,-3,0
1193,4,-2,0
1193,4,-1,0
163,5,7,0
1194,5,0,0
186,5,7,0
186,5,7,0
1216,4,-21,0
1189,0,0,0
1189,0,0,0
1189,10,0,0
1189,10,0,0
1215,2,4,-7
1185,2079,0,0
163,5,5,0
1190,4,-15,0
1190,4,-16,0
1190,4,-17,0
1190,4,-18,0
1190,4,-19,0
1190,4,-20,0
1190,4,-21,0
1193,4,-14,0
1193,4,-13,0
1193,4,-12,0
1193,4,-11,0
1193,4,-10,0
1193,4,-9,0
1193,4,-8,0
163,5,7,0
186,5,7,0
1197,5,0,0
186,5,7,0
48,0,64,0
209,0,2,0
209,0,4,0
61,4,-22,0
1216,4,-29,0
1190,4,-22,0
1185,2253,0,0
163,5,2,0
1190,4,-23,0
1190,4,-24,0
1190,4,-25,0
1190,4,-26,0
1190,4,-27,0
1190,4,-28,0
1190,4,-29,0
1193,4,-21,0
1193,4,-20,0
1193,4,-19,0
1193,4,-18,0
1193,4,-17,0
1193,4,-16,0
1193,4,-15,0
163,5,7,0
1194,5,0,0
1197,5,0,0
63,4,-22,0
1181,3406,0,0
1208,0,0,0
1196,4,-22,0
1208,0,0,0
65,0,4,-22
324,0,64,0
6,3460,0,0
1187,0,0,0
48,0,255,0
554,0,24,0
1187,0,0,0
65,0,4,-22
209,0,7,0
48,1,16,0
161,1,0,0
554,1,8,0
1191,0,0,0
161,0,1,0
46,1,0,0
1191,0,0,0
61,4,-15,1
186,5,2,0
1197,5,0,0
186,5,2,0
48,0,16,0
226,0,4,-22
65,1,4,2
161,1,0,0
61,4,-25,1
1216,4,-27,0
1190,4,-25,0
1189,0,0,0
1185,119,0,0
163,5,3,0
1190,4,-26,0
1190,4,-27,0
1193,4,-24,0
1193,4,-23,0
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-25,0
1190,4,-8,0
1190,4,-9,0
1190,4,-10,0
1190,4,-11,0
1190,4,-12,0
1190,4,-13,0
1190,4,-14,0
1190,4,-23,0
1190,4,-24,0
1215,2,4,-21
1185,2014,0,0
163,5,10,0
1194,5,0,0
1181,3404,0,0
163,5,2,0
1208,0,0,0
1194,5,0,0
1197,5,0,0
63,4,-22,0
1181,3467,0,0
1208,0,0,0
1196,4,-22,0
1208,0,0,0
65,0,4,-22
324,0,16,0
6,3505,0,0
186,5,2,0
1197,5,0,0
186,5,2,0
48,0,16,0
226,0,4,-22
61,4,-25,0
1216,4,-27,0
1189,0,0,0
1190,4,-25,0
1185,119,0,0
163,5,3,0
1190,4,-26,0
1190,4,-27,0
1193,4,-24,0
1193,4,-23,0
163,5,2,0
1194,5,0,0
1197,5,0,0
1216,4,-25,0
1190,4,-15,0
1190,4,-16,0
1190,4,-17,0
1190,4,-18,0
1190,4,-19,0
1190,4,-20,0
1190,4,-21,0
1190,4,-23,0
1190,4,-24,0
1215,2,4,-7
1185,1950,0,0
163,5,10,0
1194,5,0,0
163,5,2,0
1181,3465,0,0
1208,0,0,0
1194,5,0,0
65,3,4,4
1190,4,-1,0
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1190,4,-5,0
1190,4,-6,0
1190,4,-7,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1193,3,3,0
1193,3,4,0
1193,3,5,0
1193,3,6,0
1181,3526,0,0
163,5,7,0
163,5,7,0
163,5,7,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
1215,2,4,-1
1185,3097,0,0
1197,5,0,0
1197,5,0,0
1216,4,-2,0
1185,15,0,0
163,5,1,0
1216,4,-3,0
1190,4,-2,0
1185,296,0,0
163,5,2,0
65,1,4,-3
61,4,-1,1
1194,5,0,0
1194,5,0,0
1197,5,0,0
1216,4,-2,0
1215,2,4,-1
1185,2324,0,0
163,5,1,0
88,0,4,-2
6,3600,0,0
1197,5,0,0
65,0,4,-1
61,4,-3,0
186,5,7,0
1197,5,0,0
1216,4,-10,0
1190,4,3,0
1190,4,2,0
1185,3318,0,0
163,5,3,0
1216,4,-11,0
1190,4,-4,0
1190,4,-5,0
1190,4,-6,0
1190,4,-7,0
1190,4,-8,0
1190,4,-9,0
1190,4,-10,0
1215,2,4,-1
1185,2707,0,0
163,5,8,0
1194,5,0,0
163,5,7,0
1197,5,0,0
65,0,4,-1
203,0,4,-3
61,4,-4,0
1197,5,0,0
1197,5,0,0
65,0,4,-3
186,0,1,0
61,4,-5,0
1216,4,-6,0
1190,4,-5,0
1190,4,-4,0
1185,312,0,0
163,5,3,0
1194,5,0,0
1194,5,0,0
65,1,4,-3
61,4,-1,1
1194,5,0,0
1194,5,0,0
1181,3600,0,0
1208,0,0,0
1194,5,0,0
186,5,7,0
1216,4,-8,0
1215,2,4,-1
1185,2489,0,0
163,5,1,0
65,3,4,4
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1190,4,-5,0
1190,4,-6,0
1190,4,-7,0
1190,4,-8,0
1193,3,0,0
1193,3,1,0
1193,3,2,0
1193,3,3,0
1193,3,4,0
1193,3,5,0
1193,3,6,0
1181,3625,0,0
163,5,7,0
1194,5,0,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
186,5,2,0
186,5,2,0
1216,4,-4,0
1190,4,10,0
1190,4,9,0
1190,4,8,0
1190,4,7,0
1190,4,6,0
1190,4,5,0
1190,4,4,0
1190,4,3,0
1190,4,2,0
1185,3135,0,0
163,5,10,0
1190,4,-3,0
1190,4,-4,0
1193,4,-2,0
1193,4,-1,0
163,5,2,0
186,5,2,0
1190,4,3,0
1190,4,2,0
1193,4,-4,0
1193,4,-3,0
186,5,7,0
1197,5,0,0
186,5,7,0
48,0,1024,0
209,0,4,0
61,4,-12,0
1216,4,-19,0
1190,4,-12,0
1185,2253,0,0
163,5,2,0
1190,4,-13,0
1190,4,-14,0
1190,4,-15,0
1190,4,-16,0
1190,4,-17,0
1190,4,-18,0
1190,4,-19,0
1193,4,-11,0
1193,4,-10,0
1193,4,-9,0
1193,4,-8,0
1193,4,-7,0
1193,4,-6,0
1193,4,-5,0
163,5,7,0
1194,5,0,0
48,0,255,0
554,0,24,0
1187,0,0,0
48,0,128,0
554,0,8,0
1191,1,0,0
161,1,0,0
61,4,-5,1
8,3999,1,0
186,5,2,0
186,5,2,0
1216,4,-15,0
1189,0,0,0
1189,0,0,0
1185,119,0,0
163,5,3,0
1190,4,-14,0
1190,4,-15,0
1193,4,-13,0
1193,4,-12,0
163,5,2,0
186,5,7,0
186,5,7,0
1216,4,-27,0
1190,4,-4,0
1190,4,-3,0
1189,30,0,0
1189,30,0,0
1215,2,4,-11
1185,2079,0,0
163,5,5,0
1190,4,-21,0
1190,4,-22,0
1190,4,-23,0
1190,4,-24,0
1190,4,-25,0
1190,4,-26,0
1190,4,-27,0
1193,4,-20,0
1193,4,-19,0
1193,4,-18,0
1193,4,-17,0
1193,4,-16,0
1193,4,-15,0
1193,4,-14,0
163,5,7,0
48,0,255,0
554,0,24,0
1187,0,0,0
48,0,128,0
554,0,8,0
1191,1,0,0
161,1,0,0
1187,1,0,0
48,0,255,0
554,0,16,0
1191,1,0,0
161,1,0,0
61,4,-5,1
186,5,7,0
1197,5,0,0
186,5,7,0
65,0,4,-3
186,0,64,0
61,4,-28,0
1216,4,-35,0
1190,4,-4,0
1190,4,-28,0
1189,100,0,0
1189,10,0,0
1215,2,4,-11
1185,2079,0,0
163,5,5,0
1190,4,-29,0
1190,4,-30,0
1190,4,-31,0
1190,4,-32,0
1190,4,-33,0
1190,4,-34,0
1190,4,-35,0
1193,4,-27,0
1193,4,-26,0
1193,4,-25,0
1193,4,-24,0
1193,4,-23,0
1193,4,-22,0
1193,4,-21,0
163,5,7,0
1194,5,0,0
186,5,7,0
1197,5,0,0
186,5,7,0
48,0,200,0
180,0,4,-4
61,4,-35,0
1216,4,-42,0
1190,4,-35,0
1190,4,-3,0
1189,10,0,0
1189,60,0,0
1215,2,4,-11
1185,2079,0,0
163,5,5,0
1190,4,-36,0
1190,4,-37,0
1190,4,-38,0
1190,4,-39,0
1190,4,-40,0
1190,4,-41,0
1190,4,-42,0
1193,4,-34,0
1193,4,-33,0
1193,4,-32,0
1193,4,-31,0
1193,4,-30,0
1193,4,-29,0
1193,4,-28,0
163,5,7,0
1194,5,0,0
1197,5,0,0
1216,4,-35,0
1190,4,-14,0
1190,4,-15,0
1190,4,-16,0
1190,4,-17,0
1190,4,-18,0
1190,4,-19,0
1190,4,-20,0
1190,4,-12,0
1190,4,-13,0
1215,2,4,-11
1185,1950,0,0
163,5,10,0
1194,5,0,0
1197,5,0,0
1216,4,-35,0
1190,4,-21,0
1190,4,-22,0
1190,4,-23,0
1190,4,-24,0
1190,4,-25,0
1190,4,-26,0
1190,4,-27,0
1190,4,-12,0
1190,4,-13,0
1215,2,4,-11
1185,1950,0,0
163,5,10,0
1194,5,0,0
1197,5,0,0
1216,4,-35,0
1190,4,-28,0
1190,4,-29,0
1190,4,-30,0
1190,4,-31,0
1190,4,-32,0
1190,4,-33,0
1190,4,-34,0
1190,4,-12,0
1190,4,-13,0
1215,2,4,-11
1185,1950,0,0
163,5,10,0
1194,5,0,0
163,5,7,0
163,5,7,0
163,5,7,0
186,5,2,0
186,5,7,0
186,5,2,0
1197,5,0,0
1216,4,-15,0
1189,0,0,0
1189,0,0,0
1185,119,0,0
163,5,3,0
1216,4,-22,0
1190,4,-14,0
1190,4,-15,0
1185,3530,0,0
163,5,3,0
1216,4,-24,0
1190,4,-1,0
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1185,206,0,0
163,5,5,0
1216,4,-25,0
1190,4,-16,0
1190,4,-17,0
1190,4,-18,0
1190,4,-19,0
1190,4,-20,0
1190,4,-21,0
1190,4,-22,0
1190,4,-23,0
1190,4,-24,0
1215,2,4,-11
1185,1950,0,0
163,5,10,0
1194,5,0,0
163,5,2,0
163,5,7,0
163,5,2,0
8,3996,0,0
186,5,7,0
186,5,7,0
1216,4,-27,0
1189,0,0,0
1189,0,0,0
1189,10,0,0
1189,10,0,0
1215,2,4,-11
1185,2079,0,0
163,5,5,0
1190,4,-21,0
1190,4,-22,0
1190,4,-23,0
1190,4,-24,0
1190,4,-25,0
1190,4,-26,0
1190,4,-27,0
1193,4,-20,0
1193,4,-19,0
1193,4,-18,0
1193,4,-17,0
1193,4,-16,0
1193,4,-15,0
1193,4,-14,0
163,5,7,0
1197,5,0,0
63,4,-21,0
1181,3918,0,0
1208,0,0,0
1196,4,-21,0
1208,0,0,0
65,0,4,-21
324,0,64,0
6,3992,0,0
1187,0,0,0
48,0,255,0
554,0,24,0
1187,0,0,0
65,0,4,-21
209,0,7,0
48,1,16,0
161,1,0,0
554,1,8,0
1191,0,0,0
161,0,1,0
46,1,0,0
1191,0,0,0
61,4,-5,1
186,5,2,0
1197,5,0,0
186,5,2,0
65,0,4,-2
180,0,4,-4
1187,0,0,0
48,0,16,0
226,0,4,-21
1191,1,0,0
161,1,0,0
61,4,-24,1
1216,4,-26,0
1190,4,-24,0
1189,0,0,0
1185,119,0,0
163,5,3,0
1190,4,-25,0
1190,4,-26,0
1193,4,-23,0
1193,4,-22,0
163,5,2,0
1194,5,0,0
1197,5,0,0
63,4,-24,0
1181,3963,0,0
1208,0,0,0
1196,4,-24,0
1208,0,0,0
65,0,4,-24
324,0,16,0
6,3988,0,0
48,0,16,0
226,0,4,-24
65,1,4,-1
161,1,0,0
61,4,-22,1
1197,5,0,0
1216,4,-25,0
1190,4,-14,0
1190,4,-15,0
1190,4,-16,0
1190,4,-17,0
1190,4,-18,0
1190,4,-19,0
1190,4,-20,0
1190,4,-22,0
1190,4,-23,0
1215,2,4,-11
1185,2014,0,0
163,5,10,0
1194,5,0,0
1181,3961,0,0
1208,0,0,0
1194,5,0,0
1181,3916,0,0
163,5,2,0
1208,0,0,0
1194,5,0,0
163,5,7,0
1181,3996,0,0
1208,0,0,0
163,5,2,0
1181,4024,0,0
1208,0,0,0
186,5,7,0
1216,4,-18,0
1190,4,-4,0
1190,4,-3,0
1189,30,0,0
1189,30,0,0
1215,2,4,-11
1185,2079,0,0
163,5,5,0
1190,4,-12,0
1190,4,-13,0
1190,4,-14,0
1190,4,-15,0
1190,4,-16,0
1190,4,-17,0
1190,4,-18,0
1193,4,-11,0
1193,4,-10,0
1193,4,-9,0
1193,4,-8,0
1193,4,-7,0
1193,4,-6,0
1193,4,-5,0
163,5,7,0
1208,0,0,0
186,5,2,0
1215,2,4,-13
1185,3108,0,0
1197,5,0,0
1197,5,0,0
48,0,1024,0
209,0,1024,0
61,4,-14,0
1216,4,-15,0
1190,4,-14,0
1185,30,0,0
163,5,2,0
65,1,4,-15
61,4,-13,1
1194,5,0,0
1194,5,0,0
1197,5,0,0
1215,2,4,-14
1185,3097,0,0
65,1,4,-13
61,4,-14,1
1197,5,0,0
1216,4,-15,0
1190,4,-5,0
1190,4,-6,0
1190,4,-7,0
1190,4,-8,0
1190,4,-9,0
1190,4,-10,0
1190,4,-11,0
1215,2,4,-14
1185,2707,0,0
163,5,8,0
1194,5,0,0
1187,0,0,0
65,0,4,-14
203,0,4,-13
46,1,0,0
1191,0,0,0
61,4,-12,1
65,3,4,11
1190,4,-12,0
1190,4,-13,0
1193,3,0,0
1193,3,1,0
1181,4076,0,0
1194,5,0,0
163,5,2,0
163,5,7,0
163,5,2,0
163,5,2,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1187,4,0,0
46,4,5,0
1197,5,0,0
1197,5,0,0
1216,4,-1,0
1185,1,0,0
163,5,1,0
1216,4,-2,0
1190,4,-1,0
1189,0,0,0
1185,312,0,0
163,5,3,0
1194,5,0,0
1194,5,0,0
1197,5,0,0
1197,5,0,0
1197,5,0,0
1197,5,0,0
1216,4,-1,0
1185,15,0,0
163,5,1,0
48,0,1024,0
209,0,512,0
61,4,-2,0
1216,4,-3,0
1190,4,-2,0
1185,30,0,0
163,5,2,0
1216,4,-4,0
1190,4,-1,0
1190,4,-3,0
1185,312,0,0
163,5,3,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
1194,5,0,0
186,5,9,0
1215,2,4,-9
1185,2304,0,0
1197,5,0,0
1215,2,4,-10
1185,3097,0,0
65,1,4,2
61,4,-10,1
186,5,2,0
1216,4,-12,0
1215,2,4,-10
1185,2350,0,0
163,5,1,0
1190,4,-11,0
1190,4,-12,0
1193,4,-9,0
1193,4,-8,0
163,5,2,0
1197,5,0,0
1216,4,-11,0
1215,2,4,-10
1185,2324,0,0
163,5,1,0
65,1,4,-11
61,4,-7,1
1194,5,0,0
186,5,3,0
1216,4,-13,0
1215,2,4,-10
1185,2388,0,0
163,5,1,0
1190,4,-11,0
1190,4,-12,0
1190,4,-13,0
1193,4,-6,0
1193,4,-5,0
1193,4,-4,0
163,5,3,0
186,5,3,0
1216,4,-13,0
1215,2,4,-10
1185,2388,0,0
163,5,1,0
1190,4,-11,0
1190,4,-12,0
1190,4,-13,0
1193,4,-3,0
1193,4,-2,0
1193,4,-1,0
163,5,3,0
186,5,2,0
186,5,2,0
1216,4,-14,0
1190,4,-1,0
1190,4,-2,0
1190,4,-3,0
1190,4,-4,0
1190,4,-5,0
1190,4,-6,0
1190,4,-7,0
1190,4,-8,0
1190,4,-9,0
1185,3629,0,0
163,5,10,0
1190,4,-13,0
1190,4,-14,0
1193,4,-12,0
1193,4,-11,0
163,5,2,0
1197,5,0,0
1216,4,-13,0
1190,4,-11,0
1185,326,0,0
163,5,2,0
1194,5,0,0
48,2,1,0
65,3,4,3
1190,4,-12,0
1193,3,0,0
1181,4201,0,0
163,5,2,0
1194,5,0,0
163,5,9,0
1208,0,0,0
46,5,4,0
1191,4,0,0
1206,0,0,0
1208,0,0,0
1197,5,0,0
1216,4,-1,0
1187,2,0,0
1185,4080,0,0
163,5,2,0
65,0,4,-1
1194,5,0,0
48,9,1,0
*/
jmp("begin")
label("func_g_ptr_addr()")  //1
push(ebp)
mov(ebp,esp)
mov(eax,64)
add(eax,7)
mov(ebx,1024)
mul(ebx,eax)
mov(edx,ptr[ebp+2])
mov(ptr[edx+0],ebx)
jmp("func_g_ptr_addr()::ret")
label("func_g_ptr_addr()::ret")  //11
mov(esp,ebp)
pop(ebp)
ret()
label("func_g_mem_addr()")  //15
push(ebp)
mov(ebp,esp)
mov(eax,64)
add(eax,7)
mov(ebx,1024)
mul(ebx,eax)
add(ebx,8)
mov(edx,ptr[ebp+2])
mov(ptr[edx+0],ebx)
jmp("func_g_mem_addr()::ret")
label("func_g_mem_addr()::ret")  //26
mov(esp,ebp)
pop(ebp)
ret()
label("func_alloc(int)")  //30
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-2])
call("func_g_ptr_addr()")
add(esp,1)
mov(eax,ptr[ebp-2])
mov(ptr[ebp-1],eax)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ebp-1])
call("func_get_int(int)")
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
not(eax,ptr[ebp-2])
jz("if_1000::end",eax)
dec(esp)
mov(eax,64)
add(eax,8)
mov(ebx,1024)
mul(ebx,eax)
mov(ptr[ebp-3],ebx)
mov(ebx,ptr[ebp-3])
mov(ptr[ebp-2],ebx)
inc(esp)
jmp("if_1000::end")
label("if_1000::end")  //62
dec(esp)
dec(esp)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp+2])
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-3])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_alloc(int)::ret")
inc(esp)
inc(esp)
label("func_alloc(int)::ret")  //81
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i::mag()")  //85
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ecx+1])
call("func_hypot(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vec2i::mag()::ret")
inc(esp)
inc(esp)
label("func_vec2i::mag()::ret")  //103
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i::`ctor()")  //107
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
inc(esp)
label("func_vec2i::`ctor()::ret")  //115
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i(int,int)")  //119
push(ebp)
mov(ebp,esp)
sub(esp,2)
lea(ecx,ptr[ebp-2])
call("func_vec2i::`ctor()")
mov(ebx,ptr[ebp+3])
mov(ptr[ebp-2],ebx)
mov(ebx,ptr[ebp+2])
mov(ptr[ebp-1],ebx)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
push(ptr[ebp-2])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_vec2i(int,int)::ret")
add(esp,2)
label("func_vec2i(int,int)::ret")  //136
mov(esp,ebp)
pop(ebp)
ret()
label("func_add(int,int)")  //140
push(ebp)
mov(ebp,esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_set_int(int,int)")
add(esp,3)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_add(int,int)::ret")
inc(esp)
label("func_add(int,int)::ret")  //154
mov(esp,ebp)
pop(ebp)
ret()
label("func_hypot(vec2i)")  //158
push(ebp)
mov(ebp,esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+2])
push(ptr[ebp+3])
call("func_hypot(int,int)")
add(esp,3)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_hypot(vec2i)::ret")
inc(esp)
label("func_hypot(vec2i)::ret")  //172
mov(esp,ebp)
pop(ebp)
ret()
label("func_sub(vec2i,vec2i)")  //176
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp+3])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+6])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_sub(vec2i,vec2i)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_sub(vec2i,vec2i)::ret")  //202
mov(esp,ebp)
pop(ebp)
ret()
label("func_add(vec2i,vec2i)")  //206
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp+3])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+6])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_add(vec2i,vec2i)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_add(vec2i,vec2i)::ret")  //232
mov(esp,ebp)
pop(ebp)
ret()
label("func_mul(vec2i,int)")  //236
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+3])
mul(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+4])
mul(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_mul(vec2i,int)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_mul(vec2i,int)::ret")  //262
mov(esp,ebp)
pop(ebp)
ret()
label("func_div(vec2i,int)")  //266
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+3])
div(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+4])
div(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_div(vec2i,int)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_div(vec2i,int)::ret")  //292
mov(esp,ebp)
pop(ebp)
ret()
label("func_get_int(int)")  //296
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],0)
mov(eax,ptr[ebp+2])
mov(ptr[ebp-1],ptr[eax])
mov(edx,ptr[ebp+3])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_get_int(int)::ret")
inc(esp)
label("func_get_int(int)::ret")  //308
mov(esp,ebp)
pop(ebp)
ret()
label("func_set_int(int,int)")  //312
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
mov(ptr[eax],ptr[ebp+2])
mov(eax,ptr[ebp+3])
add(eax,1)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],eax)
jmp("func_set_int(int,int)::ret")
label("func_set_int(int,int)::ret")  //322
mov(esp,ebp)
pop(ebp)
ret()
label("func_setebx(int)")  //326
push(ebp)
mov(ebp,esp)
mov(ebx,ptr[ebp+2])
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],0)
jmp("func_setebx(int)::ret")
label("func_setebx(int)::ret")  //333
mov(esp,ebp)
pop(ebp)
ret()
label("func_hypot(int,int)")  //337
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],0)
mov(eax,ptr[ebp+3])
mov(ebx,ptr[ebp+2])
hypot(eax,ebx)
mov(ptr[ebp-1],eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_hypot(int,int)::ret")
inc(esp)
label("func_hypot(int,int)::ret")  //351
mov(esp,ebp)
pop(ebp)
ret()
label("func_QapAssert(int)")  //355
push(ebp)
mov(ebp,esp)
not(eax,ptr[ebp+2])
jz("if_1001::end",eax)
label("Run-time error!")  //360
mov(err,-1)
jmp("if_1001::end")
label("if_1001::end")  //363
label("func_QapAssert(int)::ret")  //364
mov(esp,ebp)
pop(ebp)
ret()
label("func_QapAssert(int,int)")  //368
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
neq(eax,ptr[ebp+2])
jz("if_1002::end",eax)
label("Run-time error!")  //374
mov(err,-1)
jmp("if_1002::end")
label("if_1002::end")  //377
label("func_QapAssert(int,int)::ret")  //378
mov(esp,ebp)
pop(ebp)
ret()
label("func_min(int,int)")  //382
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
less(eax,ptr[ebp+2])
jz("if_1003::end",eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp+3])
pop(ptr[edx+0])
jmp("func_min(int,int)::ret")
jmp("if_1003::end")
label("if_1003::end")  //393
mov(edx,ptr[ebp+4])
push(ptr[ebp+2])
pop(ptr[edx+0])
jmp("func_min(int,int)::ret")
label("func_min(int,int)::ret")  //398
mov(esp,ebp)
pop(ebp)
ret()
label("func_max(int,int)")  //402
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
more(eax,ptr[ebp+2])
jz("if_1004::end",eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp+3])
pop(ptr[edx+0])
jmp("func_max(int,int)::ret")
jmp("if_1004::end")
label("if_1004::end")  //413
mov(edx,ptr[ebp+4])
push(ptr[ebp+2])
pop(ptr[edx+0])
jmp("func_max(int,int)::ret")
label("func_max(int,int)::ret")  //418
mov(esp,ebp)
pop(ebp)
ret()
label("func_clamp(int,int,int)")  //422
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+4])
push(ptr[ebp+2])
call("func_max(int,int)")
add(esp,3)
pushlea(ptr[ebp-2])
push(ptr[ebp-1])
push(ptr[ebp+3])
call("func_min(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_clamp(int,int,int)::ret")
inc(esp)
inc(esp)
label("func_clamp(int,int,int)::ret")  //443
mov(esp,ebp)
pop(ebp)
ret()
label("func_qap_vertex::`ctor()")  //447
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
lea(ecx,ptr[ecx+1])
call("func_vec2i::`ctor()")
mov(ecx,ptr[ebp-1])
inc(esp)
label("func_qap_vertex::`ctor()::ret")  //457
mov(esp,ebp)
pop(ebp)
ret()
label("func_qap_vertex(int,vec2i)")  //461
push(ebp)
mov(ebp,esp)
sub(esp,3)
lea(ecx,ptr[ebp-3])
call("func_qap_vertex::`ctor()")
mov(ebx,ptr[ebp+4])
mov(ptr[ebp-3],ebx)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
mov(edx,ptr[ebp+5])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_qap_vertex(int,vec2i)::ret")
add(esp,3)
label("func_qap_vertex(int,vec2i)::ret")  //482
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::reserve(int)")  //486
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,3)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_alloc(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(ebx,ptr[ebp-3])
mov(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
mov(ptr[ecx+1],0)
mov(ebx,ptr[ebp+2])
mov(ptr[ecx+2],ebx)
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],0)
jmp("func_vector_qap_vertex::reserve(int)::ret")
inc(esp)
label("func_vector_qap_vertex::reserve(int)::ret")  //512
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::sys_add(int)")  //516
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::sys_add(int)::ret")
inc(esp)
label("func_vector_qap_vertex::sys_add(int)::ret")  //536
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::sys_add(vec2i)")  //540
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+4])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::sys_add(vec2i)::ret")
inc(esp)
label("func_vector_qap_vertex::sys_add(vec2i)::ret")  //566
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add(int,vec2i)")  //570
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
less(eax,ptr[ecx+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::add(int,vec2i)::ret")
inc(esp)
label("func_vector_qap_vertex::add(int,vec2i)::ret")  //610
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add(qap_vertex)")  //614
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
less(eax,ptr[ecx+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::add(qap_vertex)::ret")
inc(esp)
label("func_vector_qap_vertex::add(qap_vertex)::ret")  //654
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::get_vec2i(int)")  //658
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
dec(esp)
sub(esp,2)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp+2])
add(eax,1)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-6])
push(ptr[ebp-2])
push(ptr[ebp-4])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+3])
push(ptr[ebp-5])
push(ptr[ebp-6])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_vector_qap_vertex::get_vec2i(int)::ret")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::get_vec2i(int)::ret")  //697
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::get(int)")  //701
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
sub(esp,2)
sub(esp,3)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp+2])
add(eax,1)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::get_vec2i(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-8])
push(ptr[ebp-2])
push(ptr[ebp-4])
push(ptr[ebp-5])
call("func_qap_vertex(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
mov(edx,ptr[ebp+3])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::get(int)::ret")
add(esp,3)
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::get(int)::ret")  //744
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::at(int)")  //748
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
sub(esp,3)
mov(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mul(eax,3)
mov(ebx,ptr[ecx+0])
add(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::get(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::at(int)::ret")
add(esp,3)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::at(int)::ret")  //778
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::to_vector_int()")  //782
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,3)
lea(ecx,ptr[ebp-4])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
mov(ebx,ptr[ecx+0])
mov(ptr[ebp-4],ebx)
push(eax)
mov(eax,ptr[ecx+1])
mul(eax,3)
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-3],ebx)
push(eax)
mov(eax,ptr[ecx+2])
mul(eax,3)
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-2],ebx)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::to_vector_int()::ret")
add(esp,3)
inc(esp)
label("func_vector_qap_vertex::to_vector_int()::ret")  //815
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::front()")  //819
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
sub(esp,3)
pushlea(ptr[ebp-4])
push(0)
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::front()::ret")
add(esp,3)
inc(esp)
label("func_vector_qap_vertex::front()::ret")  //853
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::back()")  //857
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
sub(esp,3)
mov(eax,ptr[ecx+1])
sub(eax,1)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::back()::ret")
add(esp,3)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::back()::ret")  //896
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::clone()")  //900
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,3)
lea(ecx,ptr[ebp-4])
call("func_vector_qap_vertex::`ctor()")
mov(ecx,ptr[ebp-1])
dec(esp)
pushlea(ptr[ebp-5])
push(ptr[ecx+2])
lea(ecx,ptr[ebp-4])
call("func_vector_qap_vertex::reserve(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-5],0)
jmp("for_8000::condition")
label("for_8000::continue")  //920
inc(ptr[ebp-5])
label("for_8000::condition")  //922
mov(eax,ptr[ebp-5])
less(eax,ptr[ecx+1])
jz("for_8000::break",eax)
sub(esp,3)
dec(esp)
pushlea(ptr[ebp-8])
push(ptr[ebp-5])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-9])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
lea(ecx,ptr[ebp-4])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8000::continue")
label("for_8000::break")  //945
inc(esp)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::clone()::ret")
add(esp,3)
inc(esp)
label("func_vector_qap_vertex::clone()::ret")  //957
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::is_equal(vector_qap_vertex)")  //961
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
push(ptr[ecx+1])
call("func_QapAssert(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
dec(esp)
mov(ptr[ebp-2],0)
jmp("for_8001::condition")
label("for_8001::continue")  //977
inc(ptr[ebp-2])
label("for_8001::condition")  //979
mov(eax,ptr[ebp-2])
less(eax,ptr[ecx+1])
jz("for_8001::break",eax)
sub(esp,3)
sub(esp,3)
pushlea(ptr[ebp-8])
push(ptr[ebp-2])
lea(ecx,ptr[ebp+2])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
add(esp,3)
sub(esp,3)
sub(esp,3)
pushlea(ptr[ebp-11])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
add(esp,3)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-5])
push(ptr[ebp-8])
call("func_QapAssert(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-4])
push(ptr[ebp-7])
call("func_QapAssert(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-3])
push(ptr[ebp-6])
call("func_QapAssert(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
add(esp,3)
add(esp,3)
jmp("for_8001::continue")
label("for_8001::break")  //1040
inc(esp)
inc(esp)
label("func_vector_qap_vertex::is_equal(vector_qap_vertex)::ret")  //1043
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::addr_at(int)")  //1047
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mul(eax,3)
mov(ebx,ptr[ecx+0])
add(ebx,eax)
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],ebx)
jmp("func_vector_qap_vertex::addr_at(int)::ret")
inc(esp)
label("func_vector_qap_vertex::addr_at(int)::ret")  //1061
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)")  //1065
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ecx+1])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(0)
lea(ecx,ptr[ebp+4])
call("func_vector_qap_vertex::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-4])
mov(ptr[ebp-3],eax)
inc(esp)
dec(esp)
mov(eax,ptr[ebp+2])
mov(ptr[ebp-4],eax)
dec(esp)
mov(eax,ptr[ebp+3])
mov(ptr[ebp-5],eax)
dec(esp)
mov(eax,ptr[ebp+5])
mov(ptr[ebp-6],eax)
mov(eax,ptr[ebp-2])
mov(ebx,ptr[ebp-3])
jmp("for_8002::condition")
label("for_8002::continue")  //1104
dec(ptr[ebp-6])
label("for_8002::condition")  //1106
jz("for_8002::break",ptr[ebp-6])
mov(edx,ptr[ebx])
mov(ptr[eax],edx)
mov(edx,ptr[ebx+1])
add(edx,ptr[ebp-4])
mov(ptr[eax+1],edx)
mov(edx,ptr[ebx+2])
add(edx,ptr[ebp-5])
mov(ptr[eax+2],edx)
add(ebx,3)
add(eax,3)
jmp("for_8002::continue")
label("for_8002::break")  //1119
mov(ebx,ptr[ebp+5])
add(ptr[ecx+1],ebx)
push(eax)
mov(eax,ptr[ebp+5])
mul(eax,3)
mov(ebx,eax)
pop(eax)
add(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)::ret")  //1134
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)")  //1138
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ecx+1])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(0)
lea(ecx,ptr[ebp+5])
call("func_vector_qap_vertex::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-4])
mov(ptr[ebp-3],eax)
inc(esp)
dec(esp)
mov(eax,ptr[ebp+2])
mov(ptr[ebp-4],eax)
dec(esp)
mov(eax,ptr[ebp+3])
mov(ptr[ebp-5],eax)
dec(esp)
mov(eax,ptr[ebp+6])
mov(ptr[ebp-6],eax)
mov(eax,ptr[ebp-2])
mov(ebx,ptr[ebp-3])
jmp("for_8003::condition")
label("for_8003::continue")  //1177
dec(ptr[ebp-6])
label("for_8003::condition")  //1179
jz("for_8003::break",ptr[ebp-6])
mov(ptr[eax],ptr[ebp+4])
mov(edx,ptr[ebx+1])
add(edx,ptr[ebp-4])
mov(ptr[eax+1],edx)
mov(edx,ptr[ebx+2])
add(edx,ptr[ebp-5])
mov(ptr[eax+2],edx)
add(ebx,3)
add(eax,3)
jmp("for_8003::continue")
label("for_8003::break")  //1191
mov(ebx,ptr[ebp+6])
add(ptr[ecx+1],ebx)
push(eax)
mov(eax,ptr[ebp+6])
mul(eax,3)
mov(ebx,eax)
pop(eax)
add(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)::ret")  //1206
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::`ctor()")  //1210
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
mov(ptr[ecx+2],0)
inc(esp)
label("func_vector_qap_vertex::`ctor()::ret")  //1219
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::reserve(int)")  //1223
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,1)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_alloc(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(ebx,ptr[ebp-3])
mov(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
mov(ptr[ecx+1],0)
mov(ebx,ptr[ebp+2])
mov(ptr[ecx+2],ebx)
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],0)
jmp("func_vector_int::reserve(int)::ret")
inc(esp)
label("func_vector_int::reserve(int)::ret")  //1249
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::add(int)")  //1253
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
less(eax,ptr[ecx+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_int::add(int)::ret")
inc(esp)
label("func_vector_int::add(int)::ret")  //1286
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::get(int)")  //1290
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vector_int::get(int)::ret")
inc(esp)
inc(esp)
label("func_vector_int::get(int)::ret")  //1307
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::at(int)")  //1311
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+0])
add(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_int::get(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-3])
pop(ptr[edx+0])
jmp("func_vector_int::at(int)::ret")
inc(esp)
inc(esp)
inc(esp)
label("func_vector_int::at(int)::ret")  //1335
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::front()")  //1339
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(0)
mov(ecx,ptr[ebp-1])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vector_int::front()::ret")
inc(esp)
inc(esp)
label("func_vector_int::front()::ret")  //1369
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::back()")  //1373
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
sub(eax,1)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-3])
pop(ptr[edx+0])
jmp("func_vector_int::back()::ret")
inc(esp)
inc(esp)
inc(esp)
label("func_vector_int::back()::ret")  //1408
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::add_mega_fast(vector_int,int)")  //1412
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
mov(eax,ptr[ebp+3])
sub(eax,ptr[ebp+4])
mov(ptr[ebp-2],eax)
dec(esp)
mov(eax,ptr[ebp+4])
mov(ptr[ebp-3],eax)
mov(edx,ptr[ebp+2])
mov(eax,ptr[ecx+0])
jmp("for_8004::condition")
label("for_8004::continue")  //1427
dec(ptr[ebp-3])
label("for_8004::condition")  //1429
jz("for_8004::break",ptr[ebp-3])
mov(ebx,ptr[ebp-2])
mov(ebx,ptr[ebx])
add(ebx,edx)
mov(ptr[eax],ebx)
inc(eax)
inc(ptr[ebp-2])
jmp("for_8004::continue")
label("for_8004::break")  //1438
mov(ebx,ptr[ebp+4])
add(ptr[ecx+1],ebx)
mov(ebx,ptr[ebp+4])
add(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_int::add_mega_fast(vector_int,int)::ret")  //1446
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::addr_at(int)")  //1450
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mul(eax,1)
mov(ebx,ptr[ecx+0])
add(ebx,eax)
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],ebx)
jmp("func_vector_int::addr_at(int)::ret")
inc(esp)
label("func_vector_int::addr_at(int)::ret")  //1464
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::`ctor()")  //1468
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
mov(ptr[ecx+2],0)
inc(esp)
label("func_vector_int::`ctor()::ret")  //1477
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddTris(int,int,int)")  //1481
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddTris(int,int,int)::ret")
inc(esp)
label("func_t_out_dev::AddTris(int,int,int)::ret")  //1514
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(qap_vertex)")  //1518
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+5])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(qap_vertex)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(qap_vertex)::ret")  //1537
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(int,int)")  //1541
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-4])
push(ptr[ecx+6])
push(ptr[ebp-2])
push(ptr[ebp-3])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(int,int)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(int,int)::ret")  //1568
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(vec2i)")  //1572
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+6])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(vec2i)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(vec2i)::ret")  //1591
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertexAndRetVID(vec2i)")  //1595
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+6])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(eax,ptr[ecx+1])
sub(eax,1)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],eax)
jmp("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret")
inc(esp)
label("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret")  //1616
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add(t_out_dev)")  //1620
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+6])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8005::condition")
label("for_8005::continue")  //1645
inc(ptr[ebp-3])
label("for_8005::condition")  //1647
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+3])
jz("for_8005::break",eax)
sub(esp,3)
dec(esp)
pushlea(ptr[ebp-6])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+2])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-7])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8005::continue")
label("for_8005::break")  //1670
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8006::condition")
label("for_8006::continue")  //1675
inc(ptr[ebp-3])
label("for_8006::condition")  //1677
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+6])
jz("for_8006::break",eax)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-4])
mov(ptr[ebp-5],eax)
pushlea(ptr[ebp-6])
push(ptr[ebp-5])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
jmp("for_8006::continue")
label("for_8006::break")  //1703
inc(esp)
mov(edx,ptr[ebp+9])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add(t_out_dev)::ret")
inc(esp)
inc(esp)
label("func_t_out_dev::add(t_out_dev)::ret")  //1710
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add_wo(t_out_dev,vec2i)")  //1714
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+8])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8007::condition")
label("for_8007::continue")  //1739
inc(ptr[ebp-3])
label("for_8007::condition")  //1741
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+5])
jz("for_8007::break",eax)
sub(esp,3)
sub(esp,3)
pushlea(ptr[ebp-9])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+4])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,3)
sub(esp,2)
pushlea(ptr[ebp-8])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp+3])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-7])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8007::continue")
label("for_8007::break")  //1787
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8008::condition")
label("for_8008::continue")  //1792
inc(ptr[ebp-3])
label("for_8008::condition")  //1794
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+8])
jz("for_8008::break",eax)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+7])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-4])
mov(ptr[ebp-5],eax)
pushlea(ptr[ebp-6])
push(ptr[ebp-5])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
jmp("for_8008::continue")
label("for_8008::break")  //1820
inc(esp)
mov(edx,ptr[ebp+11])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add_wo(t_out_dev,vec2i)::ret")
inc(esp)
inc(esp)
label("func_t_out_dev::add_wo(t_out_dev,vec2i)::ret")  //1827
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add_wc(t_out_dev,vec2i)")  //1831
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+8])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8009::condition")
label("for_8009::continue")  //1856
inc(ptr[ebp-3])
label("for_8009::condition")  //1858
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+5])
jz("for_8009::break",eax)
sub(esp,3)
sub(esp,3)
pushlea(ptr[ebp-9])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+4])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,3)
mov(ebx,ptr[ecx+6])
mov(ptr[ebp-6],ebx)
sub(esp,2)
pushlea(ptr[ebp-8])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp+3])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-7])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8009::continue")
label("for_8009::break")  //1906
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8010::condition")
label("for_8010::continue")  //1911
inc(ptr[ebp-3])
label("for_8010::condition")  //1913
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+8])
jz("for_8010::break",eax)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+7])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-4])
mov(ptr[ebp-5],eax)
pushlea(ptr[ebp-6])
push(ptr[ebp-5])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
jmp("for_8010::continue")
label("for_8010::break")  //1939
inc(esp)
mov(edx,ptr[ebp+11])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add_wc(t_out_dev,vec2i)::ret")
inc(esp)
inc(esp)
label("func_t_out_dev::add_wc(t_out_dev,vec2i)::ret")  //1946
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")  //1950
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,1024)
mul(eax,16)
mov(ebx,ptr[ecx+1])
less(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+8])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+9])
push(ptr[ebp+8])
push(ptr[ebp+7])
push(ptr[ecx+1])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add_mega_fast(vector_int,int)")
mov(ecx,ptr[ebp-1])
add(esp,5)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+6])
push(ptr[ebp+5])
push(ptr[ebp+4])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,6)
inc(esp)
mov(edx,ptr[ebp+11])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret")
inc(esp)
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret")  //2010
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add_with_color(t_out_dev,vec2i)")  //2014
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,1024)
mul(eax,16)
mov(ebx,ptr[ecx+1])
less(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+8])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+9])
push(ptr[ebp+8])
push(ptr[ebp+7])
push(ptr[ecx+1])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add_mega_fast(vector_int,int)")
mov(ecx,ptr[ebp-1])
add(esp,5)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+6])
push(ptr[ebp+5])
push(ptr[ebp+4])
push(ptr[ecx+6])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,7)
inc(esp)
mov(edx,ptr[ebp+11])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add_with_color(t_out_dev,vec2i)::ret")
inc(esp)
label("func_t_out_dev::add_with_color(t_out_dev,vec2i)::ret")  //2075
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::GenGeomQuad(int,int,int,int)")  //2079
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,7)
sub(esp,7)
pushlea(ptr[ebp-15])
push(1)
call("func_new_geom(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-15])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
pop(ptr[ebp-2])
add(esp,7)
mov(ebx,ptr[ecx+6])
mov(ptr[ebp-2],ebx)
dec(esp)
mov(eax,ptr[ebp+3])
div(eax,2)
mov(ptr[ebp-9],eax)
dec(esp)
mov(eax,ptr[ebp+2])
div(eax,2)
mov(ptr[ebp-10],eax)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-11])
push(1)
push(0)
push(3)
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddTris(int,int,int)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
dec(esp)
pushlea(ptr[ebp-11])
push(3)
push(2)
push(1)
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddTris(int,int,int)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+6])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
pop(ptr[edx+5])
pop(ptr[edx+6])
jmp("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret")
inc(esp)
inc(esp)
add(esp,7)
inc(esp)
label("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret")  //2232
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::`ctor()")  //2236
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::`ctor()")
mov(ecx,ptr[ebp-1])
lea(ecx,ptr[ecx+3])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
mov(ptr[ecx+6],0)
inc(esp)
label("func_t_out_dev::`ctor()::ret")  //2249
mov(esp,ebp)
pop(ebp)
ret()
label("func_new_geom(int)")  //2253
push(ebp)
mov(ebp,esp)
sub(esp,7)
lea(ecx,ptr[ebp-7])
call("func_t_out_dev::`ctor()")
dec(esp)
dec(esp)
mov(eax,4)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-9])
push(ptr[ebp-8])
lea(ecx,ptr[ebp-7])
call("func_vector_qap_vertex::reserve(int)")
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,6)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-9])
push(ptr[ebp-8])
lea(ecx,ptr[ebp-4])
call("func_vector_int::reserve(int)")
add(esp,2)
inc(esp)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
pop(ptr[edx+5])
pop(ptr[edx+6])
jmp("func_new_geom(int)::ret")
add(esp,7)
label("func_new_geom(int)::ret")  //2300
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_input::`ctor()")  //2304
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
lea(ecx,ptr[ecx+0])
call("func_vec2i::`ctor()")
mov(ecx,ptr[ebp-1])
mov(ptr[ecx+2],0)
lea(ecx,ptr[ecx+3])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
lea(ecx,ptr[ecx+6])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
inc(esp)
label("func_t_input::`ctor()::ret")  //2320
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_int()")  //2324
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ecx+0])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
inc(ptr[ecx+0])
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_t_dev::read_int()::ret")
inc(esp)
inc(esp)
label("func_t_dev::read_int()::ret")  //2346
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_vec2i()")  //2350
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
sub(esp,2)
pushlea(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
pushlea(ptr[ebp-3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
push(ptr[ebp-3])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+2])
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_t_dev::read_vec2i()::ret")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
label("func_t_dev::read_vec2i()::ret")  //2384
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_vector_int()")  //2388
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,3)
lea(ecx,ptr[ebp-4])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
dec(esp)
pushlea(ptr[ebp-5])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
mov(ebx,ptr[ebp-5])
mov(ptr[ebp-3],ebx)
inc(esp)
mov(ebx,ptr[ebp-3])
add(ptr[ecx+0],ebx)
mov(ebx,ptr[ecx+0])
mov(ptr[ebp-4],ebx)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_t_dev::read_vector_int()::ret")
add(esp,3)
inc(esp)
label("func_t_dev::read_vector_int()::ret")  //2420
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_IA()")  //2424
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,3)
pushlea(ptr[ebp-4])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_vector_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_t_dev::read_IA()::ret")
add(esp,3)
inc(esp)
label("func_t_dev::read_IA()::ret")  //2445
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_VA()")  //2449
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,3)
lea(ecx,ptr[ebp-4])
call("func_vector_qap_vertex::`ctor()")
mov(ecx,ptr[ebp-1])
dec(esp)
pushlea(ptr[ebp-5])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
mov(ebx,ptr[ebp-5])
mov(ptr[ebp-3],ebx)
inc(esp)
push(eax)
mov(eax,ptr[ebp-3])
mul(eax,3)
mov(ebx,eax)
pop(eax)
add(ptr[ecx+0],ebx)
mov(ebx,ptr[ecx+0])
mov(ptr[ebp-4],ebx)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_t_dev::read_VA()::ret")
add(esp,3)
inc(esp)
label("func_t_dev::read_VA()::ret")  //2485
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_geom()")  //2489
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,7)
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::`ctor()")
mov(ecx,ptr[ebp-1])
sub(esp,3)
pushlea(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_VA()")
mov(ecx,ptr[ebp-1])
add(esp,1)
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
add(esp,3)
sub(esp,3)
pushlea(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_IA()")
mov(ecx,ptr[ebp-1])
add(esp,1)
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
add(esp,3)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
pop(ptr[edx+5])
pop(ptr[edx+6])
jmp("func_t_dev::read_geom()::ret")
add(esp,7)
inc(esp)
label("func_t_dev::read_geom()::ret")  //2542
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int)")  //2546
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int)::ret")
inc(esp)
label("func_t_dev::write(int)::ret")  //2566
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int,int,int)")  //2570
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int,int,int)::ret")
inc(esp)
label("func_t_dev::write(int,int,int)::ret")  //2604
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(vec2i)")  //2608
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+4])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(vec2i)::ret")
inc(esp)
label("func_t_dev::write(vec2i)::ret")  //2634
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int,vec2i)")  //2638
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int,vec2i)::ret")
inc(esp)
label("func_t_dev::write(int,vec2i)::ret")  //2672
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(qap_vertex)")  //2676
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(qap_vertex)::ret")
inc(esp)
label("func_t_dev::write(qap_vertex)::ret")  //2703
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(t_out_dev)")  //2707
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(0)
lea(ecx,ptr[ebp+2])
call("func_vector_qap_vertex::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
dec(esp)
mov(eax,ptr[ebp+3])
mov(ptr[ebp-3],eax)
mov(eax,ptr[ebp-2])
mov(ebx,ptr[ecx+0])
jmp("for_8011::condition")
label("for_8011::continue")  //2737
dec(ptr[ebp-3])
label("for_8011::condition")  //2739
jz("for_8011::break",ptr[ebp-3])
mov(edx,ptr[eax+0])
mov(ptr[ebx+0],edx)
mov(edx,ptr[eax+1])
mov(ptr[ebx+1],edx)
mov(edx,ptr[eax+2])
mov(ptr[ebx+2],edx)
add(eax,3)
add(ebx,3)
jmp("for_8011::continue")
label("for_8011::break")  //2750
push(eax)
mov(eax,ptr[ebp+3])
mul(eax,3)
mov(ebx,eax)
pop(eax)
add(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+6])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(0)
lea(ecx,ptr[ebp+5])
call("func_vector_int::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+6])
mod(eax,3)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-4])
push(0)
push(ptr[ebp-3])
call("func_QapAssert(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
dec(esp)
mov(eax,ptr[ebp+6])
div(eax,3)
mov(ptr[ebp-3],eax)
mov(eax,ptr[ebp-2])
mov(ebx,ptr[ecx+0])
jmp("for_8012::condition")
label("for_8012::continue")  //2798
dec(ptr[ebp-3])
label("for_8012::condition")  //2800
jz("for_8012::break",ptr[ebp-3])
mov(edx,ptr[eax+0])
mov(ptr[ebx+0],edx)
mov(edx,ptr[eax+1])
mov(ptr[ebx+1],edx)
mov(edx,ptr[eax+2])
mov(ptr[ebx+2],edx)
add(eax,3)
add(ebx,3)
jmp("for_8012::continue")
label("for_8012::break")  //2811
mov(ebx,ptr[ebp+6])
add(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
inc(esp)
label("func_t_dev::write(t_out_dev)::ret")  //2817
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write_def(vec2i)")  //2821
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(6)
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(eax,8)
mul(eax,3)
mov(ebx,255)
shl(ebx,eax)
mov(ptr[ebp-2],ebx)
dec(esp)
inv(eax,1)
mov(ptr[ebp-3],eax)
dec(esp)
mov(eax,8)
mul(eax,2)
mov(ebx,255)
shl(ebx,eax)
mov(eax,ptr[ebp-2])
add(eax,ebx)
mov(ptr[ebp-4],eax)
dec(esp)
mov(eax,8)
mul(eax,1)
mov(ebx,255)
shl(ebx,eax)
mov(eax,ptr[ebp-2])
add(eax,ebx)
mov(ptr[ebp-5],eax)
dec(esp)
mov(eax,8)
mul(eax,0)
mov(ebx,255)
shl(ebx,eax)
mov(eax,ptr[ebp-2])
add(eax,ebx)
mov(ptr[ebp-6],eax)
dec(esp)
mov(eax,ptr[ebp-2])
mov(ptr[ebp-7],eax)
dec(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
inv(eax,30)
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-10])
push(ptr[ebp-8])
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-12])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-9])
push(ptr[ebp-10])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-13])
push(ptr[ebp-7])
push(ptr[ebp-11])
push(ptr[ebp-12])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
inc(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-9])
push(0)
push(30)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-11])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-8])
push(ptr[ebp-9])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-12])
push(ptr[ebp-7])
push(ptr[ebp-10])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-9])
push(30)
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-11])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-8])
push(ptr[ebp-9])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-12])
push(ptr[ebp-7])
push(ptr[ebp-10])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
add(ptr[ebp-9],60)
dec(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
inv(eax,30)
mov(ptr[ebp-10],eax)
pushlea(ptr[ebp-12])
push(ptr[ebp-10])
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-14])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-11])
push(ptr[ebp-12])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-15])
push(ptr[ebp-7])
push(ptr[ebp-13])
push(ptr[ebp-14])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
inc(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
push(0)
push(30)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-13])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-14])
push(ptr[ebp-7])
push(ptr[ebp-12])
push(ptr[ebp-13])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
push(30)
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-13])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-14])
push(ptr[ebp-5])
push(ptr[ebp-12])
push(ptr[ebp-13])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
dec(esp)
mov(eax,2)
mul(eax,3)
mov(ptr[ebp-10],eax)
dec(esp)
pushlea(ptr[ebp-11])
push(ptr[ebp-10])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-11],0)
jmp("for_8013::condition")
label("for_8013::continue")  //3067
inc(ptr[ebp-11])
label("for_8013::condition")  //3069
mov(eax,ptr[ebp-11])
less(eax,ptr[ebp-10])
jz("for_8013::break",eax)
dec(esp)
pushlea(ptr[ebp-12])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
jmp("for_8013::continue")
label("for_8013::break")  //3082
inc(esp)
inc(esp)
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
label("func_t_dev::write_def(vec2i)::ret")  //3093
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::`ctor()")  //3097
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
inc(esp)
label("func_t_dev::`ctor()::ret")  //3104
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_mem::`ctor()")  //3108
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
inc(esp)
label("func_t_mem::`ctor()::ret")  //3116
mov(esp,ebp)
pop(ebp)
ret()
label("func_g_obj_addr()")  //3120
push(ebp)
mov(ebp,esp)
mov(eax,64)
add(eax,7)
mov(ebx,1024)
mul(ebx,eax)
add(ebx,512)
mov(edx,ptr[ebp+2])
mov(ptr[edx+0],ebx)
jmp("func_g_obj_addr()::ret")
label("func_g_obj_addr()::ret")  //3131
mov(esp,ebp)
pop(ebp)
ret()
label("func_get_obj_pos(t_input)")  //3135
push(ebp)
mov(ebp,esp)
sub(esp,2)
dec(esp)
sub(esp,2)
inv(eax,200)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-3])
push(30)
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
call("func_g_obj_addr()")
add(esp,1)
mov(eax,ptr[ebp-4])
mov(ptr[ebp-3],eax)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,2)
mov(ptr[ebp-4],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-4])
call("func_get_int(int)")
add(esp,2)
jz("if_1005::else",ptr[ebp-5])
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,0)
mov(ptr[ebp-6],eax)
pushlea(ptr[ebp-7])
push(ptr[ebp-6])
call("func_get_int(int)")
add(esp,2)
mov(ebx,ptr[ebp-7])
mov(ptr[ebp-2],ebx)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,1)
mov(ptr[ebp-6],eax)
pushlea(ptr[ebp-7])
push(ptr[ebp-6])
call("func_get_int(int)")
add(esp,2)
mov(ebx,ptr[ebp-7])
mov(ptr[ebp-1],ebx)
inc(esp)
inc(esp)
jmp("if_1005::end")
label("if_1005::else")  //3199
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,2)
mov(ptr[ebp-6],eax)
pushlea(ptr[ebp-7])
push(ptr[ebp-6])
push(1)
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
label("if_1005::end")  //3212
inc(esp)
inc(esp)
dec(esp)
mov(ptr[ebp-4],0)
dec(esp)
mov(ptr[ebp-5],0)
dec(esp)
mov(ptr[ebp-6],0)
dec(esp)
mov(ptr[ebp-7],0)
mov(ptr[ebp-4],37)
mov(ptr[ebp-5],39)
mov(ptr[ebp-6],38)
mov(ptr[ebp-7],40)
dec(esp)
mov(ptr[ebp-8],2)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-4])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1006::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
sub(ptr[ebp-2],ebx)
jmp("if_1006::end")
label("if_1006::end")  //3239
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-5])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1007::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
add(ptr[ebp-2],ebx)
jmp("if_1007::end")
label("if_1007::end")  //3251
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-6])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1008::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
add(ptr[ebp-1],ebx)
jmp("if_1008::end")
label("if_1008::end")  //3263
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-7])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1009::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
sub(ptr[ebp-1],ebx)
jmp("if_1009::end")
label("if_1009::end")  //3275
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,0)
mov(ptr[ebp-9],eax)
pushlea(ptr[ebp-10])
push(ptr[ebp-9])
push(ptr[ebp-2])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,1)
mov(ptr[ebp-9],eax)
pushlea(ptr[ebp-10])
push(ptr[ebp-9])
push(ptr[ebp-1])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
mov(edx,ptr[ebp+11])
push(ptr[ebp-1])
push(ptr[ebp-2])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_get_obj_pos(t_input)::ret")
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
add(esp,2)
label("func_get_obj_pos(t_input)::ret")  //3314
mov(esp,ebp)
pop(ebp)
ret()
label("func_gen_grid(vec2i)")  //3318
push(ebp)
mov(ebp,esp)
sub(esp,7)
dec(esp)
sub(esp,7)
mov(eax,64)
mul(eax,4)
mul(eax,16)
mul(eax,2)
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-15])
push(ptr[ebp-8])
call("func_new_geom(int)")
add(esp,2)
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-15])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,7)
inc(esp)
sub(esp,7)
sub(esp,7)
pushlea(ptr[ebp-21])
push(0)
push(0)
push(10)
push(10)
lea(ecx,ptr[ebp-7])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-20])
push(ptr[ebp-21])
pop(ptr[ebp-14])
pop(ptr[ebp-13])
pop(ptr[ebp-12])
pop(ptr[ebp-11])
pop(ptr[ebp-10])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
add(esp,7)
sub(esp,7)
dec(esp)
sub(esp,7)
mov(eax,64)
mul(eax,2)
mul(eax,4)
mov(ptr[ebp-22],eax)
pushlea(ptr[ebp-29])
push(ptr[ebp-22])
call("func_new_geom(int)")
add(esp,2)
push(ptr[ebp-23])
push(ptr[ebp-24])
push(ptr[ebp-25])
push(ptr[ebp-26])
push(ptr[ebp-27])
push(ptr[ebp-28])
push(ptr[ebp-29])
pop(ptr[ebp-21])
pop(ptr[ebp-20])
pop(ptr[ebp-19])
pop(ptr[ebp-18])
pop(ptr[ebp-17])
pop(ptr[ebp-16])
pop(ptr[ebp-15])
add(esp,7)
inc(esp)
dec(esp)
mov(ptr[ebp-22],0)
jmp("for_8014::condition")
label("for_8014::continue")  //3404
inc(ptr[ebp-22])
label("for_8014::condition")  //3406
mov(eax,ptr[ebp-22])
less(eax,64)
jz("for_8014::break",eax)
push(eax)
mov(eax,255)
shl(eax,24)
push(eax)
mov(eax,ptr[ebp-22])
mul(eax,7)
mov(ebx,16)
add(ebx,eax)
shl(ebx,8)
pop(eax)
add(eax,ebx)
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-15],ebx)
sub(esp,2)
dec(esp)
sub(esp,2)
mov(eax,16)
mul(eax,ptr[ebp-22])
mov(ebx,ptr[ebp+2])
add(ebx,eax)
mov(ptr[ebp-25],ebx)
pushlea(ptr[ebp-27])
push(ptr[ebp-25])
push(0)
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-26])
push(ptr[ebp-27])
pop(ptr[ebp-24])
pop(ptr[ebp-23])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-25])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-23])
push(ptr[ebp-24])
lea(ecx,ptr[ebp-21])
call("func_t_out_dev::add_with_color(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
jmp("for_8014::continue")
add(esp,2)
label("for_8014::break")  //3460
inc(esp)
dec(esp)
mov(ptr[ebp-22],0)
jmp("for_8015::condition")
label("for_8015::continue")  //3465
inc(ptr[ebp-22])
label("for_8015::condition")  //3467
mov(eax,ptr[ebp-22])
less(eax,16)
jz("for_8015::break",eax)
sub(esp,2)
dec(esp)
sub(esp,2)
mov(eax,16)
mul(eax,ptr[ebp-22])
mov(ptr[ebp-25],eax)
pushlea(ptr[ebp-27])
push(0)
push(ptr[ebp-25])
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-26])
push(ptr[ebp-27])
pop(ptr[ebp-24])
pop(ptr[ebp-23])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-25])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-20])
push(ptr[ebp-21])
push(ptr[ebp-23])
push(ptr[ebp-24])
lea(ecx,ptr[ebp-7])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
add(esp,2)
jmp("for_8015::continue")
label("for_8015::break")  //3505
inc(esp)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
pop(ptr[edx+5])
pop(ptr[edx+6])
jmp("func_gen_grid(vec2i)::ret")
add(esp,7)
add(esp,7)
add(esp,7)
label("func_gen_grid(vec2i)::ret")  //3526
mov(esp,ebp)
pop(ebp)
ret()
label("func_get_grid(vec2i)")  //3530
push(ebp)
mov(ebp,esp)
dec(esp)
lea(ecx,ptr[ebp-1])
call("func_t_dev::`ctor()")
dec(esp)
dec(esp)
pushlea(ptr[ebp-2])
call("func_g_mem_addr()")
add(esp,1)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_get_int(int)")
add(esp,2)
mov(ebx,ptr[ebp-3])
mov(ptr[ebp-1],ebx)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
lea(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
add(esp,1)
not(eax,ptr[ebp-2])
jz("if_1010::end",eax)
dec(esp)
mov(eax,ptr[ebp-1])
mov(ptr[ebp-3],eax)
sub(esp,7)
dec(esp)
pushlea(ptr[ebp-10])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_gen_grid(vec2i)")
add(esp,3)
pushlea(ptr[ebp-11])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
lea(ecx,ptr[ebp-1])
call("func_t_dev::write(t_out_dev)")
add(esp,8)
inc(esp)
add(esp,7)
dec(esp)
mov(eax,ptr[ebp-1])
sub(eax,ptr[ebp-3])
mov(ptr[ebp-4],eax)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
sub(eax,1)
mov(ptr[ebp-5],eax)
pushlea(ptr[ebp-6])
push(ptr[ebp-5])
push(ptr[ebp-4])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
mov(ebx,ptr[ebp-3])
mov(ptr[ebp-1],ebx)
inc(esp)
inc(esp)
jmp("if_1010::end")
label("if_1010::end")  //3600
inc(esp)
sub(esp,7)
pushlea(ptr[ebp-8])
lea(ecx,ptr[ebp-1])
call("func_t_dev::read_geom()")
add(esp,1)
mov(edx,ptr[ebp+4])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
pop(ptr[edx+5])
pop(ptr[edx+6])
jmp("func_get_grid(vec2i)::ret")
add(esp,7)
inc(esp)
label("func_get_grid(vec2i)::ret")  //3625
mov(esp,ebp)
pop(ebp)
ret()
label("func_cr_test(t_input)")  //3629
push(ebp)
mov(ebp,esp)
sub(esp,2)
sub(esp,2)
pushlea(ptr[ebp-4])
push(ptr[ebp+10])
push(ptr[ebp+9])
push(ptr[ebp+8])
push(ptr[ebp+7])
push(ptr[ebp+6])
push(ptr[ebp+5])
push(ptr[ebp+4])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_get_obj_pos(t_input)")
add(esp,10)
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,2)
sub(esp,2)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
sub(esp,7)
dec(esp)
sub(esp,7)
mov(eax,1024)
mul(eax,4)
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-19])
push(ptr[ebp-12])
call("func_new_geom(int)")
add(esp,2)
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
pop(ptr[ebp-11])
pop(ptr[ebp-10])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
add(esp,7)
inc(esp)
mov(eax,255)
shl(eax,24)
push(eax)
mov(eax,128)
shl(eax,8)
pop(ebx)
add(ebx,eax)
mov(ptr[ebp-5],ebx)
jz("if_1011::else",1)
sub(esp,2)
sub(esp,2)
pushlea(ptr[ebp-15])
push(0)
push(0)
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-14])
push(ptr[ebp-15])
pop(ptr[ebp-13])
pop(ptr[ebp-12])
add(esp,2)
sub(esp,7)
sub(esp,7)
pushlea(ptr[ebp-27])
push(ptr[ebp-4])
push(ptr[ebp-3])
push(30)
push(30)
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-21])
push(ptr[ebp-22])
push(ptr[ebp-23])
push(ptr[ebp-24])
push(ptr[ebp-25])
push(ptr[ebp-26])
push(ptr[ebp-27])
pop(ptr[ebp-20])
pop(ptr[ebp-19])
pop(ptr[ebp-18])
pop(ptr[ebp-17])
pop(ptr[ebp-16])
pop(ptr[ebp-15])
pop(ptr[ebp-14])
add(esp,7)
mov(eax,255)
shl(eax,24)
push(eax)
mov(eax,128)
shl(eax,8)
pop(ebx)
add(ebx,eax)
push(ebx)
mov(eax,255)
shl(eax,16)
pop(ebx)
add(ebx,eax)
mov(ptr[ebp-5],ebx)
sub(esp,7)
dec(esp)
sub(esp,7)
mov(eax,ptr[ebp-3])
sub(eax,64)
mov(ptr[ebp-28],eax)
pushlea(ptr[ebp-35])
push(ptr[ebp-4])
push(ptr[ebp-28])
push(100)
push(10)
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-29])
push(ptr[ebp-30])
push(ptr[ebp-31])
push(ptr[ebp-32])
push(ptr[ebp-33])
push(ptr[ebp-34])
push(ptr[ebp-35])
pop(ptr[ebp-27])
pop(ptr[ebp-26])
pop(ptr[ebp-25])
pop(ptr[ebp-24])
pop(ptr[ebp-23])
pop(ptr[ebp-22])
pop(ptr[ebp-21])
add(esp,7)
inc(esp)
sub(esp,7)
dec(esp)
sub(esp,7)
mov(eax,200)
add(eax,ptr[ebp-4])
mov(ptr[ebp-35],eax)
pushlea(ptr[ebp-42])
push(ptr[ebp-35])
push(ptr[ebp-3])
push(10)
push(60)
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-36])
push(ptr[ebp-37])
push(ptr[ebp-38])
push(ptr[ebp-39])
push(ptr[ebp-40])
push(ptr[ebp-41])
push(ptr[ebp-42])
pop(ptr[ebp-34])
pop(ptr[ebp-33])
pop(ptr[ebp-32])
pop(ptr[ebp-31])
pop(ptr[ebp-30])
pop(ptr[ebp-29])
pop(ptr[ebp-28])
add(esp,7)
inc(esp)
dec(esp)
pushlea(ptr[ebp-35])
push(ptr[ebp-14])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-20])
push(ptr[ebp-12])
push(ptr[ebp-13])
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
dec(esp)
pushlea(ptr[ebp-35])
push(ptr[ebp-21])
push(ptr[ebp-22])
push(ptr[ebp-23])
push(ptr[ebp-24])
push(ptr[ebp-25])
push(ptr[ebp-26])
push(ptr[ebp-27])
push(ptr[ebp-12])
push(ptr[ebp-13])
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
dec(esp)
pushlea(ptr[ebp-35])
push(ptr[ebp-28])
push(ptr[ebp-29])
push(ptr[ebp-30])
push(ptr[ebp-31])
push(ptr[ebp-32])
push(ptr[ebp-33])
push(ptr[ebp-34])
push(ptr[ebp-12])
push(ptr[ebp-13])
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
add(esp,7)
add(esp,7)
add(esp,7)
sub(esp,2)
sub(esp,7)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-15])
push(0)
push(0)
call("func_vec2i(int,int)")
add(esp,3)
pushlea(ptr[ebp-22])
push(ptr[ebp-14])
push(ptr[ebp-15])
call("func_get_grid(vec2i)")
add(esp,3)
pushlea(ptr[ebp-24])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
call("func_add(vec2i,vec2i)")
add(esp,5)
pushlea(ptr[ebp-25])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-20])
push(ptr[ebp-21])
push(ptr[ebp-22])
push(ptr[ebp-23])
push(ptr[ebp-24])
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
add(esp,2)
add(esp,7)
add(esp,2)
jz("if_1012::end",0)
sub(esp,7)
sub(esp,7)
pushlea(ptr[ebp-27])
push(0)
push(0)
push(10)
push(10)
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-21])
push(ptr[ebp-22])
push(ptr[ebp-23])
push(ptr[ebp-24])
push(ptr[ebp-25])
push(ptr[ebp-26])
push(ptr[ebp-27])
pop(ptr[ebp-20])
pop(ptr[ebp-19])
pop(ptr[ebp-18])
pop(ptr[ebp-17])
pop(ptr[ebp-16])
pop(ptr[ebp-15])
pop(ptr[ebp-14])
add(esp,7)
dec(esp)
mov(ptr[ebp-21],0)
jmp("for_8016::condition")
label("for_8016::continue")  //3916
inc(ptr[ebp-21])
label("for_8016::condition")  //3918
mov(eax,ptr[ebp-21])
less(eax,64)
jz("for_8016::break",eax)
push(eax)
mov(eax,255)
shl(eax,24)
push(eax)
mov(eax,ptr[ebp-21])
mul(eax,7)
mov(ebx,16)
add(ebx,eax)
shl(ebx,8)
pop(eax)
add(eax,ebx)
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-5],ebx)
sub(esp,2)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-4])
push(eax)
mov(eax,16)
mul(eax,ptr[ebp-21])
pop(ebx)
add(ebx,eax)
mov(ptr[ebp-24],ebx)
pushlea(ptr[ebp-26])
push(ptr[ebp-24])
push(0)
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-25])
push(ptr[ebp-26])
pop(ptr[ebp-23])
pop(ptr[ebp-22])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-24],0)
jmp("for_8017::condition")
label("for_8017::continue")  //3961
inc(ptr[ebp-24])
label("for_8017::condition")  //3963
mov(eax,ptr[ebp-24])
less(eax,16)
jz("for_8017::break",eax)
mov(eax,16)
mul(eax,ptr[ebp-24])
mov(ebx,ptr[ebp-1])
add(ebx,eax)
mov(ptr[ebp-22],ebx)
dec(esp)
pushlea(ptr[ebp-25])
push(ptr[ebp-14])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-20])
push(ptr[ebp-22])
push(ptr[ebp-23])
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::add_with_color(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
jmp("for_8017::continue")
label("for_8017::break")  //3988
inc(esp)
jmp("for_8016::continue")
add(esp,2)
label("for_8016::break")  //3992
inc(esp)
add(esp,7)
jmp("if_1012::end")
label("if_1012::end")  //3996
add(esp,2)
jmp("if_1011::end")
label("if_1011::else")  //3999
sub(esp,7)
pushlea(ptr[ebp-18])
push(ptr[ebp-4])
push(ptr[ebp-3])
push(30)
push(30)
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
pop(ptr[ebp-11])
pop(ptr[ebp-10])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
add(esp,7)
label("if_1011::end")  //4024
sub(esp,2)
lea(ecx,ptr[ebp-13])
call("func_t_mem::`ctor()")
dec(esp)
dec(esp)
mov(eax,1024)
mul(eax,1024)
mov(ptr[ebp-14],eax)
pushlea(ptr[ebp-15])
push(ptr[ebp-14])
call("func_alloc(int)")
add(esp,2)
mov(ebx,ptr[ebp-15])
mov(ptr[ebp-13],ebx)
inc(esp)
inc(esp)
dec(esp)
lea(ecx,ptr[ebp-14])
call("func_t_dev::`ctor()")
mov(ebx,ptr[ebp-13])
mov(ptr[ebp-14],ebx)
dec(esp)
pushlea(ptr[ebp-15])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
lea(ecx,ptr[ebp-14])
call("func_t_dev::write(t_out_dev)")
add(esp,8)
inc(esp)
push(eax)
mov(eax,ptr[ebp-14])
sub(eax,ptr[ebp-13])
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-12],ebx)
mov(edx,ptr[ebp+11])
push(ptr[ebp-12])
push(ptr[ebp-13])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_cr_test(t_input)::ret")
inc(esp)
add(esp,2)
add(esp,7)
add(esp,2)
add(esp,2)
label("func_cr_test(t_input)::ret")  //4076
mov(esp,ebp)
pop(ebp)
ret()
label("func_main(int)")  //4080
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-1])
call("func_g_ptr_addr()")
add(esp,1)
pushlea(ptr[ebp-2])
push(ptr[ebp-1])
push(0)
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-1])
call("func_g_mem_addr()")
add(esp,1)
mov(eax,1024)
mul(eax,512)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_alloc(int)")
add(esp,2)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-3])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
sub(esp,9)
lea(ecx,ptr[ebp-9])
call("func_t_input::`ctor()")
dec(esp)
lea(ecx,ptr[ebp-10])
call("func_t_dev::`ctor()")
mov(ebx,ptr[ebp+2])
mov(ptr[ebp-10],ebx)
sub(esp,2)
pushlea(ptr[ebp-12])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_vec2i()")
add(esp,1)
push(ptr[ebp-11])
push(ptr[ebp-12])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_int()")
add(esp,1)
mov(ebx,ptr[ebp-11])
mov(ptr[ebp-7],ebx)
inc(esp)
sub(esp,3)
pushlea(ptr[ebp-13])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_vector_int()")
add(esp,1)
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,3)
sub(esp,3)
pushlea(ptr[ebp-13])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_vector_int()")
add(esp,1)
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
pop(ptr[ebp-3])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,3)
sub(esp,2)
sub(esp,2)
pushlea(ptr[ebp-14])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
call("func_cr_test(t_input)")
add(esp,10)
push(ptr[ebp-13])
push(ptr[ebp-14])
pop(ptr[ebp-12])
pop(ptr[ebp-11])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
call("func_setebx(int)")
add(esp,2)
inc(esp)
mov(ecx,1)
mov(edx,ptr[ebp+3])
push(ptr[ebp-12])
pop(ptr[edx+0])
jmp("func_main(int)::ret")
add(esp,2)
inc(esp)
add(esp,9)
label("func_main(int)::ret")  //4201
mov(esp,ebp)
pop(ebp)
ret()
label("begin")  //4205
dec(esp)
pushlea(ptr[ebp-1])
push(ecx)
call("func_main(int)")
add(esp,2)
mov(eax,ptr[ebp-1])
inc(esp)
mov(err,1)