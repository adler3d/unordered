/*
1181,3824,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
48,2,64,0
163,2,7,0
48,3,1024,0
207,3,2,0
65,5,6,2
61,5,0,3
1181,11,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
1212,6,-2,0
1185,1,0,0
163,7,1,0
65,2,6,-2
61,6,-1,2
1194,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-3,0
1190,6,-1,0
1185,281,0,0
163,7,2,0
65,2,6,-3
61,6,-2,2
1194,7,0,0
88,2,6,-2
6,47,2,0
1197,7,0,0
48,2,64,0
163,2,8,0
48,3,1024,0
207,3,2,0
61,6,-3,3
65,3,6,-3
61,6,-2,3
1194,7,0,0
1181,47,0,0
1208,0,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-2
180,2,6,2
61,6,-3,2
1212,6,-4,0
1190,6,-1,0
1190,6,-3,0
1185,297,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
65,5,6,3
1190,6,-2,0
1193,5,0,0
1181,66,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,4,0,0
1190,4,1,0
1185,322,0,0
65,4,6,-1
163,7,3,0
65,5,6,2
1190,6,-2,0
1193,5,0,0
1181,88,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
63,4,1,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
186,7,2,0
1211,4,6,-2
1185,92,0,0
65,3,6,3
61,6,-2,3
65,3,6,2
61,6,-1,3
65,5,6,4
1190,6,-1,0
1190,6,-2,0
1193,5,0,0
1193,5,1,0
1181,121,0,0
163,7,2,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1212,6,-1,0
1190,6,3,0
1190,6,2,0
1185,297,0,0
163,7,3,0
65,5,6,4
1190,6,-1,0
1193,5,0,0
1181,139,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1212,6,-1,0
1190,6,2,0
1190,6,3,0
1185,322,0,0
163,7,3,0
65,5,6,4
1190,6,-1,0
1193,5,0,0
1181,157,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
186,7,2,0
65,2,6,4
203,2,6,2
61,6,-1,2
65,2,6,5
203,2,6,3
61,6,-2,2
1212,6,-4,0
1190,6,-1,0
1190,6,-2,0
1185,104,0,0
163,7,3,0
65,5,6,6
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1181,187,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
186,7,2,0
65,2,6,4
180,2,6,2
61,6,-1,2
65,2,6,5
180,2,6,3
61,6,-2,2
1212,6,-4,0
1190,6,-1,0
1190,6,-2,0
1185,104,0,0
163,7,3,0
65,5,6,6
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1181,217,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
186,7,2,0
65,2,6,3
226,2,6,2
61,6,-1,2
65,2,6,4
226,2,6,2
61,6,-2,2
1212,6,-4,0
1190,6,-1,0
1190,6,-2,0
1185,104,0,0
163,7,3,0
65,5,6,5
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1181,247,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
186,7,2,0
65,2,6,3
249,2,6,2
61,6,-1,2
65,2,6,4
249,2,6,2
61,6,-2,2
1212,6,-4,0
1190,6,-1,0
1190,6,-2,0
1185,104,0,0
163,7,3,0
65,5,6,5
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1181,277,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
63,6,-1,0
65,2,6,2
64,6,-1,2
65,5,6,3
1190,6,-1,0
1193,5,0,0
1181,293,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
65,2,6,3
68,2,6,2
65,2,6,3
163,2,1,0
65,5,6,4
61,5,0,2
1181,307,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
65,3,6,2
65,5,6,3
63,5,0,0
1181,318,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
63,6,-1,0
65,2,6,3
65,3,6,2
138,2,3,0
61,6,-1,2
65,5,6,4
1190,6,-1,0
1193,5,0,0
1181,336,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
88,2,6,2
6,348,2,0
1208,0,0,0
48,8,-1,0
1181,348,0,0
1208,0,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
65,2,6,3
318,2,6,2
6,362,2,0
1208,0,0,0
48,8,-1,0
1181,362,0,0
1208,0,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
65,2,6,3
341,2,6,2
6,378,2,0
65,5,6,4
1190,6,3,0
1193,5,0,0
1181,383,0,0
1181,378,0,0
1208,0,0,0
65,5,6,4
1190,6,2,0
1193,5,0,0
1181,383,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
65,2,6,3
364,2,6,2
6,398,2,0
65,5,6,4
1190,6,3,0
1193,5,0,0
1181,403,0,0
1181,398,0,0
1208,0,0,0
65,5,6,4
1190,6,2,0
1193,5,0,0
1181,403,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
1212,6,-1,0
1190,6,4,0
1190,6,2,0
1185,387,0,0
163,7,3,0
1212,6,-2,0
1190,6,-1,0
1190,6,3,0
1185,367,0,0
163,7,3,0
65,5,6,5
1190,6,-2,0
1193,5,0,0
1181,428,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
1211,4,4,1
1185,92,0,0
65,4,6,-1
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
186,7,3,0
1211,4,6,-3
1185,432,0,0
65,3,6,4
61,6,-3,3
1190,6,3,0
1190,6,2,0
1193,6,-2,0
1193,6,-1,0
65,5,6,5
1190,6,-1,0
1190,6,-2,0
1190,6,-3,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,467,0,0
163,7,3,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
48,2,3,0
226,2,6,2
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,15,0,0
65,4,6,-1
163,7,2,0
65,3,6,-3
61,4,0,3
1194,7,0,0
1194,7,0,0
63,4,1,0
65,3,6,2
61,4,2,3
65,5,6,3
63,5,0,0
1181,497,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,4,0,0
1190,6,2,0
1185,297,0,0
65,4,6,-1
163,7,3,0
65,3,6,-2
61,4,0,3
1194,7,0,0
65,5,6,3
1190,4,0,0
1193,5,0,0
1181,521,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,501,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
65,4,6,-1
1185,501,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
65,5,6,4
1190,4,0,0
1193,5,0,0
1181,551,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
341,2,4,2
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,4,0
65,4,6,-1
1185,501,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
1190,6,2,0
65,4,6,-1
1185,525,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1196,4,1,0
65,5,6,5
1190,4,0,0
1193,5,0,0
1181,595,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
341,2,4,2
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,501,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,4,0
1190,6,3,0
65,4,6,-1
1185,525,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1196,4,1,0
65,5,6,5
1190,4,0,0
1193,5,0,0
1181,639,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
1197,7,0,0
186,7,2,0
1212,6,-2,0
1190,6,2,0
1185,281,0,0
65,4,6,-1
163,7,2,0
65,2,6,2
163,2,1,0
61,6,-3,2
1212,6,-4,0
1190,6,-3,0
1185,281,0,0
65,4,6,-1
163,7,2,0
1212,6,-6,0
1190,6,-2,0
1190,6,-4,0
1185,104,0,0
65,4,6,-1
163,7,3,0
65,5,6,3
1190,6,-5,0
1190,6,-6,0
1193,5,0,0
1193,5,1,0
1181,682,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
186,7,2,0
186,7,3,0
1212,6,-2,0
1190,6,2,0
1185,281,0,0
65,4,6,-1
163,7,2,0
65,2,6,2
163,2,1,0
61,6,-3,2
1212,6,-5,0
1190,6,-3,0
65,4,6,-1
1185,643,0,0
65,4,6,-1
163,7,2,0
1212,6,-8,0
1190,6,-2,0
1190,6,-4,0
1190,6,-5,0
1185,446,0,0
65,4,6,-1
163,7,4,0
65,5,6,3
1190,6,-6,0
1190,6,-7,0
1190,6,-8,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,729,0,0
163,7,3,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
186,7,3,0
65,2,6,2
203,2,4,1
209,2,3,0
65,3,4,0
161,3,2,0
61,6,-2,3
1212,6,-5,0
1190,6,-2,0
65,4,6,-1
1185,686,0,0
65,4,6,-1
163,7,2,0
65,5,6,3
1190,6,-3,0
1190,6,-4,0
1190,6,-5,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,763,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
186,7,3,0
1211,4,6,-4
1185,1455,0,0
65,4,6,-1
65,3,4,0
61,6,-4,3
1187,2,0,0
65,2,4,1
209,2,3,0
46,3,2,0
1191,2,0,0
61,6,-3,3
1187,2,0,0
65,2,4,2
209,2,3,0
46,3,2,0
1191,2,0,0
61,6,-2,3
65,5,6,2
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,800,0,0
163,7,3,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
347,2,0,0
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
186,7,3,0
1212,6,-4,0
1189,0,0,0
65,4,6,-1
1185,733,0,0
65,4,6,-1
163,7,2,0
65,5,6,2
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,838,0,0
163,7,3,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
347,2,0,0
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
186,7,3,0
65,2,4,1
186,2,1,0
61,6,-2,2
1212,6,-5,0
1190,6,-2,0
65,4,6,-1
1185,733,0,0
65,4,6,-1
163,7,2,0
65,5,6,2
1190,6,-3,0
1190,6,-4,0
1190,6,-5,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,881,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
186,7,3,0
1211,4,6,-4
1185,1197,0,0
65,4,6,-1
1197,7,0,0
1212,6,-5,0
1190,4,2,0
1211,4,6,-4
1185,471,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
63,6,-5,0
1181,907,0,0
1208,0,0,0
1196,6,-5,0
1208,0,0,0
65,2,6,-5
341,2,4,1
6,930,2,0
186,7,3,0
1197,7,0,0
1212,6,-8,0
1190,6,-5,0
65,4,6,-1
1185,733,0,0
65,4,6,-1
163,7,2,0
1212,6,-9,0
1190,6,-6,0
1190,6,-7,0
1190,6,-8,0
1211,4,6,-4
1185,599,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,3,0
1181,905,0,0
1208,0,0,0
1194,7,0,0
65,5,6,2
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,942,0,0
163,7,3,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,3,0
1190,4,1,0
1185,353,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1197,7,0,0
63,6,-2,0
1181,964,0,0
1208,0,0,0
1196,6,-2,0
1208,0,0,0
65,2,6,-2
341,2,4,1
6,1025,2,0
186,7,3,0
186,7,3,0
1212,6,-8,0
1190,6,-2,0
1211,4,6,2
1185,733,0,0
65,4,6,-1
163,7,2,0
1190,6,-6,0
1190,6,-7,0
1190,6,-8,0
1193,6,-5,0
1193,6,-4,0
1193,6,-3,0
163,7,3,0
186,7,3,0
186,7,3,0
1212,6,-11,0
1190,6,-2,0
65,4,6,-1
1185,733,0,0
65,4,6,-1
163,7,2,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1193,6,-8,0
1193,6,-7,0
1193,6,-6,0
163,7,3,0
1197,7,0,0
1212,6,-9,0
1190,6,-5,0
1190,6,-8,0
1185,353,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1197,7,0,0
1212,6,-9,0
1190,6,-4,0
1190,6,-7,0
1185,353,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1197,7,0,0
1212,6,-9,0
1190,6,-3,0
1190,6,-6,0
1185,353,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
163,7,3,0
163,7,3,0
1181,962,0,0
1208,0,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
65,2,6,2
203,2,4,1
209,2,3,0
65,3,4,0
161,3,2,0
65,5,6,3
61,5,0,3
1181,1046,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
1212,6,-3,0
1190,4,1,0
65,4,6,-1
1185,1032,0,0
65,4,6,-1
163,7,2,0
65,2,6,-3
61,6,-2,2
1194,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-4,0
1189,0,0,0
1211,4,6,4
1185,1032,0,0
65,4,6,-1
163,7,2,0
65,2,6,-4
61,6,-3,2
1194,7,0,0
1197,7,0,0
65,2,6,2
61,6,-4,2
1197,7,0,0
65,2,6,3
61,6,-5,2
1197,7,0,0
63,6,-6,0
1181,1088,0,0
1208,0,0,0
1196,6,-6,0
1208,0,0,0
65,2,6,-6
341,2,6,5
6,1105,2,0
65,2,6,-2
65,3,6,-3
58,5,3,0
55,2,5,0
65,5,3,1
180,5,6,-4
61,2,1,5
65,5,3,2
180,5,6,-5
61,2,2,5
178,6,-2,3
178,6,-3,3
1181,1086,0,0
1208,0,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
65,3,6,5
176,4,1,3
1187,2,0,0
65,2,6,5
209,2,3,0
46,3,2,0
1191,2,0,0
176,4,0,3
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
1212,6,-3,0
1190,4,1,0
65,4,6,-1
1185,1032,0,0
65,4,6,-1
163,7,2,0
65,2,6,-3
61,6,-2,2
1194,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-4,0
1189,0,0,0
1211,4,6,5
1185,1032,0,0
65,4,6,-1
163,7,2,0
65,2,6,-4
61,6,-3,2
1194,7,0,0
1197,7,0,0
65,2,6,2
61,6,-4,2
1197,7,0,0
65,2,6,3
61,6,-5,2
1197,7,0,0
63,6,-6,0
1181,1162,0,0
1208,0,0,0
1196,6,-6,0
1208,0,0,0
65,2,6,-6
341,2,6,6
6,1178,2,0
65,2,6,-2
65,3,6,-3
68,2,6,4
65,5,3,1
180,5,6,-4
61,2,1,5
65,5,3,2
180,5,6,-5
61,2,2,5
178,6,-2,3
178,6,-3,3
1181,1160,0,0
1208,0,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
65,3,6,6
176,4,1,3
1187,2,0,0
65,2,6,6
209,2,3,0
46,3,2,0
1191,2,0,0
176,4,0,3
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
63,4,1,0
63,4,2,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
48,2,1,0
226,2,6,2
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,15,0,0
65,4,6,-1
163,7,2,0
65,3,6,-3
61,4,0,3
1194,7,0,0
1194,7,0,0
63,4,1,0
65,3,6,2
61,4,2,3
65,5,6,3
63,5,0,0
1181,1236,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
341,2,4,2
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,4,0,0
1190,6,2,0
1185,297,0,0
65,4,6,-1
163,7,3,0
65,3,6,-2
61,4,0,3
1194,7,0,0
1196,4,1,0
65,5,6,3
1190,4,0,0
1193,5,0,0
1181,1273,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,2,0
1185,281,0,0
65,4,6,-1
163,7,2,0
65,5,6,3
1190,6,-2,0
1193,5,0,0
1181,1294,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,0
180,2,6,2
203,2,4,1
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
65,4,6,-1
1185,1277,0,0
65,4,6,-1
163,7,2,0
65,5,6,3
1190,6,-3,0
1193,5,0,0
1181,1322,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
347,2,0,0
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1189,0,0,0
65,4,6,-1
1185,1298,0,0
65,4,6,-1
163,7,2,0
65,5,6,2
1190,6,-2,0
1193,5,0,0
1181,1356,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,4,1
347,2,0,0
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,4,1
186,2,1,0
61,6,-2,2
1212,6,-3,0
1190,6,-2,0
65,4,6,-1
1185,1298,0,0
65,4,6,-1
163,7,2,0
65,5,6,2
1190,6,-3,0
1193,5,0,0
1181,1395,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
65,2,6,3
203,2,6,4
61,6,-2,2
1197,7,0,0
65,2,6,4
61,6,-3,2
65,5,6,2
65,2,4,0
1181,1416,0,0
1208,0,0,0
1199,6,-3,0
1208,0,0,0
21,1425,6,-3
65,3,6,-2
58,3,3,0
161,3,5,0
55,2,3,0
1194,2,0,0
1196,6,-2,0
1181,1414,0,0
1208,0,0,0
65,3,6,4
176,4,1,3
65,3,6,4
176,4,0,3
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
65,2,6,2
203,2,4,1
209,2,1,0
65,3,4,0
161,3,2,0
65,5,6,3
61,5,0,3
1181,1451,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
63,4,1,0
63,4,2,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,4,0
1211,4,4,3
1185,1240,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
1211,4,4,3
1185,1240,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,2,0
1211,4,4,3
1185,1240,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
65,5,6,5
63,5,0,0
1181,1501,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,4,0
1190,6,3,0
1190,6,2,0
1211,4,4,0
1185,599,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
65,5,6,5
63,5,0,0
1181,1524,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
186,7,2,0
1197,7,0,0
1212,6,-3,0
1190,6,3,0
1190,6,2,0
1185,104,0,0
65,4,6,-1
163,7,3,0
1212,6,-4,0
1190,4,6,0
1190,6,-2,0
1190,6,-3,0
1211,4,4,0
1185,555,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
65,5,6,4
63,5,0,0
1181,1555,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,4,6,0
1190,6,3,0
1190,6,2,0
1211,4,4,0
1185,555,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
65,5,6,4
63,5,0,0
1181,1578,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,4,6,0
1190,6,3,0
1190,6,2,0
1211,4,4,0
1185,555,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
65,2,4,1
186,2,1,0
65,5,6,4
61,5,0,2
1181,1603,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,6,6
255,2,3,0
48,3,0,0
276,3,2,0
61,6,-2,3
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
65,2,4,1
61,6,-2,2
1197,7,0,0
63,6,-3,0
1181,1634,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,3
6,1657,2,0
186,7,3,0
1197,7,0,0
1212,6,-6,0
1190,6,-3,0
1211,4,6,2
1185,733,0,0
65,4,6,-1
163,7,2,0
1212,6,-7,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
1211,4,4,0
1185,599,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,3,0
1181,1632,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
63,6,-3,0
1181,1664,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,6
6,1690,2,0
1197,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-4,0
1190,6,-3,0
1211,4,6,5
1185,1298,0,0
65,4,6,-1
163,7,2,0
65,2,6,-2
180,2,6,-4
61,6,-5,2
1212,6,-6,0
1190,6,-5,0
1211,4,4,3
1185,1240,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1181,1662,0,0
1208,0,0,0
1194,7,0,0
65,5,6,9
63,5,0,0
1181,1697,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,6,8
255,2,3,0
48,3,0,0
276,3,2,0
61,6,-2,3
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
65,2,4,1
61,6,-2,2
1197,7,0,0
63,6,-3,0
1181,1728,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,5
6,1774,2,0
186,7,3,0
186,7,3,0
1212,6,-9,0
1190,6,-3,0
1211,4,6,4
1185,733,0,0
65,4,6,-1
163,7,2,0
1190,6,-7,0
1190,6,-8,0
1190,6,-9,0
1193,6,-6,0
1193,6,-5,0
1193,6,-4,0
163,7,3,0
186,7,2,0
1212,6,-8,0
1190,6,-4,0
1190,6,-5,0
1190,6,3,0
1190,6,2,0
65,4,6,-1
1185,191,0,0
65,4,6,-1
163,7,5,0
1190,6,-7,0
1190,6,-8,0
1193,6,-5,0
1193,6,-4,0
163,7,2,0
1197,7,0,0
1212,6,-7,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
1211,4,4,0
1185,599,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,3,0
1181,1726,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
63,6,-3,0
1181,1781,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,8
6,1807,2,0
1197,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-4,0
1190,6,-3,0
1211,4,6,7
1185,1298,0,0
65,4,6,-1
163,7,2,0
65,2,6,-2
180,2,6,-4
61,6,-5,2
1212,6,-6,0
1190,6,-5,0
1211,4,4,3
1185,1240,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1181,1779,0,0
1208,0,0,0
1194,7,0,0
65,5,6,11
63,5,0,0
1181,1814,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
65,2,6,8
255,2,3,0
48,3,0,0
276,3,2,0
61,6,-2,3
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
65,2,4,1
61,6,-2,2
1197,7,0,0
63,6,-3,0
1181,1845,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,5
6,1893,2,0
186,7,3,0
186,7,3,0
1212,6,-9,0
1190,6,-3,0
1211,4,6,4
1185,733,0,0
65,4,6,-1
163,7,2,0
1190,6,-7,0
1190,6,-8,0
1190,6,-9,0
1193,6,-6,0
1193,6,-5,0
1193,6,-4,0
163,7,3,0
65,3,4,6
61,6,-6,3
186,7,2,0
1212,6,-8,0
1190,6,-4,0
1190,6,-5,0
1190,6,3,0
1190,6,2,0
65,4,6,-1
1185,191,0,0
65,4,6,-1
163,7,5,0
1190,6,-7,0
1190,6,-8,0
1193,6,-5,0
1193,6,-4,0
163,7,2,0
1197,7,0,0
1212,6,-7,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
1211,4,4,0
1185,599,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,3,0
1181,1843,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
63,6,-3,0
1181,1900,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,8
6,1926,2,0
1197,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-4,0
1190,6,-3,0
1211,4,6,7
1185,1298,0,0
65,4,6,-1
163,7,2,0
65,2,6,-2
180,2,6,-4
61,6,-5,2
1212,6,-6,0
1190,6,-5,0
1211,4,4,3
1185,1240,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1181,1898,0,0
1208,0,0,0
1194,7,0,0
65,5,6,11
63,5,0,0
1181,1933,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
48,2,1024,0
209,2,16,0
65,3,4,1
322,3,2,0
61,6,-2,3
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,8
255,2,3,0
48,3,0,0
276,3,2,0
61,6,-2,3
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,9,0
1190,6,8,0
1190,6,7,0
1190,4,1,0
1211,4,4,3
1185,1399,0,0
65,4,6,-1
163,7,5,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,6,0
1190,6,5,0
1190,6,4,0
1190,6,3,0
1190,6,2,0
1211,4,4,0
1185,1050,0,0
65,4,6,-1
163,7,6,0
1194,7,0,0
65,5,6,11
63,5,0,0
1181,1997,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
48,2,1024,0
209,2,16,0
65,3,4,1
322,3,2,0
61,6,-2,3
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,8
255,2,3,0
48,3,0,0
276,3,2,0
61,6,-2,3
1212,6,-3,0
1190,6,-2,0
1185,340,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,9,0
1190,6,8,0
1190,6,7,0
1190,4,1,0
1211,4,4,3
1185,1399,0,0
65,4,6,-1
163,7,5,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,6,0
1190,6,5,0
1190,6,4,0
1190,4,6,0
1190,6,3,0
1190,6,2,0
1211,4,4,0
1185,1124,0,0
65,4,6,-1
163,7,7,0
1194,7,0,0
65,5,6,11
63,5,0,0
1181,2062,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
186,7,7,0
186,7,7,0
1212,6,-15,0
1189,1,0,0
1185,2240,0,0
65,4,6,-1
163,7,2,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1190,6,-12,0
1190,6,-13,0
1190,6,-14,0
1190,6,-15,0
1193,6,-8,0
1193,6,-7,0
1193,6,-6,0
1193,6,-5,0
1193,6,-4,0
1193,6,-3,0
1193,6,-2,0
163,7,7,0
65,3,4,6
61,6,-2,3
1197,7,0,0
65,2,6,3
232,2,2,0
61,6,-9,2
1197,7,0,0
65,2,6,2
232,2,2,0
61,6,-10,2
1197,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,5
203,2,6,-9
61,6,-11,2
65,2,6,4
203,2,6,-10
61,6,-12,2
1212,6,-13,0
1190,6,-11,0
1190,6,-12,0
1211,4,6,-8
1185,1528,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,5
180,2,6,-9
61,6,-11,2
65,2,6,4
203,2,6,-10
61,6,-12,2
1212,6,-13,0
1190,6,-11,0
1190,6,-12,0
1211,4,6,-8
1185,1528,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,5
180,2,6,-9
61,6,-11,2
65,2,6,4
180,2,6,-10
61,6,-12,2
1212,6,-13,0
1190,6,-11,0
1190,6,-12,0
1211,4,6,-8
1185,1528,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,5
203,2,6,-9
61,6,-11,2
65,2,6,4
180,2,6,-10
61,6,-12,2
1212,6,-13,0
1190,6,-11,0
1190,6,-12,0
1211,4,6,-8
1185,1528,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-11,0
1189,1,0,0
1189,0,0,0
1189,3,0,0
1211,4,6,-8
1185,1468,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
1197,7,0,0
1212,6,-11,0
1189,3,0,0
1189,2,0,0
1189,1,0,0
1211,4,6,-8
1185,1468,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
65,5,6,6
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
1190,6,-7,0
1190,6,-8,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1193,5,3,0
1193,5,4,0
1193,5,5,0
1193,5,6,0
1181,2219,0,0
1194,7,0,0
1194,7,0,0
163,7,7,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1211,4,4,0
1185,1197,0,0
65,4,6,-1
1211,4,4,3
1185,1455,0,0
65,4,6,-1
63,4,6,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
186,7,7,0
1211,4,6,-7
1185,2223,0,0
1197,7,0,0
1197,7,0,0
48,2,4,0
226,2,6,2
61,6,-8,2
1212,6,-9,0
1190,6,-8,0
1211,4,6,-7
1185,471,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
48,2,6,0
226,2,6,2
61,6,-8,2
1212,6,-9,0
1190,6,-8,0
1211,4,6,-4
1185,1210,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
65,5,6,3
1190,6,-1,0
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
1190,6,-7,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1193,5,3,0
1193,5,4,0
1193,5,5,0
1193,5,6,0
1181,2287,0,0
163,7,7,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1211,4,4,0
1185,92,0,0
65,4,6,-1
63,4,2,0
1211,4,4,3
1185,1455,0,0
65,4,6,-1
1211,4,4,6
1185,1455,0,0
65,4,6,-1
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
1212,6,-3,0
1190,4,0,0
1185,281,0,0
65,4,6,-1
163,7,2,0
65,2,6,-3
61,6,-2,2
1194,7,0,0
1196,4,0,0
65,5,6,2
1190,6,-2,0
1193,5,0,0
1181,2333,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1197,7,0,0
186,7,2,0
1212,6,-2,0
65,4,6,-1
1185,2311,0,0
65,4,6,-1
163,7,1,0
1212,6,-3,0
65,4,6,-1
1185,2311,0,0
65,4,6,-1
163,7,1,0
1212,6,-5,0
1190,6,-2,0
1190,6,-3,0
1185,104,0,0
65,4,6,-1
163,7,3,0
65,5,6,2
1190,6,-4,0
1190,6,-5,0
1193,5,0,0
1193,5,1,0
1181,2371,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
186,7,3,0
1211,4,6,-4
1185,1455,0,0
65,4,6,-1
1197,7,0,0
1212,6,-5,0
65,4,6,-1
1185,2311,0,0
65,4,6,-1
163,7,1,0
65,3,6,-5
61,6,-3,3
1194,7,0,0
65,3,6,-3
176,4,0,3
65,3,4,0
61,6,-4,3
65,5,6,2
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1181,2407,0,0
163,7,3,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,4,0,0
1190,6,2,0
1185,297,0,0
65,4,6,-1
163,7,3,0
65,3,6,-2
61,4,0,3
1194,7,0,0
65,5,6,3
1190,4,0,0
1193,5,0,0
1181,2431,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,4,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
65,5,6,5
1190,4,0,0
1193,5,0,0
1181,2469,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
65,5,6,4
1190,4,0,0
1193,5,0,0
1181,2499,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,4,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,3,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
65,5,6,5
1190,4,0,0
1193,5,0,0
1181,2537,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,2,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,4,0
1190,6,3,0
65,4,6,-1
1185,2473,0,0
65,4,6,-1
163,7,3,0
1194,7,0,0
65,5,6,5
1190,4,0,0
1193,5,0,0
1181,2568,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1190,6,3,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-3,0
1189,0,0,0
1211,4,6,2
1185,1032,0,0
65,4,6,-1
163,7,2,0
65,2,6,-3
61,6,-2,2
1194,7,0,0
1197,7,0,0
63,6,-3,0
1181,2601,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,3
6,2616,2,0
65,2,6,-2
65,3,4,0
65,5,2,0
61,3,0,5
65,5,2,1
61,3,1,5
65,5,2,2
61,3,2,5
178,6,-2,3
178,4,0,3
1181,2599,0,0
1208,0,0,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1212,6,-2,0
1190,6,6,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-3,0
1189,0,0,0
1211,4,6,5
1185,1437,0,0
65,4,6,-1
163,7,2,0
65,2,6,-3
61,6,-2,2
1194,7,0,0
1197,7,0,0
63,6,-3,0
1181,2643,0,0
1208,0,0,0
1196,6,-3,0
1208,0,0,0
65,2,6,-3
341,2,6,6
6,2654,2,0
65,2,6,-2
65,3,4,0
58,5,2,0
55,3,5,0
1196,6,-2,0
1196,4,0,0
1181,2641,0,0
1208,0,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
1197,7,0,0
1212,6,-2,0
1189,6,0,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
48,2,8,0
209,2,3,0
48,3,255,0
552,3,2,0
61,6,-2,3
1197,7,0,0
94,2,1,0
61,6,-3,2
1197,7,0,0
48,2,8,0
209,2,2,0
48,3,255,0
552,3,2,0
65,2,6,-2
161,2,3,0
61,6,-4,2
1197,7,0,0
48,2,8,0
209,2,1,0
48,3,255,0
552,3,2,0
65,2,6,-2
161,2,3,0
61,6,-5,2
1197,7,0,0
48,2,8,0
209,2,0,0
48,3,255,0
552,3,2,0
65,2,6,-2
161,2,3,0
61,6,-6,2
1197,7,0,0
65,2,6,-2
61,6,-7,2
1197,7,0,0
186,7,2,0
186,7,2,0
1197,7,0,0
94,2,30,0
61,6,-8,2
1212,6,-10,0
1190,6,-8,0
1189,0,0,0
1185,104,0,0
65,4,6,-1
163,7,3,0
1212,6,-12,0
1190,6,3,0
1190,6,2,0
1190,6,-9,0
1190,6,-10,0
1185,191,0,0
65,4,6,-1
163,7,5,0
1212,6,-13,0
1190,6,-7,0
1190,6,-11,0
1190,6,-12,0
65,4,6,-1
1185,2503,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
1194,7,0,0
186,7,2,0
186,7,2,0
1197,7,0,0
1212,6,-9,0
1189,0,0,0
1189,30,0,0
1185,104,0,0
65,4,6,-1
163,7,3,0
1212,6,-11,0
1190,6,3,0
1190,6,2,0
1190,6,-8,0
1190,6,-9,0
1185,191,0,0
65,4,6,-1
163,7,5,0
1212,6,-12,0
1190,6,-7,0
1190,6,-10,0
1190,6,-11,0
65,4,6,-1
1185,2503,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
186,7,2,0
186,7,2,0
1197,7,0,0
1212,6,-9,0
1189,30,0,0
1189,0,0,0
1185,104,0,0
65,4,6,-1
163,7,3,0
1212,6,-11,0
1190,6,3,0
1190,6,2,0
1190,6,-8,0
1190,6,-9,0
1185,191,0,0
65,4,6,-1
163,7,5,0
1212,6,-12,0
1190,6,-7,0
1190,6,-10,0
1190,6,-11,0
65,4,6,-1
1185,2503,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
186,7,2,0
1190,6,3,0
1190,6,2,0
1193,6,-9,0
1193,6,-8,0
178,6,-9,60
1197,7,0,0
186,7,2,0
186,7,2,0
1197,7,0,0
94,2,30,0
61,6,-10,2
1212,6,-12,0
1190,6,-10,0
1189,0,0,0
1185,104,0,0
65,4,6,-1
163,7,3,0
1212,6,-14,0
1190,6,-8,0
1190,6,-9,0
1190,6,-11,0
1190,6,-12,0
1185,191,0,0
65,4,6,-1
163,7,5,0
1212,6,-15,0
1190,6,-7,0
1190,6,-13,0
1190,6,-14,0
65,4,6,-1
1185,2503,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
1194,7,0,0
186,7,2,0
186,7,2,0
1197,7,0,0
1212,6,-11,0
1189,0,0,0
1189,30,0,0
1185,104,0,0
65,4,6,-1
163,7,3,0
1212,6,-13,0
1190,6,-8,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1185,191,0,0
65,4,6,-1
163,7,5,0
1212,6,-14,0
1190,6,-7,0
1190,6,-12,0
1190,6,-13,0
65,4,6,-1
1185,2503,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
186,7,2,0
186,7,2,0
1197,7,0,0
1212,6,-11,0
1189,30,0,0
1189,0,0,0
1185,104,0,0
65,4,6,-1
163,7,3,0
1212,6,-13,0
1190,6,-8,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1185,191,0,0
65,4,6,-1
163,7,5,0
1212,6,-14,0
1190,6,-5,0
1190,6,-12,0
1190,6,-13,0
65,4,6,-1
1185,2503,0,0
65,4,6,-1
163,7,4,0
1194,7,0,0
163,7,2,0
163,7,2,0
1197,7,0,0
48,2,2,0
209,2,3,0
61,6,-10,2
1197,7,0,0
1212,6,-11,0
1190,6,-10,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1197,7,0,0
63,6,-11,0
1181,2910,0,0
1208,0,0,0
1196,6,-11,0
1208,0,0,0
65,2,6,-11
341,2,6,-10
6,2923,2,0
1197,7,0,0
1212,6,-12,0
1190,6,-11,0
65,4,6,-1
1185,2411,0,0
65,4,6,-1
163,7,2,0
1194,7,0,0
1181,2908,0,0
1208,0,0,0
1194,7,0,0
1194,7,0,0
163,7,2,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
61,6,-1,4
63,4,0,0
63,4,1,0
1194,7,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
48,2,64,0
163,2,7,0
48,3,1024,0
207,3,2,0
163,3,512,0
65,5,6,2
61,5,0,3
1181,2972,0,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
186,7,2,0
1197,7,0,0
186,7,2,0
94,2,200,0
61,6,-3,2
1212,6,-5,0
1190,6,-3,0
1189,30,0,0
1185,104,0,0
163,7,3,0
1190,6,-4,0
1190,6,-5,0
1193,6,-2,0
1193,6,-1,0
163,7,2,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
1212,6,-4,0
1185,2961,0,0
163,7,1,0
65,2,6,-4
61,6,-3,2
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,2,0
61,6,-4,2
1212,6,-5,0
1190,6,-4,0
1185,281,0,0
163,7,2,0
21,3040,6,-5
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,0,0
61,6,-6,2
1212,6,-7,0
1190,6,-6,0
1185,281,0,0
163,7,2,0
65,3,6,-7
61,6,-2,3
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,1,0
61,6,-6,2
1212,6,-7,0
1190,6,-6,0
1185,281,0,0
163,7,2,0
65,3,6,-7
61,6,-1,3
1194,7,0,0
1194,7,0,0
1181,3053,0,0
1208,0,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,2,0
61,6,-6,2
1212,6,-7,0
1190,6,-6,0
1189,1,0,0
1185,297,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
1208,0,0,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
63,6,-4,0
1197,7,0,0
63,6,-5,0
1197,7,0,0
63,6,-6,0
1197,7,0,0
63,6,-7,0
63,6,-4,37
63,6,-5,39
63,6,-6,38
63,6,-7,40
1197,7,0,0
63,6,-8,2
1197,7,0,0
1212,6,-9,0
1190,6,-4,0
1211,4,6,5
1185,1298,0,0
163,7,2,0
21,3080,6,-9
65,3,6,-8
199,6,-2,3
1181,3080,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
1212,6,-9,0
1190,6,-5,0
1211,4,6,5
1185,1298,0,0
163,7,2,0
21,3092,6,-9
65,3,6,-8
176,6,-2,3
1181,3092,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
1212,6,-9,0
1190,6,-6,0
1211,4,6,5
1185,1298,0,0
163,7,2,0
21,3104,6,-9
65,3,6,-8
176,6,-1,3
1181,3104,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
1212,6,-9,0
1190,6,-7,0
1211,4,6,5
1185,1298,0,0
163,7,2,0
21,3116,6,-9
65,3,6,-8
199,6,-1,3
1181,3116,0,0
1208,0,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,0,0
61,6,-9,2
1212,6,-10,0
1190,6,-9,0
1190,6,-2,0
1185,297,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
1197,7,0,0
1197,7,0,0
65,2,6,-3
163,2,1,0
61,6,-9,2
1212,6,-10,0
1190,6,-9,0
1190,6,-1,0
1185,297,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
65,5,6,11
1190,6,-1,0
1190,6,-2,0
1193,5,0,0
1193,5,1,0
1181,3155,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
1194,7,0,0
163,7,2,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
186,7,7,0
1197,7,0,0
186,7,7,0
48,2,1024,0
209,2,8,0
61,6,-8,2
1212,6,-15,0
1190,6,-8,0
1185,2240,0,0
163,7,2,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1190,6,-12,0
1190,6,-13,0
1190,6,-14,0
1190,6,-15,0
1193,6,-7,0
1193,6,-6,0
1193,6,-5,0
1193,6,-4,0
1193,6,-3,0
1193,6,-2,0
1193,6,-1,0
163,7,7,0
1194,7,0,0
186,7,7,0
186,7,7,0
1212,6,-21,0
1189,0,0,0
1189,0,0,0
1189,10,0,0
1189,10,0,0
1211,4,6,-7
1185,2066,0,0
163,7,5,0
1190,6,-15,0
1190,6,-16,0
1190,6,-17,0
1190,6,-18,0
1190,6,-19,0
1190,6,-20,0
1190,6,-21,0
1193,6,-14,0
1193,6,-13,0
1193,6,-12,0
1193,6,-11,0
1193,6,-10,0
1193,6,-9,0
1193,6,-8,0
163,7,7,0
1197,7,0,0
63,6,-15,0
1181,3218,0,0
1208,0,0,0
1196,6,-15,0
1208,0,0,0
65,2,6,-15
324,2,24,0
6,3288,2,0
1187,2,0,0
48,2,255,0
554,2,24,0
1187,2,0,0
65,2,6,-15
209,2,7,0
48,3,64,0
161,3,2,0
554,3,8,0
1191,2,0,0
161,2,3,0
46,3,2,0
1191,2,0,0
61,6,-1,3
186,7,2,0
1197,7,0,0
186,7,2,0
48,2,16,0
226,2,6,-15
61,6,-18,2
1212,6,-20,0
1190,6,-18,0
1189,0,0,0
1185,104,0,0
163,7,3,0
1190,6,-19,0
1190,6,-20,0
1193,6,-17,0
1193,6,-16,0
163,7,2,0
1194,7,0,0
1197,7,0,0
63,6,-18,0
1181,3258,0,0
1208,0,0,0
1196,6,-18,0
1208,0,0,0
65,2,6,-18
324,2,16,0
6,3284,2,0
1187,2,0,0
48,2,16,0
226,2,6,-18
46,3,2,0
1191,2,0,0
61,6,-16,3
1197,7,0,0
1212,6,-19,0
1190,6,-8,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1190,6,-12,0
1190,6,-13,0
1190,6,-14,0
1190,6,-16,0
1190,6,-17,0
1211,4,6,-7
1185,1818,0,0
163,7,10,0
1194,7,0,0
1181,3256,0,0
1208,0,0,0
1194,7,0,0
1181,3216,0,0
163,7,2,0
1208,0,0,0
1194,7,0,0
65,5,6,2
1190,6,-1,0
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
1190,6,-7,0
1193,5,0,0
1193,5,1,0
1193,5,2,0
1193,5,3,0
1193,5,4,0
1193,5,5,0
1193,5,6,0
1181,3308,0,0
163,7,7,0
163,7,7,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
186,7,2,0
186,7,2,0
1212,6,-4,0
1190,6,10,0
1190,6,9,0
1190,6,8,0
1190,6,7,0
1190,6,6,0
1190,6,5,0
1190,6,4,0
1190,6,3,0
1190,6,2,0
1185,2976,0,0
163,7,10,0
1190,6,-3,0
1190,6,-4,0
1193,6,-2,0
1193,6,-1,0
163,7,2,0
186,7,2,0
1190,6,3,0
1190,6,2,0
1193,6,-4,0
1193,6,-3,0
186,7,7,0
1197,7,0,0
186,7,7,0
48,2,1024,0
209,2,4,0
61,6,-12,2
1212,6,-19,0
1190,6,-12,0
1185,2240,0,0
163,7,2,0
1190,6,-13,0
1190,6,-14,0
1190,6,-15,0
1190,6,-16,0
1190,6,-17,0
1190,6,-18,0
1190,6,-19,0
1193,6,-11,0
1193,6,-10,0
1193,6,-9,0
1193,6,-8,0
1193,6,-7,0
1193,6,-6,0
1193,6,-5,0
163,7,7,0
1194,7,0,0
48,2,255,0
554,2,24,0
1187,2,0,0
48,2,128,0
554,2,8,0
1191,3,0,0
161,3,2,0
61,6,-5,3
8,3641,1,0
186,7,2,0
186,7,2,0
1212,6,-15,0
1189,0,0,0
1189,0,0,0
1185,104,0,0
163,7,3,0
1190,6,-14,0
1190,6,-15,0
1193,6,-13,0
1193,6,-12,0
163,7,2,0
186,7,7,0
186,7,7,0
1212,6,-27,0
1190,6,-4,0
1190,6,-3,0
1189,30,0,0
1189,30,0,0
1211,4,6,-11
1185,2066,0,0
163,7,5,0
1190,6,-21,0
1190,6,-22,0
1190,6,-23,0
1190,6,-24,0
1190,6,-25,0
1190,6,-26,0
1190,6,-27,0
1193,6,-20,0
1193,6,-19,0
1193,6,-18,0
1193,6,-17,0
1193,6,-16,0
1193,6,-15,0
1193,6,-14,0
163,7,7,0
48,2,255,0
554,2,24,0
1187,2,0,0
48,2,128,0
554,2,8,0
1191,3,0,0
161,3,2,0
1187,3,0,0
48,2,255,0
554,2,16,0
1191,3,0,0
161,3,2,0
61,6,-5,3
186,7,7,0
1197,7,0,0
186,7,7,0
65,2,6,-3
186,2,64,0
61,6,-28,2
1212,6,-35,0
1190,6,-4,0
1190,6,-28,0
1189,100,0,0
1189,10,0,0
1211,4,6,-11
1185,2066,0,0
163,7,5,0
1190,6,-29,0
1190,6,-30,0
1190,6,-31,0
1190,6,-32,0
1190,6,-33,0
1190,6,-34,0
1190,6,-35,0
1193,6,-27,0
1193,6,-26,0
1193,6,-25,0
1193,6,-24,0
1193,6,-23,0
1193,6,-22,0
1193,6,-21,0
163,7,7,0
1194,7,0,0
186,7,7,0
1197,7,0,0
186,7,7,0
48,2,200,0
180,2,6,-4
61,6,-35,2
1212,6,-42,0
1190,6,-35,0
1190,6,-3,0
1189,10,0,0
1189,60,0,0
1211,4,6,-11
1185,2066,0,0
163,7,5,0
1190,6,-36,0
1190,6,-37,0
1190,6,-38,0
1190,6,-39,0
1190,6,-40,0
1190,6,-41,0
1190,6,-42,0
1193,6,-34,0
1193,6,-33,0
1193,6,-32,0
1193,6,-31,0
1193,6,-30,0
1193,6,-29,0
1193,6,-28,0
163,7,7,0
1194,7,0,0
1197,7,0,0
1212,6,-35,0
1190,6,-14,0
1190,6,-15,0
1190,6,-16,0
1190,6,-17,0
1190,6,-18,0
1190,6,-19,0
1190,6,-20,0
1190,6,-12,0
1190,6,-13,0
1211,4,6,-11
1185,1937,0,0
163,7,10,0
1194,7,0,0
1197,7,0,0
1212,6,-35,0
1190,6,-21,0
1190,6,-22,0
1190,6,-23,0
1190,6,-24,0
1190,6,-25,0
1190,6,-26,0
1190,6,-27,0
1190,6,-12,0
1190,6,-13,0
1211,4,6,-11
1185,1937,0,0
163,7,10,0
1194,7,0,0
1197,7,0,0
1212,6,-35,0
1190,6,-28,0
1190,6,-29,0
1190,6,-30,0
1190,6,-31,0
1190,6,-32,0
1190,6,-33,0
1190,6,-34,0
1190,6,-12,0
1190,6,-13,0
1211,4,6,-11
1185,1937,0,0
163,7,10,0
1194,7,0,0
163,7,7,0
163,7,7,0
163,7,7,0
186,7,7,0
186,7,7,0
1212,6,-27,0
1189,0,0,0
1189,0,0,0
1189,10,0,0
1189,10,0,0
1211,4,6,-11
1185,2066,0,0
163,7,5,0
1190,6,-21,0
1190,6,-22,0
1190,6,-23,0
1190,6,-24,0
1190,6,-25,0
1190,6,-26,0
1190,6,-27,0
1193,6,-20,0
1193,6,-19,0
1193,6,-18,0
1193,6,-17,0
1193,6,-16,0
1193,6,-15,0
1193,6,-14,0
163,7,7,0
1197,7,0,0
63,6,-21,0
1181,3562,0,0
1208,0,0,0
1196,6,-21,0
1208,0,0,0
65,2,6,-21
324,2,64,0
6,3636,2,0
1187,2,0,0
48,2,255,0
554,2,24,0
1187,2,0,0
65,2,6,-21
209,2,7,0
48,3,16,0
161,3,2,0
554,3,8,0
1191,2,0,0
161,2,3,0
46,3,2,0
1191,2,0,0
61,6,-5,3
186,7,2,0
1197,7,0,0
186,7,2,0
65,2,6,-2
180,2,6,-4
1187,2,0,0
48,2,16,0
226,2,6,-21
1191,3,0,0
161,3,2,0
61,6,-24,3
1212,6,-26,0
1190,6,-24,0
1189,0,0,0
1185,104,0,0
163,7,3,0
1190,6,-25,0
1190,6,-26,0
1193,6,-23,0
1193,6,-22,0
163,7,2,0
1194,7,0,0
1197,7,0,0
63,6,-24,0
1181,3607,0,0
1208,0,0,0
1196,6,-24,0
1208,0,0,0
65,2,6,-24
324,2,16,0
6,3632,2,0
48,2,16,0
226,2,6,-24
65,3,6,-1
161,3,2,0
61,6,-22,3
1197,7,0,0
1212,6,-25,0
1190,6,-14,0
1190,6,-15,0
1190,6,-16,0
1190,6,-17,0
1190,6,-18,0
1190,6,-19,0
1190,6,-20,0
1190,6,-22,0
1190,6,-23,0
1211,4,6,-11
1185,2001,0,0
163,7,10,0
1194,7,0,0
1181,3605,0,0
1208,0,0,0
1194,7,0,0
1181,3560,0,0
163,7,2,0
1208,0,0,0
1194,7,0,0
163,7,7,0
163,7,2,0
1181,3666,0,0
1208,0,0,0
186,7,7,0
1212,6,-18,0
1190,6,-4,0
1190,6,-3,0
1189,30,0,0
1189,30,0,0
1211,4,6,-11
1185,2066,0,0
163,7,5,0
1190,6,-12,0
1190,6,-13,0
1190,6,-14,0
1190,6,-15,0
1190,6,-16,0
1190,6,-17,0
1190,6,-18,0
1193,6,-11,0
1193,6,-10,0
1193,6,-9,0
1193,6,-8,0
1193,6,-7,0
1193,6,-6,0
1193,6,-5,0
163,7,7,0
1208,0,0,0
186,7,2,0
1211,4,6,-13
1185,2949,0,0
1197,7,0,0
1197,7,0,0
48,2,1024,0
209,2,1024,0
61,6,-14,2
1212,6,-15,0
1190,6,-14,0
1185,15,0,0
163,7,2,0
65,3,6,-15
61,6,-13,3
1194,7,0,0
1194,7,0,0
1197,7,0,0
1211,4,6,-14
1185,2938,0,0
65,3,6,-13
61,6,-14,3
1197,7,0,0
1212,6,-15,0
1190,6,-5,0
1190,6,-6,0
1190,6,-7,0
1190,6,-8,0
1190,6,-9,0
1190,6,-10,0
1190,6,-11,0
1211,4,6,-14
1185,2572,0,0
163,7,8,0
1194,7,0,0
1187,2,0,0
65,2,6,-14
203,2,6,-13
46,3,2,0
1191,2,0,0
61,6,-12,3
65,5,6,11
1190,6,-12,0
1190,6,-13,0
1193,5,0,0
1193,5,1,0
1181,3718,0,0
1194,7,0,0
163,7,2,0
163,7,7,0
163,7,2,0
163,7,2,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1187,6,0,0
46,6,7,0
1197,7,0,0
1197,7,0,0
1212,6,-1,0
1185,1,0,0
163,7,1,0
1212,6,-2,0
1190,6,-1,0
1189,0,0,0
1185,297,0,0
163,7,3,0
1194,7,0,0
1194,7,0,0
186,7,9,0
1211,4,6,-9
1185,2291,0,0
1197,7,0,0
1211,4,6,-10
1185,2938,0,0
65,3,6,2
61,6,-10,3
186,7,2,0
1212,6,-12,0
1211,4,6,-10
1185,2337,0,0
163,7,1,0
1190,6,-11,0
1190,6,-12,0
1193,6,-9,0
1193,6,-8,0
163,7,2,0
1197,7,0,0
1212,6,-11,0
1211,4,6,-10
1185,2311,0,0
163,7,1,0
65,3,6,-11
61,6,-7,3
1194,7,0,0
186,7,3,0
1212,6,-13,0
1211,4,6,-10
1185,2375,0,0
163,7,1,0
1190,6,-11,0
1190,6,-12,0
1190,6,-13,0
1193,6,-6,0
1193,6,-5,0
1193,6,-4,0
163,7,3,0
186,7,3,0
1212,6,-13,0
1211,4,6,-10
1185,2375,0,0
163,7,1,0
1190,6,-11,0
1190,6,-12,0
1190,6,-13,0
1193,6,-3,0
1193,6,-2,0
1193,6,-1,0
163,7,3,0
186,7,2,0
186,7,2,0
1212,6,-14,0
1190,6,-1,0
1190,6,-2,0
1190,6,-3,0
1190,6,-4,0
1190,6,-5,0
1190,6,-6,0
1190,6,-7,0
1190,6,-8,0
1190,6,-9,0
1185,3312,0,0
163,7,10,0
1190,6,-13,0
1190,6,-14,0
1193,6,-12,0
1193,6,-11,0
163,7,2,0
1197,7,0,0
1212,6,-13,0
1190,6,-11,0
1185,311,0,0
163,7,2,0
1194,7,0,0
48,4,1,0
65,5,6,3
1190,6,-12,0
1193,5,0,0
1181,3820,0,0
163,7,2,0
1194,7,0,0
163,7,9,0
1208,0,0,0
46,7,6,0
1191,6,0,0
1206,0,0,0
1208,0,0,0
1197,7,0,0
1212,6,-1,0
1187,4,0,0
1185,3722,0,0
163,7,2,0
65,2,6,-1
1194,7,0,0
48,8,1,0
*/
jmp("begin")
label("func_g_ptr_addr()")  //1
push(ebp)
mov(ebp,esp)
mov(eax,64)
add(eax,7)
mov(ebx,1024)
mul(ebx,eax)
mov(edx,ptr[ebp+2])
mov(ptr[edx+0],ebx)
jmp("func_g_ptr_addr()::ret")
label("func_g_ptr_addr()::ret")  //11
mov(esp,ebp)
pop(ebp)
ret()
label("func_alloc(int)")  //15
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-2])
call("func_g_ptr_addr()")
add(esp,1)
mov(eax,ptr[ebp-2])
mov(ptr[ebp-1],eax)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ebp-1])
call("func_get_int(int)")
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
not(eax,ptr[ebp-2])
jz("if_1000::end",eax)
dec(esp)
mov(eax,64)
add(eax,8)
mov(ebx,1024)
mul(ebx,eax)
mov(ptr[ebp-3],ebx)
mov(ebx,ptr[ebp-3])
mov(ptr[ebp-2],ebx)
inc(esp)
jmp("if_1000::end")
label("if_1000::end")  //47
dec(esp)
dec(esp)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp+2])
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-3])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_alloc(int)::ret")
inc(esp)
inc(esp)
label("func_alloc(int)::ret")  //66
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i::mag()")  //70
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ecx+1])
call("func_hypot(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vec2i::mag()::ret")
inc(esp)
inc(esp)
label("func_vec2i::mag()::ret")  //88
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i::`ctor()")  //92
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
inc(esp)
label("func_vec2i::`ctor()::ret")  //100
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i(int,int)")  //104
push(ebp)
mov(ebp,esp)
sub(esp,2)
lea(ecx,ptr[ebp-2])
call("func_vec2i::`ctor()")
mov(ebx,ptr[ebp+3])
mov(ptr[ebp-2],ebx)
mov(ebx,ptr[ebp+2])
mov(ptr[ebp-1],ebx)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
push(ptr[ebp-2])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_vec2i(int,int)::ret")
add(esp,2)
label("func_vec2i(int,int)::ret")  //121
mov(esp,ebp)
pop(ebp)
ret()
label("func_add(int,int)")  //125
push(ebp)
mov(ebp,esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_set_int(int,int)")
add(esp,3)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_add(int,int)::ret")
inc(esp)
label("func_add(int,int)::ret")  //139
mov(esp,ebp)
pop(ebp)
ret()
label("func_hypot(vec2i)")  //143
push(ebp)
mov(ebp,esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+2])
push(ptr[ebp+3])
call("func_hypot(int,int)")
add(esp,3)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_hypot(vec2i)::ret")
inc(esp)
label("func_hypot(vec2i)::ret")  //157
mov(esp,ebp)
pop(ebp)
ret()
label("func_sub(vec2i,vec2i)")  //161
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp+3])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+6])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_sub(vec2i,vec2i)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_sub(vec2i,vec2i)::ret")  //187
mov(esp,ebp)
pop(ebp)
ret()
label("func_add(vec2i,vec2i)")  //191
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp+3])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+6])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_add(vec2i,vec2i)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_add(vec2i,vec2i)::ret")  //217
mov(esp,ebp)
pop(ebp)
ret()
label("func_mul(vec2i,int)")  //221
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+3])
mul(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+4])
mul(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_mul(vec2i,int)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_mul(vec2i,int)::ret")  //247
mov(esp,ebp)
pop(ebp)
ret()
label("func_div(vec2i,int)")  //251
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+3])
div(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+4])
div(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_div(vec2i,int)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_div(vec2i,int)::ret")  //277
mov(esp,ebp)
pop(ebp)
ret()
label("func_get_int(int)")  //281
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],0)
mov(eax,ptr[ebp+2])
mov(ptr[ebp-1],ptr[eax])
mov(edx,ptr[ebp+3])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_get_int(int)::ret")
inc(esp)
label("func_get_int(int)::ret")  //293
mov(esp,ebp)
pop(ebp)
ret()
label("func_set_int(int,int)")  //297
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
mov(ptr[eax],ptr[ebp+2])
mov(eax,ptr[ebp+3])
add(eax,1)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],eax)
jmp("func_set_int(int,int)::ret")
label("func_set_int(int,int)::ret")  //307
mov(esp,ebp)
pop(ebp)
ret()
label("func_setebx(int)")  //311
push(ebp)
mov(ebp,esp)
mov(ebx,ptr[ebp+2])
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],0)
jmp("func_setebx(int)::ret")
label("func_setebx(int)::ret")  //318
mov(esp,ebp)
pop(ebp)
ret()
label("func_hypot(int,int)")  //322
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],0)
mov(eax,ptr[ebp+3])
mov(ebx,ptr[ebp+2])
hypot(eax,ebx)
mov(ptr[ebp-1],eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_hypot(int,int)::ret")
inc(esp)
label("func_hypot(int,int)::ret")  //336
mov(esp,ebp)
pop(ebp)
ret()
label("func_QapAssert(int)")  //340
push(ebp)
mov(ebp,esp)
not(eax,ptr[ebp+2])
jz("if_1001::end",eax)
label("Run-time error!")  //345
mov(err,-1)
jmp("if_1001::end")
label("if_1001::end")  //348
label("func_QapAssert(int)::ret")  //349
mov(esp,ebp)
pop(ebp)
ret()
label("func_QapAssert(int,int)")  //353
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
neq(eax,ptr[ebp+2])
jz("if_1002::end",eax)
label("Run-time error!")  //359
mov(err,-1)
jmp("if_1002::end")
label("if_1002::end")  //362
label("func_QapAssert(int,int)::ret")  //363
mov(esp,ebp)
pop(ebp)
ret()
label("func_min(int,int)")  //367
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
less(eax,ptr[ebp+2])
jz("if_1003::end",eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp+3])
pop(ptr[edx+0])
jmp("func_min(int,int)::ret")
jmp("if_1003::end")
label("if_1003::end")  //378
mov(edx,ptr[ebp+4])
push(ptr[ebp+2])
pop(ptr[edx+0])
jmp("func_min(int,int)::ret")
label("func_min(int,int)::ret")  //383
mov(esp,ebp)
pop(ebp)
ret()
label("func_max(int,int)")  //387
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
more(eax,ptr[ebp+2])
jz("if_1004::end",eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp+3])
pop(ptr[edx+0])
jmp("func_max(int,int)::ret")
jmp("if_1004::end")
label("if_1004::end")  //398
mov(edx,ptr[ebp+4])
push(ptr[ebp+2])
pop(ptr[edx+0])
jmp("func_max(int,int)::ret")
label("func_max(int,int)::ret")  //403
mov(esp,ebp)
pop(ebp)
ret()
label("func_clamp(int,int,int)")  //407
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+4])
push(ptr[ebp+2])
call("func_max(int,int)")
add(esp,3)
pushlea(ptr[ebp-2])
push(ptr[ebp-1])
push(ptr[ebp+3])
call("func_min(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_clamp(int,int,int)::ret")
inc(esp)
inc(esp)
label("func_clamp(int,int,int)::ret")  //428
mov(esp,ebp)
pop(ebp)
ret()
label("func_qap_vertex::`ctor()")  //432
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
lea(ecx,ptr[ecx+1])
call("func_vec2i::`ctor()")
mov(ecx,ptr[ebp-1])
inc(esp)
label("func_qap_vertex::`ctor()::ret")  //442
mov(esp,ebp)
pop(ebp)
ret()
label("func_qap_vertex(int,vec2i)")  //446
push(ebp)
mov(ebp,esp)
sub(esp,3)
lea(ecx,ptr[ebp-3])
call("func_qap_vertex::`ctor()")
mov(ebx,ptr[ebp+4])
mov(ptr[ebp-3],ebx)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
mov(edx,ptr[ebp+5])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_qap_vertex(int,vec2i)::ret")
add(esp,3)
label("func_qap_vertex(int,vec2i)::ret")  //467
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::reserve(int)")  //471
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,3)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_alloc(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(ebx,ptr[ebp-3])
mov(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
mov(ptr[ecx+1],0)
mov(ebx,ptr[ebp+2])
mov(ptr[ecx+2],ebx)
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],0)
jmp("func_vector_qap_vertex::reserve(int)::ret")
inc(esp)
label("func_vector_qap_vertex::reserve(int)::ret")  //497
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::sys_add(int)")  //501
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::sys_add(int)::ret")
inc(esp)
label("func_vector_qap_vertex::sys_add(int)::ret")  //521
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::sys_add(vec2i)")  //525
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+4])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::sys_add(vec2i)::ret")
inc(esp)
label("func_vector_qap_vertex::sys_add(vec2i)::ret")  //551
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add(int,vec2i)")  //555
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
less(eax,ptr[ecx+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::add(int,vec2i)::ret")
inc(esp)
label("func_vector_qap_vertex::add(int,vec2i)::ret")  //595
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add(qap_vertex)")  //599
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
less(eax,ptr[ecx+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::add(qap_vertex)::ret")
inc(esp)
label("func_vector_qap_vertex::add(qap_vertex)::ret")  //639
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::get_vec2i(int)")  //643
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
dec(esp)
sub(esp,2)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp+2])
add(eax,1)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-6])
push(ptr[ebp-2])
push(ptr[ebp-4])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+3])
push(ptr[ebp-5])
push(ptr[ebp-6])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_vector_qap_vertex::get_vec2i(int)::ret")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::get_vec2i(int)::ret")  //682
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::get(int)")  //686
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
sub(esp,2)
sub(esp,3)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp+2])
add(eax,1)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::get_vec2i(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-8])
push(ptr[ebp-2])
push(ptr[ebp-4])
push(ptr[ebp-5])
call("func_qap_vertex(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
mov(edx,ptr[ebp+3])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::get(int)::ret")
add(esp,3)
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::get(int)::ret")  //729
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::at(int)")  //733
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
sub(esp,3)
mov(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mul(eax,3)
mov(ebx,ptr[ecx+0])
add(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::get(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::at(int)::ret")
add(esp,3)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::at(int)::ret")  //763
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::to_vector_int()")  //767
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,3)
lea(ecx,ptr[ebp-4])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
mov(ebx,ptr[ecx+0])
mov(ptr[ebp-4],ebx)
push(eax)
mov(eax,ptr[ecx+1])
mul(eax,3)
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-3],ebx)
push(eax)
mov(eax,ptr[ecx+2])
mul(eax,3)
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-2],ebx)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::to_vector_int()::ret")
add(esp,3)
inc(esp)
label("func_vector_qap_vertex::to_vector_int()::ret")  //800
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::front()")  //804
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
sub(esp,3)
pushlea(ptr[ebp-4])
push(0)
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::front()::ret")
add(esp,3)
inc(esp)
label("func_vector_qap_vertex::front()::ret")  //838
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::back()")  //842
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
sub(esp,3)
mov(eax,ptr[ecx+1])
sub(eax,1)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::back()::ret")
add(esp,3)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::back()::ret")  //881
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::clone()")  //885
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,3)
lea(ecx,ptr[ebp-4])
call("func_vector_qap_vertex::`ctor()")
mov(ecx,ptr[ebp-1])
dec(esp)
pushlea(ptr[ebp-5])
push(ptr[ecx+2])
lea(ecx,ptr[ebp-4])
call("func_vector_qap_vertex::reserve(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-5],0)
jmp("for_8000::condition")
label("for_8000::continue")  //905
inc(ptr[ebp-5])
label("for_8000::condition")  //907
mov(eax,ptr[ebp-5])
less(eax,ptr[ecx+1])
jz("for_8000::break",eax)
sub(esp,3)
dec(esp)
pushlea(ptr[ebp-8])
push(ptr[ebp-5])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-9])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
lea(ecx,ptr[ebp-4])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8000::continue")
label("for_8000::break")  //930
inc(esp)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::clone()::ret")
add(esp,3)
inc(esp)
label("func_vector_qap_vertex::clone()::ret")  //942
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::is_equal(vector_qap_vertex)")  //946
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
push(ptr[ecx+1])
call("func_QapAssert(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
dec(esp)
mov(ptr[ebp-2],0)
jmp("for_8001::condition")
label("for_8001::continue")  //962
inc(ptr[ebp-2])
label("for_8001::condition")  //964
mov(eax,ptr[ebp-2])
less(eax,ptr[ecx+1])
jz("for_8001::break",eax)
sub(esp,3)
sub(esp,3)
pushlea(ptr[ebp-8])
push(ptr[ebp-2])
lea(ecx,ptr[ebp+2])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
add(esp,3)
sub(esp,3)
sub(esp,3)
pushlea(ptr[ebp-11])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
add(esp,3)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-5])
push(ptr[ebp-8])
call("func_QapAssert(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-4])
push(ptr[ebp-7])
call("func_QapAssert(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-3])
push(ptr[ebp-6])
call("func_QapAssert(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
add(esp,3)
add(esp,3)
jmp("for_8001::continue")
label("for_8001::break")  //1025
inc(esp)
inc(esp)
label("func_vector_qap_vertex::is_equal(vector_qap_vertex)::ret")  //1028
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::addr_at(int)")  //1032
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mul(eax,3)
mov(ebx,ptr[ecx+0])
add(ebx,eax)
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],ebx)
jmp("func_vector_qap_vertex::addr_at(int)::ret")
inc(esp)
label("func_vector_qap_vertex::addr_at(int)::ret")  //1046
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)")  //1050
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ecx+1])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(0)
lea(ecx,ptr[ebp+4])
call("func_vector_qap_vertex::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-4])
mov(ptr[ebp-3],eax)
inc(esp)
dec(esp)
mov(eax,ptr[ebp+2])
mov(ptr[ebp-4],eax)
dec(esp)
mov(eax,ptr[ebp+3])
mov(ptr[ebp-5],eax)
dec(esp)
mov(ptr[ebp-6],0)
jmp("for_8002::condition")
label("for_8002::continue")  //1086
inc(ptr[ebp-6])
label("for_8002::condition")  //1088
mov(eax,ptr[ebp-6])
less(eax,ptr[ebp+5])
jz("for_8002::break",eax)
mov(eax,ptr[ebp-2])
mov(ebx,ptr[ebp-3])
mov(edx,ptr[ebx])
mov(ptr[eax],edx)
mov(edx,ptr[ebx+1])
add(edx,ptr[ebp-4])
mov(ptr[eax+1],edx)
mov(edx,ptr[ebx+2])
add(edx,ptr[ebp-5])
mov(ptr[eax+2],edx)
add(ptr[ebp-2],3)
add(ptr[ebp-3],3)
jmp("for_8002::continue")
label("for_8002::break")  //1105
inc(esp)
inc(esp)
inc(esp)
mov(ebx,ptr[ebp+5])
add(ptr[ecx+1],ebx)
push(eax)
mov(eax,ptr[ebp+5])
mul(eax,3)
mov(ebx,eax)
pop(eax)
add(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)::ret")  //1120
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)")  //1124
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ecx+1])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(0)
lea(ecx,ptr[ebp+5])
call("func_vector_qap_vertex::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-4])
mov(ptr[ebp-3],eax)
inc(esp)
dec(esp)
mov(eax,ptr[ebp+2])
mov(ptr[ebp-4],eax)
dec(esp)
mov(eax,ptr[ebp+3])
mov(ptr[ebp-5],eax)
dec(esp)
mov(ptr[ebp-6],0)
jmp("for_8003::condition")
label("for_8003::continue")  //1160
inc(ptr[ebp-6])
label("for_8003::condition")  //1162
mov(eax,ptr[ebp-6])
less(eax,ptr[ebp+6])
jz("for_8003::break",eax)
mov(eax,ptr[ebp-2])
mov(ebx,ptr[ebp-3])
mov(ptr[eax],ptr[ebp+4])
mov(edx,ptr[ebx+1])
add(edx,ptr[ebp-4])
mov(ptr[eax+1],edx)
mov(edx,ptr[ebx+2])
add(edx,ptr[ebp-5])
mov(ptr[eax+2],edx)
add(ptr[ebp-2],3)
add(ptr[ebp-3],3)
jmp("for_8003::continue")
label("for_8003::break")  //1178
inc(esp)
inc(esp)
inc(esp)
mov(ebx,ptr[ebp+6])
add(ptr[ecx+1],ebx)
push(eax)
mov(eax,ptr[ebp+6])
mul(eax,3)
mov(ebx,eax)
pop(eax)
add(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)::ret")  //1193
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::`ctor()")  //1197
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
mov(ptr[ecx+2],0)
inc(esp)
label("func_vector_qap_vertex::`ctor()::ret")  //1206
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::reserve(int)")  //1210
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,1)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_alloc(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(ebx,ptr[ebp-3])
mov(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
mov(ptr[ecx+1],0)
mov(ebx,ptr[ebp+2])
mov(ptr[ecx+2],ebx)
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],0)
jmp("func_vector_int::reserve(int)::ret")
inc(esp)
label("func_vector_int::reserve(int)::ret")  //1236
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::add(int)")  //1240
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
less(eax,ptr[ecx+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_int::add(int)::ret")
inc(esp)
label("func_vector_int::add(int)::ret")  //1273
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::get(int)")  //1277
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vector_int::get(int)::ret")
inc(esp)
inc(esp)
label("func_vector_int::get(int)::ret")  //1294
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::at(int)")  //1298
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+0])
add(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_int::get(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-3])
pop(ptr[edx+0])
jmp("func_vector_int::at(int)::ret")
inc(esp)
inc(esp)
inc(esp)
label("func_vector_int::at(int)::ret")  //1322
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::front()")  //1326
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(0)
mov(ecx,ptr[ebp-1])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vector_int::front()::ret")
inc(esp)
inc(esp)
label("func_vector_int::front()::ret")  //1356
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::back()")  //1360
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
sub(eax,1)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-3])
pop(ptr[edx+0])
jmp("func_vector_int::back()::ret")
inc(esp)
inc(esp)
inc(esp)
label("func_vector_int::back()::ret")  //1395
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::add_mega_fast(vector_int,int)")  //1399
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
mov(eax,ptr[ebp+3])
sub(eax,ptr[ebp+4])
mov(ptr[ebp-2],eax)
dec(esp)
mov(eax,ptr[ebp+4])
mov(ptr[ebp-3],eax)
mov(edx,ptr[ebp+2])
mov(eax,ptr[ecx+0])
jmp("for_8004::condition")
label("for_8004::continue")  //1414
dec(ptr[ebp-3])
label("for_8004::condition")  //1416
jz("for_8004::break",ptr[ebp-3])
mov(ebx,ptr[ebp-2])
mov(ebx,ptr[ebx])
add(ebx,edx)
mov(ptr[eax],ebx)
inc(eax)
inc(ptr[ebp-2])
jmp("for_8004::continue")
label("for_8004::break")  //1425
mov(ebx,ptr[ebp+4])
add(ptr[ecx+1],ebx)
mov(ebx,ptr[ebp+4])
add(ptr[ecx+0],ebx)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_int::add_mega_fast(vector_int,int)::ret")  //1433
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::addr_at(int)")  //1437
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mul(eax,1)
mov(ebx,ptr[ecx+0])
add(ebx,eax)
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],ebx)
jmp("func_vector_int::addr_at(int)::ret")
inc(esp)
label("func_vector_int::addr_at(int)::ret")  //1451
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::`ctor()")  //1455
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
mov(ptr[ecx+2],0)
inc(esp)
label("func_vector_int::`ctor()::ret")  //1464
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddTris(int,int,int)")  //1468
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddTris(int,int,int)::ret")
inc(esp)
label("func_t_out_dev::AddTris(int,int,int)::ret")  //1501
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(qap_vertex)")  //1505
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+5])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(qap_vertex)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(qap_vertex)::ret")  //1524
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(int,int)")  //1528
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-4])
push(ptr[ecx+6])
push(ptr[ebp-2])
push(ptr[ebp-3])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(int,int)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(int,int)::ret")  //1555
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(vec2i)")  //1559
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+6])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(vec2i)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(vec2i)::ret")  //1578
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertexAndRetVID(vec2i)")  //1582
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+6])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(eax,ptr[ecx+1])
sub(eax,1)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],eax)
jmp("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret")
inc(esp)
label("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret")  //1603
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add(t_out_dev)")  //1607
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+6])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8005::condition")
label("for_8005::continue")  //1632
inc(ptr[ebp-3])
label("for_8005::condition")  //1634
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+3])
jz("for_8005::break",eax)
sub(esp,3)
dec(esp)
pushlea(ptr[ebp-6])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+2])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-7])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8005::continue")
label("for_8005::break")  //1657
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8006::condition")
label("for_8006::continue")  //1662
inc(ptr[ebp-3])
label("for_8006::condition")  //1664
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+6])
jz("for_8006::break",eax)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-4])
mov(ptr[ebp-5],eax)
pushlea(ptr[ebp-6])
push(ptr[ebp-5])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
jmp("for_8006::continue")
label("for_8006::break")  //1690
inc(esp)
mov(edx,ptr[ebp+9])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add(t_out_dev)::ret")
inc(esp)
inc(esp)
label("func_t_out_dev::add(t_out_dev)::ret")  //1697
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add_wo(t_out_dev,vec2i)")  //1701
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+8])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8007::condition")
label("for_8007::continue")  //1726
inc(ptr[ebp-3])
label("for_8007::condition")  //1728
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+5])
jz("for_8007::break",eax)
sub(esp,3)
sub(esp,3)
pushlea(ptr[ebp-9])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+4])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,3)
sub(esp,2)
pushlea(ptr[ebp-8])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp+3])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-7])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8007::continue")
label("for_8007::break")  //1774
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8008::condition")
label("for_8008::continue")  //1779
inc(ptr[ebp-3])
label("for_8008::condition")  //1781
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+8])
jz("for_8008::break",eax)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+7])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-4])
mov(ptr[ebp-5],eax)
pushlea(ptr[ebp-6])
push(ptr[ebp-5])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
jmp("for_8008::continue")
label("for_8008::break")  //1807
inc(esp)
mov(edx,ptr[ebp+11])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add_wo(t_out_dev,vec2i)::ret")
inc(esp)
inc(esp)
label("func_t_out_dev::add_wo(t_out_dev,vec2i)::ret")  //1814
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add_wc(t_out_dev,vec2i)")  //1818
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+8])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8009::condition")
label("for_8009::continue")  //1843
inc(ptr[ebp-3])
label("for_8009::condition")  //1845
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+5])
jz("for_8009::break",eax)
sub(esp,3)
sub(esp,3)
pushlea(ptr[ebp-9])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+4])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,3)
mov(ebx,ptr[ecx+6])
mov(ptr[ebp-6],ebx)
sub(esp,2)
pushlea(ptr[ebp-8])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp+3])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-7])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8009::continue")
label("for_8009::break")  //1893
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8010::condition")
label("for_8010::continue")  //1898
inc(ptr[ebp-3])
label("for_8010::condition")  //1900
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+8])
jz("for_8010::break",eax)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+7])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-4])
mov(ptr[ebp-5],eax)
pushlea(ptr[ebp-6])
push(ptr[ebp-5])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
jmp("for_8010::continue")
label("for_8010::break")  //1926
inc(esp)
mov(edx,ptr[ebp+11])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add_wc(t_out_dev,vec2i)::ret")
inc(esp)
inc(esp)
label("func_t_out_dev::add_wc(t_out_dev,vec2i)::ret")  //1933
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")  //1937
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,1024)
mul(eax,16)
mov(ebx,ptr[ecx+1])
less(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+8])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+9])
push(ptr[ebp+8])
push(ptr[ebp+7])
push(ptr[ecx+1])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add_mega_fast(vector_int,int)")
mov(ecx,ptr[ebp-1])
add(esp,5)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+6])
push(ptr[ebp+5])
push(ptr[ebp+4])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,6)
inc(esp)
mov(edx,ptr[ebp+11])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret")
inc(esp)
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret")  //1997
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add_with_color(t_out_dev,vec2i)")  //2001
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,1024)
mul(eax,16)
mov(ebx,ptr[ecx+1])
less(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+8])
mod(eax,3)
mov(ebx,0)
eq(ebx,eax)
mov(ptr[ebp-2],ebx)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+9])
push(ptr[ebp+8])
push(ptr[ebp+7])
push(ptr[ecx+1])
lea(ecx,ptr[ecx+3])
call("func_vector_int::add_mega_fast(vector_int,int)")
mov(ecx,ptr[ebp-1])
add(esp,5)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+6])
push(ptr[ebp+5])
push(ptr[ebp+4])
push(ptr[ecx+6])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,7)
inc(esp)
mov(edx,ptr[ebp+11])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add_with_color(t_out_dev,vec2i)::ret")
inc(esp)
label("func_t_out_dev::add_with_color(t_out_dev,vec2i)::ret")  //2062
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::GenGeomQuad(int,int,int,int)")  //2066
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,7)
sub(esp,7)
pushlea(ptr[ebp-15])
push(1)
call("func_new_geom(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-15])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
pop(ptr[ebp-2])
add(esp,7)
mov(ebx,ptr[ecx+6])
mov(ptr[ebp-2],ebx)
dec(esp)
mov(eax,ptr[ebp+3])
div(eax,2)
mov(ptr[ebp-9],eax)
dec(esp)
mov(eax,ptr[ebp+2])
div(eax,2)
mov(ptr[ebp-10],eax)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp-9])
mov(ptr[ebp-11],eax)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp-10])
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
push(ptr[ebp-12])
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-11])
push(1)
push(0)
push(3)
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddTris(int,int,int)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
dec(esp)
pushlea(ptr[ebp-11])
push(3)
push(2)
push(1)
lea(ecx,ptr[ebp-8])
call("func_t_out_dev::AddTris(int,int,int)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+6])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
pop(ptr[edx+5])
pop(ptr[edx+6])
jmp("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret")
inc(esp)
inc(esp)
add(esp,7)
inc(esp)
label("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret")  //2219
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::`ctor()")  //2223
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::`ctor()")
mov(ecx,ptr[ebp-1])
lea(ecx,ptr[ecx+3])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
mov(ptr[ecx+6],0)
inc(esp)
label("func_t_out_dev::`ctor()::ret")  //2236
mov(esp,ebp)
pop(ebp)
ret()
label("func_new_geom(int)")  //2240
push(ebp)
mov(ebp,esp)
sub(esp,7)
lea(ecx,ptr[ebp-7])
call("func_t_out_dev::`ctor()")
dec(esp)
dec(esp)
mov(eax,4)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-9])
push(ptr[ebp-8])
lea(ecx,ptr[ebp-7])
call("func_vector_qap_vertex::reserve(int)")
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,6)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-9])
push(ptr[ebp-8])
lea(ecx,ptr[ebp-4])
call("func_vector_int::reserve(int)")
add(esp,2)
inc(esp)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
pop(ptr[edx+5])
pop(ptr[edx+6])
jmp("func_new_geom(int)::ret")
add(esp,7)
label("func_new_geom(int)::ret")  //2287
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_input::`ctor()")  //2291
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
lea(ecx,ptr[ecx+0])
call("func_vec2i::`ctor()")
mov(ecx,ptr[ebp-1])
mov(ptr[ecx+2],0)
lea(ecx,ptr[ecx+3])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
lea(ecx,ptr[ecx+6])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
inc(esp)
label("func_t_input::`ctor()::ret")  //2307
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_int()")  //2311
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ecx+0])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
inc(ptr[ecx+0])
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_t_dev::read_int()::ret")
inc(esp)
inc(esp)
label("func_t_dev::read_int()::ret")  //2333
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_vec2i()")  //2337
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
sub(esp,2)
pushlea(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
pushlea(ptr[ebp-3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
push(ptr[ebp-3])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+2])
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_t_dev::read_vec2i()::ret")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
label("func_t_dev::read_vec2i()::ret")  //2371
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_vector_int()")  //2375
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,3)
lea(ecx,ptr[ebp-4])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
dec(esp)
pushlea(ptr[ebp-5])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
mov(ebx,ptr[ebp-5])
mov(ptr[ebp-3],ebx)
inc(esp)
mov(ebx,ptr[ebp-3])
add(ptr[ecx+0],ebx)
mov(ebx,ptr[ecx+0])
mov(ptr[ebp-4],ebx)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_t_dev::read_vector_int()::ret")
add(esp,3)
inc(esp)
label("func_t_dev::read_vector_int()::ret")  //2407
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int)")  //2411
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int)::ret")
inc(esp)
label("func_t_dev::write(int)::ret")  //2431
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int,int,int)")  //2435
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int,int,int)::ret")
inc(esp)
label("func_t_dev::write(int,int,int)::ret")  //2469
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(vec2i)")  //2473
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+4])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(vec2i)::ret")
inc(esp)
label("func_t_dev::write(vec2i)::ret")  //2499
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int,vec2i)")  //2503
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int,vec2i)::ret")
inc(esp)
label("func_t_dev::write(int,vec2i)::ret")  //2537
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(qap_vertex)")  //2541
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(qap_vertex)::ret")
inc(esp)
label("func_t_dev::write(qap_vertex)::ret")  //2568
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(t_out_dev)")  //2572
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(0)
lea(ecx,ptr[ebp+2])
call("func_vector_qap_vertex::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8011::condition")
label("for_8011::continue")  //2599
inc(ptr[ebp-3])
label("for_8011::condition")  //2601
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+3])
jz("for_8011::break",eax)
mov(eax,ptr[ebp-2])
mov(ebx,ptr[ecx+0])
mov(edx,ptr[eax+0])
mov(ptr[ebx+0],edx)
mov(edx,ptr[eax+1])
mov(ptr[ebx+1],edx)
mov(edx,ptr[eax+2])
mov(ptr[ebx+2],edx)
add(ptr[ebp-2],3)
add(ptr[ecx+0],3)
jmp("for_8011::continue")
label("for_8011::break")  //2616
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+6])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(0)
lea(ecx,ptr[ebp+5])
call("func_vector_int::addr_at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8012::condition")
label("for_8012::continue")  //2641
inc(ptr[ebp-3])
label("for_8012::condition")  //2643
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+6])
jz("for_8012::break",eax)
mov(eax,ptr[ebp-2])
mov(ebx,ptr[ecx+0])
mov(edx,ptr[eax])
mov(ptr[ebx],edx)
inc(ptr[ebp-2])
inc(ptr[ecx+0])
jmp("for_8012::continue")
label("for_8012::break")  //2654
inc(esp)
inc(esp)
inc(esp)
label("func_t_dev::write(t_out_dev)::ret")  //2658
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write_def(vec2i)")  //2662
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(6)
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(eax,8)
mul(eax,3)
mov(ebx,255)
shl(ebx,eax)
mov(ptr[ebp-2],ebx)
dec(esp)
inv(eax,1)
mov(ptr[ebp-3],eax)
dec(esp)
mov(eax,8)
mul(eax,2)
mov(ebx,255)
shl(ebx,eax)
mov(eax,ptr[ebp-2])
add(eax,ebx)
mov(ptr[ebp-4],eax)
dec(esp)
mov(eax,8)
mul(eax,1)
mov(ebx,255)
shl(ebx,eax)
mov(eax,ptr[ebp-2])
add(eax,ebx)
mov(ptr[ebp-5],eax)
dec(esp)
mov(eax,8)
mul(eax,0)
mov(ebx,255)
shl(ebx,eax)
mov(eax,ptr[ebp-2])
add(eax,ebx)
mov(ptr[ebp-6],eax)
dec(esp)
mov(eax,ptr[ebp-2])
mov(ptr[ebp-7],eax)
dec(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
inv(eax,30)
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-10])
push(ptr[ebp-8])
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-12])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-9])
push(ptr[ebp-10])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-13])
push(ptr[ebp-7])
push(ptr[ebp-11])
push(ptr[ebp-12])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
inc(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-9])
push(0)
push(30)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-11])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-8])
push(ptr[ebp-9])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-12])
push(ptr[ebp-7])
push(ptr[ebp-10])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-9])
push(30)
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-11])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-8])
push(ptr[ebp-9])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-12])
push(ptr[ebp-7])
push(ptr[ebp-10])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
add(ptr[ebp-9],60)
dec(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
inv(eax,30)
mov(ptr[ebp-10],eax)
pushlea(ptr[ebp-12])
push(ptr[ebp-10])
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-14])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-11])
push(ptr[ebp-12])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-15])
push(ptr[ebp-7])
push(ptr[ebp-13])
push(ptr[ebp-14])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
inc(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
push(0)
push(30)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-13])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-14])
push(ptr[ebp-7])
push(ptr[ebp-12])
push(ptr[ebp-13])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
push(30)
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-13])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-14])
push(ptr[ebp-5])
push(ptr[ebp-12])
push(ptr[ebp-13])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
dec(esp)
mov(eax,2)
mul(eax,3)
mov(ptr[ebp-10],eax)
dec(esp)
pushlea(ptr[ebp-11])
push(ptr[ebp-10])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-11],0)
jmp("for_8013::condition")
label("for_8013::continue")  //2908
inc(ptr[ebp-11])
label("for_8013::condition")  //2910
mov(eax,ptr[ebp-11])
less(eax,ptr[ebp-10])
jz("for_8013::break",eax)
dec(esp)
pushlea(ptr[ebp-12])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
jmp("for_8013::continue")
label("for_8013::break")  //2923
inc(esp)
inc(esp)
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
label("func_t_dev::write_def(vec2i)::ret")  //2934
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::`ctor()")  //2938
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
inc(esp)
label("func_t_dev::`ctor()::ret")  //2945
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_mem::`ctor()")  //2949
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
inc(esp)
label("func_t_mem::`ctor()::ret")  //2957
mov(esp,ebp)
pop(ebp)
ret()
label("func_g_obj_addr()")  //2961
push(ebp)
mov(ebp,esp)
mov(eax,64)
add(eax,7)
mov(ebx,1024)
mul(ebx,eax)
add(ebx,512)
mov(edx,ptr[ebp+2])
mov(ptr[edx+0],ebx)
jmp("func_g_obj_addr()::ret")
label("func_g_obj_addr()::ret")  //2972
mov(esp,ebp)
pop(ebp)
ret()
label("func_get_obj_pos(t_input)")  //2976
push(ebp)
mov(ebp,esp)
sub(esp,2)
dec(esp)
sub(esp,2)
inv(eax,200)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-3])
push(30)
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
call("func_g_obj_addr()")
add(esp,1)
mov(eax,ptr[ebp-4])
mov(ptr[ebp-3],eax)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,2)
mov(ptr[ebp-4],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-4])
call("func_get_int(int)")
add(esp,2)
jz("if_1005::else",ptr[ebp-5])
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,0)
mov(ptr[ebp-6],eax)
pushlea(ptr[ebp-7])
push(ptr[ebp-6])
call("func_get_int(int)")
add(esp,2)
mov(ebx,ptr[ebp-7])
mov(ptr[ebp-2],ebx)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,1)
mov(ptr[ebp-6],eax)
pushlea(ptr[ebp-7])
push(ptr[ebp-6])
call("func_get_int(int)")
add(esp,2)
mov(ebx,ptr[ebp-7])
mov(ptr[ebp-1],ebx)
inc(esp)
inc(esp)
jmp("if_1005::end")
label("if_1005::else")  //3040
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,2)
mov(ptr[ebp-6],eax)
pushlea(ptr[ebp-7])
push(ptr[ebp-6])
push(1)
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
label("if_1005::end")  //3053
inc(esp)
inc(esp)
dec(esp)
mov(ptr[ebp-4],0)
dec(esp)
mov(ptr[ebp-5],0)
dec(esp)
mov(ptr[ebp-6],0)
dec(esp)
mov(ptr[ebp-7],0)
mov(ptr[ebp-4],37)
mov(ptr[ebp-5],39)
mov(ptr[ebp-6],38)
mov(ptr[ebp-7],40)
dec(esp)
mov(ptr[ebp-8],2)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-4])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1006::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
sub(ptr[ebp-2],ebx)
jmp("if_1006::end")
label("if_1006::end")  //3080
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-5])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1007::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
add(ptr[ebp-2],ebx)
jmp("if_1007::end")
label("if_1007::end")  //3092
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-6])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1008::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
add(ptr[ebp-1],ebx)
jmp("if_1008::end")
label("if_1008::end")  //3104
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(ptr[ebp-7])
lea(ecx,ptr[ebp+5])
call("func_vector_int::at(int)")
add(esp,2)
jz("if_1009::end",ptr[ebp-9])
mov(ebx,ptr[ebp-8])
sub(ptr[ebp-1],ebx)
jmp("if_1009::end")
label("if_1009::end")  //3116
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,0)
mov(ptr[ebp-9],eax)
pushlea(ptr[ebp-10])
push(ptr[ebp-9])
push(ptr[ebp-2])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-3])
add(eax,1)
mov(ptr[ebp-9],eax)
pushlea(ptr[ebp-10])
push(ptr[ebp-9])
push(ptr[ebp-1])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
mov(edx,ptr[ebp+11])
push(ptr[ebp-1])
push(ptr[ebp-2])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_get_obj_pos(t_input)::ret")
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
add(esp,2)
label("func_get_obj_pos(t_input)::ret")  //3155
mov(esp,ebp)
pop(ebp)
ret()
label("func_gen_grid()")  //3159
push(ebp)
mov(ebp,esp)
sub(esp,7)
dec(esp)
sub(esp,7)
mov(eax,1024)
mul(eax,8)
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-15])
push(ptr[ebp-8])
call("func_new_geom(int)")
add(esp,2)
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-15])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,7)
inc(esp)
sub(esp,7)
sub(esp,7)
pushlea(ptr[ebp-21])
push(0)
push(0)
push(10)
push(10)
lea(ecx,ptr[ebp-7])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-20])
push(ptr[ebp-21])
pop(ptr[ebp-14])
pop(ptr[ebp-13])
pop(ptr[ebp-12])
pop(ptr[ebp-11])
pop(ptr[ebp-10])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
add(esp,7)
dec(esp)
mov(ptr[ebp-15],0)
jmp("for_8014::condition")
label("for_8014::continue")  //3216
inc(ptr[ebp-15])
label("for_8014::condition")  //3218
mov(eax,ptr[ebp-15])
less(eax,24)
jz("for_8014::break",eax)
push(eax)
mov(eax,255)
shl(eax,24)
push(eax)
mov(eax,ptr[ebp-15])
mul(eax,7)
mov(ebx,64)
add(ebx,eax)
shl(ebx,8)
pop(eax)
add(eax,ebx)
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-1],ebx)
sub(esp,2)
dec(esp)
sub(esp,2)
mov(eax,16)
mul(eax,ptr[ebp-15])
mov(ptr[ebp-18],eax)
pushlea(ptr[ebp-20])
push(ptr[ebp-18])
push(0)
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-19])
push(ptr[ebp-20])
pop(ptr[ebp-17])
pop(ptr[ebp-16])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-18],0)
jmp("for_8015::condition")
label("for_8015::continue")  //3256
inc(ptr[ebp-18])
label("for_8015::condition")  //3258
mov(eax,ptr[ebp-18])
less(eax,16)
jz("for_8015::break",eax)
push(eax)
mov(eax,16)
mul(eax,ptr[ebp-18])
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-16],ebx)
dec(esp)
pushlea(ptr[ebp-19])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-16])
push(ptr[ebp-17])
lea(ecx,ptr[ebp-7])
call("func_t_out_dev::add_wc(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
jmp("for_8015::continue")
label("for_8015::break")  //3284
inc(esp)
jmp("for_8014::continue")
add(esp,2)
label("for_8014::break")  //3288
inc(esp)
mov(edx,ptr[ebp+2])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
pop(ptr[edx+5])
pop(ptr[edx+6])
jmp("func_gen_grid()::ret")
add(esp,7)
add(esp,7)
label("func_gen_grid()::ret")  //3308
mov(esp,ebp)
pop(ebp)
ret()
label("func_cr_test(t_input)")  //3312
push(ebp)
mov(ebp,esp)
sub(esp,2)
sub(esp,2)
pushlea(ptr[ebp-4])
push(ptr[ebp+10])
push(ptr[ebp+9])
push(ptr[ebp+8])
push(ptr[ebp+7])
push(ptr[ebp+6])
push(ptr[ebp+5])
push(ptr[ebp+4])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_get_obj_pos(t_input)")
add(esp,10)
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,2)
sub(esp,2)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
sub(esp,7)
dec(esp)
sub(esp,7)
mov(eax,1024)
mul(eax,4)
mov(ptr[ebp-12],eax)
pushlea(ptr[ebp-19])
push(ptr[ebp-12])
call("func_new_geom(int)")
add(esp,2)
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
pop(ptr[ebp-11])
pop(ptr[ebp-10])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
add(esp,7)
inc(esp)
mov(eax,255)
shl(eax,24)
push(eax)
mov(eax,128)
shl(eax,8)
pop(ebx)
add(ebx,eax)
mov(ptr[ebp-5],ebx)
jz("if_1010::else",1)
sub(esp,2)
sub(esp,2)
pushlea(ptr[ebp-15])
push(0)
push(0)
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-14])
push(ptr[ebp-15])
pop(ptr[ebp-13])
pop(ptr[ebp-12])
add(esp,2)
sub(esp,7)
sub(esp,7)
pushlea(ptr[ebp-27])
push(ptr[ebp-4])
push(ptr[ebp-3])
push(30)
push(30)
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-21])
push(ptr[ebp-22])
push(ptr[ebp-23])
push(ptr[ebp-24])
push(ptr[ebp-25])
push(ptr[ebp-26])
push(ptr[ebp-27])
pop(ptr[ebp-20])
pop(ptr[ebp-19])
pop(ptr[ebp-18])
pop(ptr[ebp-17])
pop(ptr[ebp-16])
pop(ptr[ebp-15])
pop(ptr[ebp-14])
add(esp,7)
mov(eax,255)
shl(eax,24)
push(eax)
mov(eax,128)
shl(eax,8)
pop(ebx)
add(ebx,eax)
push(ebx)
mov(eax,255)
shl(eax,16)
pop(ebx)
add(ebx,eax)
mov(ptr[ebp-5],ebx)
sub(esp,7)
dec(esp)
sub(esp,7)
mov(eax,ptr[ebp-3])
sub(eax,64)
mov(ptr[ebp-28],eax)
pushlea(ptr[ebp-35])
push(ptr[ebp-4])
push(ptr[ebp-28])
push(100)
push(10)
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-29])
push(ptr[ebp-30])
push(ptr[ebp-31])
push(ptr[ebp-32])
push(ptr[ebp-33])
push(ptr[ebp-34])
push(ptr[ebp-35])
pop(ptr[ebp-27])
pop(ptr[ebp-26])
pop(ptr[ebp-25])
pop(ptr[ebp-24])
pop(ptr[ebp-23])
pop(ptr[ebp-22])
pop(ptr[ebp-21])
add(esp,7)
inc(esp)
sub(esp,7)
dec(esp)
sub(esp,7)
mov(eax,200)
add(eax,ptr[ebp-4])
mov(ptr[ebp-35],eax)
pushlea(ptr[ebp-42])
push(ptr[ebp-35])
push(ptr[ebp-3])
push(10)
push(60)
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-36])
push(ptr[ebp-37])
push(ptr[ebp-38])
push(ptr[ebp-39])
push(ptr[ebp-40])
push(ptr[ebp-41])
push(ptr[ebp-42])
pop(ptr[ebp-34])
pop(ptr[ebp-33])
pop(ptr[ebp-32])
pop(ptr[ebp-31])
pop(ptr[ebp-30])
pop(ptr[ebp-29])
pop(ptr[ebp-28])
add(esp,7)
inc(esp)
dec(esp)
pushlea(ptr[ebp-35])
push(ptr[ebp-14])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-20])
push(ptr[ebp-12])
push(ptr[ebp-13])
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
dec(esp)
pushlea(ptr[ebp-35])
push(ptr[ebp-21])
push(ptr[ebp-22])
push(ptr[ebp-23])
push(ptr[ebp-24])
push(ptr[ebp-25])
push(ptr[ebp-26])
push(ptr[ebp-27])
push(ptr[ebp-12])
push(ptr[ebp-13])
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
dec(esp)
pushlea(ptr[ebp-35])
push(ptr[ebp-28])
push(ptr[ebp-29])
push(ptr[ebp-30])
push(ptr[ebp-31])
push(ptr[ebp-32])
push(ptr[ebp-33])
push(ptr[ebp-34])
push(ptr[ebp-12])
push(ptr[ebp-13])
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
add(esp,7)
add(esp,7)
add(esp,7)
sub(esp,7)
sub(esp,7)
pushlea(ptr[ebp-27])
push(0)
push(0)
push(10)
push(10)
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-21])
push(ptr[ebp-22])
push(ptr[ebp-23])
push(ptr[ebp-24])
push(ptr[ebp-25])
push(ptr[ebp-26])
push(ptr[ebp-27])
pop(ptr[ebp-20])
pop(ptr[ebp-19])
pop(ptr[ebp-18])
pop(ptr[ebp-17])
pop(ptr[ebp-16])
pop(ptr[ebp-15])
pop(ptr[ebp-14])
add(esp,7)
dec(esp)
mov(ptr[ebp-21],0)
jmp("for_8016::condition")
label("for_8016::continue")  //3560
inc(ptr[ebp-21])
label("for_8016::condition")  //3562
mov(eax,ptr[ebp-21])
less(eax,64)
jz("for_8016::break",eax)
push(eax)
mov(eax,255)
shl(eax,24)
push(eax)
mov(eax,ptr[ebp-21])
mul(eax,7)
mov(ebx,16)
add(ebx,eax)
shl(ebx,8)
pop(eax)
add(eax,ebx)
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-5],ebx)
sub(esp,2)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-4])
push(eax)
mov(eax,16)
mul(eax,ptr[ebp-21])
pop(ebx)
add(ebx,eax)
mov(ptr[ebp-24],ebx)
pushlea(ptr[ebp-26])
push(ptr[ebp-24])
push(0)
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-25])
push(ptr[ebp-26])
pop(ptr[ebp-23])
pop(ptr[ebp-22])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-24],0)
jmp("for_8017::condition")
label("for_8017::continue")  //3605
inc(ptr[ebp-24])
label("for_8017::condition")  //3607
mov(eax,ptr[ebp-24])
less(eax,16)
jz("for_8017::break",eax)
mov(eax,16)
mul(eax,ptr[ebp-24])
mov(ebx,ptr[ebp-1])
add(ebx,eax)
mov(ptr[ebp-22],ebx)
dec(esp)
pushlea(ptr[ebp-25])
push(ptr[ebp-14])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-20])
push(ptr[ebp-22])
push(ptr[ebp-23])
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::add_with_color(t_out_dev,vec2i)")
add(esp,10)
inc(esp)
jmp("for_8017::continue")
label("for_8017::break")  //3632
inc(esp)
jmp("for_8016::continue")
add(esp,2)
label("for_8016::break")  //3636
inc(esp)
add(esp,7)
add(esp,2)
jmp("if_1010::end")
label("if_1010::else")  //3641
sub(esp,7)
pushlea(ptr[ebp-18])
push(ptr[ebp-4])
push(ptr[ebp-3])
push(30)
push(30)
lea(ecx,ptr[ebp-11])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
pop(ptr[ebp-11])
pop(ptr[ebp-10])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
add(esp,7)
label("if_1010::end")  //3666
sub(esp,2)
lea(ecx,ptr[ebp-13])
call("func_t_mem::`ctor()")
dec(esp)
dec(esp)
mov(eax,1024)
mul(eax,1024)
mov(ptr[ebp-14],eax)
pushlea(ptr[ebp-15])
push(ptr[ebp-14])
call("func_alloc(int)")
add(esp,2)
mov(ebx,ptr[ebp-15])
mov(ptr[ebp-13],ebx)
inc(esp)
inc(esp)
dec(esp)
lea(ecx,ptr[ebp-14])
call("func_t_dev::`ctor()")
mov(ebx,ptr[ebp-13])
mov(ptr[ebp-14],ebx)
dec(esp)
pushlea(ptr[ebp-15])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
lea(ecx,ptr[ebp-14])
call("func_t_dev::write(t_out_dev)")
add(esp,8)
inc(esp)
push(eax)
mov(eax,ptr[ebp-14])
sub(eax,ptr[ebp-13])
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-12],ebx)
mov(edx,ptr[ebp+11])
push(ptr[ebp-12])
push(ptr[ebp-13])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_cr_test(t_input)::ret")
inc(esp)
add(esp,2)
add(esp,7)
add(esp,2)
add(esp,2)
label("func_cr_test(t_input)::ret")  //3718
mov(esp,ebp)
pop(ebp)
ret()
label("func_main(int)")  //3722
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-1])
call("func_g_ptr_addr()")
add(esp,1)
pushlea(ptr[ebp-2])
push(ptr[ebp-1])
push(0)
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
sub(esp,9)
lea(ecx,ptr[ebp-9])
call("func_t_input::`ctor()")
dec(esp)
lea(ecx,ptr[ebp-10])
call("func_t_dev::`ctor()")
mov(ebx,ptr[ebp+2])
mov(ptr[ebp-10],ebx)
sub(esp,2)
pushlea(ptr[ebp-12])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_vec2i()")
add(esp,1)
push(ptr[ebp-11])
push(ptr[ebp-12])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_int()")
add(esp,1)
mov(ebx,ptr[ebp-11])
mov(ptr[ebp-7],ebx)
inc(esp)
sub(esp,3)
pushlea(ptr[ebp-13])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_vector_int()")
add(esp,1)
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,3)
sub(esp,3)
pushlea(ptr[ebp-13])
lea(ecx,ptr[ebp-10])
call("func_t_dev::read_vector_int()")
add(esp,1)
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
pop(ptr[ebp-3])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,3)
sub(esp,2)
sub(esp,2)
pushlea(ptr[ebp-14])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
call("func_cr_test(t_input)")
add(esp,10)
push(ptr[ebp-13])
push(ptr[ebp-14])
pop(ptr[ebp-12])
pop(ptr[ebp-11])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-13])
push(ptr[ebp-11])
call("func_setebx(int)")
add(esp,2)
inc(esp)
mov(ecx,1)
mov(edx,ptr[ebp+3])
push(ptr[ebp-12])
pop(ptr[edx+0])
jmp("func_main(int)::ret")
add(esp,2)
inc(esp)
add(esp,9)
label("func_main(int)::ret")  //3820
mov(esp,ebp)
pop(ebp)
ret()
label("begin")  //3824
dec(esp)
pushlea(ptr[ebp-1])
push(ecx)
call("func_main(int)")
add(esp,2)
mov(eax,ptr[ebp-1])
inc(esp)
mov(err,1)