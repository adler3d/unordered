t_scene{
  t_polygon{
    vector<vec2d> arr;
    string tex;
    string spec;
    string comment;
  }
  vector<t_polygon> polygons;
}

Сделать спецальную конкретную книжку для редактирования сцены.

t_poly_adder=>i_editor_page{
  void dodraw()
  {
    ...
    con.book.draw_scene(con);
    draw(con,new_poly);
  }
  void domove(){
    ...
    con.book.scene.polygons.push_back(new_poly);
  }
}

короче проблемма в том что нужно скопироват код книги и что-то в него добавить а я не хочу это делать,
 т.к уже устал копировать код. но надо.

так теперь над сделать сцену.
сцену сделал.
тепреь я вдруг захотел чтобы у меня внутри сцены было что-то древовидно, потом посмотрел на ограничения первого приблежения и успоколился.
сцена готова теперь её надо внедрить в книгу.
так сцена внедрена.
теперь можно сделать так, чтобы вкладки получали к ней доступ.
они уже получают.
теперь надо переименовать книгу.
ещё я хочу вынести из книги её позицию.
это нужно для того, чтобы я могу вложить одну книгу в другую.
но если я так сделаю тогда я не смогу вставить книгу в нод напрямую.
т.к книга без позиции не заработате.
сделать компонент который задаст начальное положение книги.
компонент сделан.
сделать первую вкладку которая будет создавать многоугольники в книге.




в первом приблежении нельзя вращать и перемещать и масштабировть полигоны.

в первом приблежении:
сделать создание полигонов.
удаление полигонов.
выделенеи полигонов.
перемещение полигонов.

что сделать сразу?
создание сделать просто.
удаление и выделение - сложнее.
перемещение - очень сложно :).

в это очень сложно поверить, но у этих полигонов не будет цвета и текстуры.
зато у них будет спеки.
а спеки важнее чем вся эта фигня.
а спеки не фигня




редактрование полигонов.

чтобы удалить полигон его нужно выделить.

выделение полигонов будет заниматься сама фиговина которая их добавляет?
вообще-то добвление полигона это что-то особое.

короче у меня такая идея.

хорошобы если бы можно было соеденять сцены и разеденять по собственному желанию.

тогда кто-то сможет сделать элемент в пустой сцене, а затем его перетащить в новую сцену.
вставить.

короче есть геометрия которую использует разработчик уровня для создания уровня.
корчое говоря во время разработки уровня на уровне будет разбросаны инструменты которыми этот уровень создавался.
из можно дулать, а можно оставить.
смысл в том, что уровень создаётся кодом.
но просто кодом уровень создать сложно.
поэтому уровень - это код + ресурсы.
причём код нужен только для того, чтобы сегерировать конечный уровень.
тоесть код - это такой препроцессор для ресурсов.
вообще уровень можно сделать и без кода.
сложный уровень сделать без кода очень трудно.

тоесть код помогает делать сложные уровни.
сложный уровень - это такая фиговина которая состоит из компонентов.

короче... в каждом игровом мире есть что-то повторяющееся.
вот это повторяющееся можно вынести в ресурсы.
ещё расположение однотипных объектов - это тоже ресурс.

всё что нужно сделать дальше - это просто взять и сгенерировать из двух ресурсов один.


вроде полигоный должны быть в разных слоях так?
укаждого плоигона своя текстура.
полигоный упорядочены.
но их можно групировать.

как?
можно к кажому полигоны приделать список тегов. например в spec`ификацию.

вообще можно использовать спецификацию для того, чтобы понять какую ему текстуру вещать.

вообще спецификация для полигона - это просто программа или инфа для программы что собственно с ним делать.

итак. что можно делать с полигонами?
можно их создавать?
можно удалять.
можно измнять их.
о можно изменять их описание.
можно их генерировать.
можно их выстраивать в цепочку на обработку.

а вообще мне надо чтобы можно было их: вращать, двигать, масштабировать.
а еще: искажать.
а ещё: копировать, вставлять, удалять, добавлять, загружать, сохратять.

вообще неплохо бы их организовать в иерархию.

если я огранизую их в иерархию, то тогда я смогу на заднем плане сцены сделать руку анимированную руку.
да и вообще этоже здорово иметь возможногсть что-то анимировать.

а затем используя теги растощить из по слоям.
ещё можно коментарий для кждого плигона сделать.

вкладки:
{
  добавлять полигоны
  {
    тут можно добавлять полигоны.
  }
  удалять полигоны
  {
    удаляет выделенный полигон.
  }
}